#version 330
in vec3 pos;
in vec3 normal;
in vec2 UV;
out vec4 outcolor;
uniform vec3 lightpos[8];
uniform vec3 lightcolor[8];
// Values that stay constant for the whole mesh.
uniform sampler2D texSampler;

void main()
{
	float ambient = 0.02;
	vec3 c = vec3(ambient,ambient,ambient);
	for(int li = 0;li<8; li++){
	    vec3 L = lightpos[li] - pos;
		float lightDist = length(L);
		L = (1.0/lightDist) * L;
		lightDist = lightDist+0.5;
		lightDist = min(200,lightDist);
		lightDist = min(1, 100/lightDist);
		vec3 N = normalize(normal);
		vec3 diffuse = max(0.05, dot(L, N)) * lightcolor[li];
		vec3 V = -normalize(pos);
		vec3 H = L + V;
		H = normalize(H);
		float alpha=4;
		float specular = max(0,dot(N,H));
		specular = 0.5* pow(specular, alpha);
		//c += lightDist * (diffuse + specular * lightcolor[li]);
		//diffuse only
		c += lightDist * diffuse;
	}

	vec4 texColor = vec4(c,1.0) * texture( texSampler, UV );
	texColor.w=1.0;
    outcolor = texColor;
};
