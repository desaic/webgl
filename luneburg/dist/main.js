var Du=Object.defineProperty;var Uu=(r,t,e)=>t in r?Du(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var Se=(r,t,e)=>Uu(r,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function e(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=e(i);fetch(i.href,s)}})();/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Bo="174",Zn={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Gn={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},m2=0,h1=1,g2=2,Nu=3,Fu=0,R1=1,_2=2,L0=3,en=0,Ke=1,b0=2,j0=0,Jn=1,u1=2,d1=3,f1=4,x2=5,mn=100,y2=101,v2=102,M2=103,S2=104,b2=200,w2=201,E2=202,T2=203,Kr=204,jr=205,A2=206,C2=207,R2=208,P2=209,I2=210,L2=211,D2=212,U2=213,N2=214,Qr=0,to=1,eo=2,ti=3,no=4,io=5,so=6,ro=7,Fs=0,F2=1,O2=2,Q0=0,B2=1,z2=2,k2=3,V2=4,H2=5,G2=6,W2=7,p1="attached",X2="detached",zo=300,nn=301,_n=302,xs=303,ys=304,zi=306,vs=1e3,m0=1001,Ms=1002,Ne=1003,P1=1004,Ou=1004,Ri=1005,Bu=1005,Re=1006,ls=1007,zu=1007,U0=1008,ku=1008,F0=1009,I1=1010,L1=1011,Ni=1012,ko=1013,sn=1014,r0=1015,ki=1016,Vo=1017,Ho=1018,ei=1020,D1=35902,U1=1021,N1=1022,$e=1023,F1=1024,O1=1025,$n=1026,ni=1027,Go=1028,Os=1029,B1=1030,Wo=1031,Vu=1032,Xo=1033,cs=33776,hs=33777,us=33778,ds=33779,oo=35840,ao=35841,lo=35842,co=35843,ho=36196,uo=37492,fo=37496,po=37808,mo=37809,go=37810,_o=37811,xo=37812,yo=37813,vo=37814,Mo=37815,So=37816,bo=37817,wo=37818,Eo=37819,To=37820,Ao=37821,fs=36492,Co=36494,Ro=36495,z1=36283,Po=36284,Io=36285,Lo=36286,Y2=2200,q2=2201,Z2=2202,Ss=2300,Do=2301,Xr=2302,Wn=2400,Xn=2401,bs=2402,Yo=2500,k1=2501,Hu=0,Gu=1,Wu=2,J2=3200,$2=3201,Xu=3202,Yu=3203,xn=0,K2=1,q0="",Ze="srgb",ii="srgb-linear",ws="linear",ae="srgb",qu=0,Bn=7680,Zu=7681,Ju=7682,$u=7683,Ku=34055,ju=34056,Qu=5386,t3=512,e3=513,n3=514,i3=515,s3=516,r3=517,o3=518,m1=519,j2=512,Q2=513,th=514,V1=515,eh=516,nh=517,ih=518,sh=519,Es=35044,a3=35048,l3=35040,c3=35045,h3=35049,u3=35041,d3=35046,f3=35050,p3=35042,m3="100",g1="300 es",w0=2e3,Ts=2001,g3={COMPUTE:"compute",RENDER:"render"};class B0{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,t);t.target=null}}}const Be=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Rl=1234567;const Kn=Math.PI/180,Fi=180/Math.PI;function u0(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Be[r&255]+Be[r>>8&255]+Be[r>>16&255]+Be[r>>24&255]+"-"+Be[t&255]+Be[t>>8&255]+"-"+Be[t>>16&15|64]+Be[t>>24&255]+"-"+Be[e&63|128]+Be[e>>8&255]+"-"+Be[e>>16&255]+Be[e>>24&255]+Be[n&255]+Be[n>>8&255]+Be[n>>16&255]+Be[n>>24&255]).toLowerCase()}function kt(r,t,e){return Math.max(t,Math.min(e,r))}function H1(r,t){return(r%t+t)%t}function _3(r,t,e,n,i){return n+(r-t)*(i-n)/(e-t)}function x3(r,t,e){return r!==t?(e-r)/(t-r):0}function ps(r,t,e){return(1-e)*r+e*t}function y3(r,t,e,n){return ps(r,t,1-Math.exp(-e*n))}function v3(r,t=1){return t-Math.abs(H1(r,t*2)-t)}function M3(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*(3-2*r))}function S3(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*r*(r*(r*6-15)+10))}function b3(r,t){return r+Math.floor(Math.random()*(t-r+1))}function w3(r,t){return r+Math.random()*(t-r)}function E3(r){return r*(.5-Math.random())}function T3(r){r!==void 0&&(Rl=r);let t=Rl+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function A3(r){return r*Kn}function C3(r){return r*Fi}function R3(r){return(r&r-1)===0&&r!==0}function P3(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function I3(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function L3(r,t,e,n,i){const s=Math.cos,o=Math.sin,a=s(e/2),l=o(e/2),c=s((t+n)/2),h=o((t+n)/2),u=s((t-n)/2),d=o((t-n)/2),f=s((n-t)/2),m=o((n-t)/2);switch(i){case"XYX":r.set(a*h,l*u,l*d,a*c);break;case"YZY":r.set(l*d,a*h,l*u,a*c);break;case"ZXZ":r.set(l*u,l*d,a*h,a*c);break;case"XZX":r.set(a*h,l*m,l*f,a*c);break;case"YXY":r.set(l*f,a*h,l*m,a*c);break;case"ZYZ":r.set(l*m,l*f,a*h,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Je(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Gt(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const rh={DEG2RAD:Kn,RAD2DEG:Fi,generateUUID:u0,clamp:kt,euclideanModulo:H1,mapLinear:_3,inverseLerp:x3,lerp:ps,damp:y3,pingpong:v3,smoothstep:M3,smootherstep:S3,randInt:b3,randFloat:w3,randFloatSpread:E3,seededRandom:T3,degToRad:A3,radToDeg:C3,isPowerOfTwo:R3,ceilPowerOfTwo:P3,floorPowerOfTwo:I3,setQuaternionFromProperEuler:L3,normalize:Gt,denormalize:Je};class Y{constructor(t=0,e=0){Y.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=kt(this.x,t.x,e.x),this.y=kt(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=kt(this.x,t,e),this.y=kt(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(kt(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(kt(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ht{constructor(t,e,n,i,s,o,a,l,c){Ht.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c)}set(t,e,n,i,s,o,a,l,c){const h=this.elements;return h[0]=t,h[1]=i,h[2]=a,h[3]=e,h[4]=s,h[5]=l,h[6]=n,h[7]=o,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],f=n[5],m=n[8],_=i[0],g=i[3],p=i[6],v=i[1],x=i[4],y=i[7],P=i[2],T=i[5],R=i[8];return s[0]=o*_+a*v+l*P,s[3]=o*g+a*x+l*T,s[6]=o*p+a*y+l*R,s[1]=c*_+h*v+u*P,s[4]=c*g+h*x+u*T,s[7]=c*p+h*y+u*R,s[2]=d*_+f*v+m*P,s[5]=d*g+f*x+m*T,s[8]=d*p+f*y+m*R,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8];return e*o*h-e*a*c-n*s*h+n*a*l+i*s*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=h*o-a*c,d=a*l-h*s,f=c*s-o*l,m=e*u+n*d+i*f;if(m===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/m;return t[0]=u*_,t[1]=(i*c-h*n)*_,t[2]=(a*n-i*o)*_,t[3]=d*_,t[4]=(h*e-i*l)*_,t[5]=(i*s-a*e)*_,t[6]=f*_,t[7]=(n*l-c*e)*_,t[8]=(o*e-n*s)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(xa.makeScale(t,e)),this}rotate(t){return this.premultiply(xa.makeRotation(-t)),this}translate(t,e){return this.premultiply(xa.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const xa=new Ht;function oh(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}const D3={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Pi(r,t){return new D3[r](t)}function As(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function ah(){const r=As("canvas");return r.style.display="block",r}const Pl={};function zn(r){r in Pl||(Pl[r]=!0,console.warn(r))}function U3(r,t,e){return new Promise(function(n,i){function s(){switch(r.clientWaitSync(t,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:i();break;case r.TIMEOUT_EXPIRED:setTimeout(s,e);break;default:n()}}setTimeout(s,e)})}function N3(r){const t=r.elements;t[2]=.5*t[2]+.5*t[3],t[6]=.5*t[6]+.5*t[7],t[10]=.5*t[10]+.5*t[11],t[14]=.5*t[14]+.5*t[15]}function F3(r){const t=r.elements;t[11]===-1?(t[10]=-t[10]-1,t[14]=-t[14]):(t[10]=-t[10],t[14]=-t[14]+1)}const Il=new Ht().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Ll=new Ht().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function O3(){const r={enabled:!0,workingColorSpace:ii,spaces:{},convert:function(i,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===ae&&(i.r=tn(i.r),i.g=tn(i.g),i.b=tn(i.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===ae&&(i.r=Di(i.r),i.g=Di(i.g),i.b=Di(i.b))),i},fromWorkingColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},toWorkingColorSpace:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===q0?ws:this.spaces[i].transfer},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,o){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return r.define({[ii]:{primaries:t,whitePoint:n,transfer:ws,toXYZ:Il,fromXYZ:Ll,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Ze},outputColorSpaceConfig:{drawingBufferColorSpace:Ze}},[Ze]:{primaries:t,whitePoint:n,transfer:ae,toXYZ:Il,fromXYZ:Ll,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Ze}}}),r}const Jt=O3();function tn(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Di(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let hi;class lh{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{hi===void 0&&(hi=As("canvas")),hi.width=t.width,hi.height=t.height;const n=hi.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=hi}return e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=As("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=tn(s[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(tn(e[n]/255)*255):e[n]=tn(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let B3=0;class gn{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:B3++}),this.uuid=u0(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(ya(i[o].image)):s.push(ya(i[o]))}else s=ya(i);n.url=s}return e||(t.images[this.uuid]=n),n}}function ya(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?lh.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let z3=0;class Me extends B0{constructor(t=Me.DEFAULT_IMAGE,e=Me.DEFAULT_MAPPING,n=m0,i=m0,s=Re,o=U0,a=$e,l=F0,c=Me.DEFAULT_ANISOTROPY,h=q0){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:z3++}),this.uuid=u0(),this.name="",this.source=new gn(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Y(0,0),this.repeat=new Y(1,1),this.center=new Y(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ht,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==zo)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case vs:t.x=t.x-Math.floor(t.x);break;case m0:t.x=t.x<0?0:1;break;case Ms:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case vs:t.y=t.y-Math.floor(t.y);break;case m0:t.y=t.y<0?0:1;break;case Ms:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}Me.DEFAULT_IMAGE=null;Me.DEFAULT_MAPPING=zo;Me.DEFAULT_ANISOTROPY=1;class te{constructor(t=0,e=0,n=0,i=1){te.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const l=t.elements,c=l[0],h=l[4],u=l[8],d=l[1],f=l[5],m=l[9],_=l[2],g=l[6],p=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-_)<.01&&Math.abs(m-g)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+_)<.1&&Math.abs(m+g)<.1&&Math.abs(c+f+p-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const x=(c+1)/2,y=(f+1)/2,P=(p+1)/2,T=(h+d)/4,R=(u+_)/4,I=(m+g)/4;return x>y&&x>P?x<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(x),i=T/n,s=R/n):y>P?y<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(y),n=T/i,s=I/i):P<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(P),n=R/s,i=I/s),this.set(n,i,s,e),this}let v=Math.sqrt((g-m)*(g-m)+(u-_)*(u-_)+(d-h)*(d-h));return Math.abs(v)<.001&&(v=1),this.x=(g-m)/v,this.y=(u-_)/v,this.z=(d-h)/v,this.w=Math.acos((c+f+p-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=kt(this.x,t.x,e.x),this.y=kt(this.y,t.y,e.y),this.z=kt(this.z,t.z,e.z),this.w=kt(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=kt(this.x,t,e),this.y=kt(this.y,t,e),this.z=kt(this.z,t,e),this.w=kt(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(kt(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class qo extends B0{constructor(t=1,e=1,n={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new te(0,0,t,e),this.scissorTest=!1,this.viewport=new te(0,0,t,e);const i={width:t,height:e,depth:1};n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Re,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},n);const s=new Me(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace);s.flipY=!1,s.generateMipmaps=n.generateMipmaps,s.internalFormat=n.internalFormat,this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new gn(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class O0 extends qo{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class Bs extends Me{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ne,this.minFilter=Ne,this.wrapR=m0,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class k3 extends O0{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Bs(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class Zo extends Me{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=Ne,this.minFilter=Ne,this.wrapR=m0,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class V3 extends O0{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Zo(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class de{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,o,a){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const d=s[o+0],f=s[o+1],m=s[o+2],_=s[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=m,t[e+3]=_;return}if(u!==_||l!==d||c!==f||h!==m){let g=1-a;const p=l*d+c*f+h*m+u*_,v=p>=0?1:-1,x=1-p*p;if(x>Number.EPSILON){const P=Math.sqrt(x),T=Math.atan2(P,p*v);g=Math.sin(g*T)/P,a=Math.sin(a*T)/P}const y=a*v;if(l=l*g+d*y,c=c*g+f*y,h=h*g+m*y,u=u*g+_*y,g===1-a){const P=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=P,c*=P,h*=P,u*=P}}t[e]=l,t[e+1]=c,t[e+2]=h,t[e+3]=u}static multiplyQuaternionsFlat(t,e,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=s[o],d=s[o+1],f=s[o+2],m=s[o+3];return t[e]=a*m+h*u+l*f-c*d,t[e+1]=l*m+h*d+c*u-a*f,t[e+2]=c*m+h*f+a*d-l*u,t[e+3]=h*m-a*u-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),h=a(i/2),u=a(s/2),d=l(n/2),f=l(i/2),m=l(s/2);switch(o){case"XYZ":this._x=d*h*u+c*f*m,this._y=c*f*u-d*h*m,this._z=c*h*m+d*f*u,this._w=c*h*u-d*f*m;break;case"YXZ":this._x=d*h*u+c*f*m,this._y=c*f*u-d*h*m,this._z=c*h*m-d*f*u,this._w=c*h*u+d*f*m;break;case"ZXY":this._x=d*h*u-c*f*m,this._y=c*f*u+d*h*m,this._z=c*h*m+d*f*u,this._w=c*h*u-d*f*m;break;case"ZYX":this._x=d*h*u-c*f*m,this._y=c*f*u+d*h*m,this._z=c*h*m-d*f*u,this._w=c*h*u+d*f*m;break;case"YZX":this._x=d*h*u+c*f*m,this._y=c*f*u+d*h*m,this._z=c*h*m-d*f*u,this._w=c*h*u-d*f*m;break;case"XZY":this._x=d*h*u-c*f*m,this._y=c*f*u-d*h*m,this._z=c*h*m+d*f*u,this._w=c*h*u+d*f*m;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],a=e[5],l=e[9],c=e[2],h=e[6],u=e[10],d=n+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(h-l)*f,this._y=(s-c)*f,this._z=(o-i)*f}else if(n>a&&n>u){const f=2*Math.sqrt(1+n-a-u);this._w=(h-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(s+c)/f}else if(a>u){const f=2*Math.sqrt(1+a-n-u);this._w=(s-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+h)/f}else{const f=2*Math.sqrt(1+u-n-a);this._w=(o-i)/f,this._x=(s+c)/f,this._y=(l+h)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<Number.EPSILON?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(kt(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,o=t._w,a=e._x,l=e._y,c=e._z,h=e._w;return this._x=n*h+o*a+i*c-s*l,this._y=i*h+o*l+s*a-n*c,this._z=s*h+o*c+n*l-i*a,this._w=o*h-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*s+e*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,a),u=Math.sin((1-e)*h)/c,d=Math.sin(e*h)/c;return this._w=o*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class E{constructor(t=0,e=0,n=0){E.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(Dl.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(Dl.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,a=t.z,l=t.w,c=2*(o*i-a*n),h=2*(a*e-s*i),u=2*(s*n-o*e);return this.x=e+l*c+o*u-a*h,this.y=n+l*h+a*c-s*u,this.z=i+l*u+s*h-o*c,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=kt(this.x,t.x,e.x),this.y=kt(this.y,t.y,e.y),this.z=kt(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=kt(this.x,t,e),this.y=kt(this.y,t,e),this.z=kt(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(kt(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return va.copy(this).projectOnVector(t),this.sub(va)}reflect(t){return this.sub(va.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(kt(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const va=new E,Dl=new de;class je{constructor(t=new E(1/0,1/0,1/0),e=new E(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(x0.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(x0.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=x0.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const s=n.getAttribute("position");if(e===!0&&s!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,x0):x0.fromBufferAttribute(s,o),x0.applyMatrix4(t.matrixWorld),this.expandByPoint(x0);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Zs.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Zs.copy(n.boundingBox)),Zs.applyMatrix4(t.matrixWorld),this.union(Zs)}const i=t.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,x0),x0.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Wi),Js.subVectors(this.max,Wi),ui.subVectors(t.a,Wi),di.subVectors(t.b,Wi),fi.subVectors(t.c,Wi),on.subVectors(di,ui),an.subVectors(fi,di),wn.subVectors(ui,fi);let e=[0,-on.z,on.y,0,-an.z,an.y,0,-wn.z,wn.y,on.z,0,-on.x,an.z,0,-an.x,wn.z,0,-wn.x,-on.y,on.x,0,-an.y,an.x,0,-wn.y,wn.x,0];return!Ma(e,ui,di,fi,Js)||(e=[1,0,0,0,1,0,0,0,1],!Ma(e,ui,di,fi,Js))?!1:($s.crossVectors(on,an),e=[$s.x,$s.y,$s.z],Ma(e,ui,di,fi,Js))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,x0).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(x0).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(k0[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),k0[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),k0[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),k0[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),k0[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),k0[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),k0[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),k0[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(k0),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const k0=[new E,new E,new E,new E,new E,new E,new E,new E],x0=new E,Zs=new je,ui=new E,di=new E,fi=new E,on=new E,an=new E,wn=new E,Wi=new E,Js=new E,$s=new E,En=new E;function Ma(r,t,e,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){En.fromArray(r,s);const a=i.x*Math.abs(En.x)+i.y*Math.abs(En.y)+i.z*Math.abs(En.z),l=t.dot(En),c=e.dot(En),h=n.dot(En);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>a)return!1}return!0}const H3=new je,Xi=new E,Sa=new E;class Ge{constructor(t=new E,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):H3.setFromPoints(t).getCenter(n);let i=0;for(let s=0,o=t.length;s<o;s++)i=Math.max(i,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Xi.subVectors(t,this.center);const e=Xi.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(Xi,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(Sa.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Xi.copy(t.center).add(Sa)),this.expandByPoint(Xi.copy(t.center).sub(Sa))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const V0=new E,ba=new E,Ks=new E,ln=new E,wa=new E,js=new E,Ea=new E;class oi{constructor(t=new E,e=new E(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,V0)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=V0.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(V0.copy(this.origin).addScaledVector(this.direction,e),V0.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){ba.copy(t).add(e).multiplyScalar(.5),Ks.copy(e).sub(t).normalize(),ln.copy(this.origin).sub(ba);const s=t.distanceTo(e)*.5,o=-this.direction.dot(Ks),a=ln.dot(this.direction),l=-ln.dot(Ks),c=ln.lengthSq(),h=Math.abs(1-o*o);let u,d,f,m;if(h>0)if(u=o*l-a,d=o*a-l,m=s*h,u>=0)if(d>=-m)if(d<=m){const _=1/h;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*l)+c}else d=s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d=-s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;else d<=-m?(u=Math.max(0,-(-o*s+a)),d=u>0?-s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c):d<=m?(u=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(u=Math.max(0,-(o*s+a)),d=u>0?s:Math.min(Math.max(-s,-l),s),f=-u*u+d*(d+2*l)+c);else d=o>0?-s:s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(ba).addScaledVector(Ks,d),f}intersectSphere(t,e){V0.subVectors(t.center,this.origin);const n=V0.dot(this.direction),i=V0.dot(V0)-n*n,s=t.radius*t.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,o,a,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),h>=0?(s=(t.min.y-d.y)*h,o=(t.max.y-d.y)*h):(s=(t.max.y-d.y)*h,o=(t.min.y-d.y)*h),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),u>=0?(a=(t.min.z-d.z)*u,l=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,l=(t.min.z-d.z)*u),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,V0)!==null}intersectTriangle(t,e,n,i,s){wa.subVectors(e,t),js.subVectors(n,t),Ea.crossVectors(wa,js);let o=this.direction.dot(Ea),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ln.subVectors(this.origin,t);const l=a*this.direction.dot(js.crossVectors(ln,js));if(l<0)return null;const c=a*this.direction.dot(wa.cross(ln));if(c<0||l+c>o)return null;const h=-a*ln.dot(Ea);return h<0?null:this.at(h/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Dt{constructor(t,e,n,i,s,o,a,l,c,h,u,d,f,m,_,g){Dt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c,h,u,d,f,m,_,g)}set(t,e,n,i,s,o,a,l,c,h,u,d,f,m,_,g){const p=this.elements;return p[0]=t,p[4]=e,p[8]=n,p[12]=i,p[1]=s,p[5]=o,p[9]=a,p[13]=l,p[2]=c,p[6]=h,p[10]=u,p[14]=d,p[3]=f,p[7]=m,p[11]=_,p[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Dt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/pi.setFromMatrixColumn(t,0).length(),s=1/pi.setFromMatrixColumn(t,1).length(),o=1/pi.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(s),u=Math.sin(s);if(t.order==="XYZ"){const d=o*h,f=o*u,m=a*h,_=a*u;e[0]=l*h,e[4]=-l*u,e[8]=c,e[1]=f+m*c,e[5]=d-_*c,e[9]=-a*l,e[2]=_-d*c,e[6]=m+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*h,f=l*u,m=c*h,_=c*u;e[0]=d+_*a,e[4]=m*a-f,e[8]=o*c,e[1]=o*u,e[5]=o*h,e[9]=-a,e[2]=f*a-m,e[6]=_+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*h,f=l*u,m=c*h,_=c*u;e[0]=d-_*a,e[4]=-o*u,e[8]=m+f*a,e[1]=f+m*a,e[5]=o*h,e[9]=_-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*h,f=o*u,m=a*h,_=a*u;e[0]=l*h,e[4]=m*c-f,e[8]=d*c+_,e[1]=l*u,e[5]=_*c+d,e[9]=f*c-m,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,m=a*l,_=a*c;e[0]=l*h,e[4]=_-d*u,e[8]=m*u+f,e[1]=u,e[5]=o*h,e[9]=-a*h,e[2]=-c*h,e[6]=f*u+m,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*l,f=o*c,m=a*l,_=a*c;e[0]=l*h,e[4]=-u,e[8]=c*h,e[1]=d*u+_,e[5]=o*h,e[9]=f*u-m,e[2]=m*u-f,e[6]=a*h,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(G3,t,W3)}lookAt(t,e,n){const i=this.elements;return l0.subVectors(t,e),l0.lengthSq()===0&&(l0.z=1),l0.normalize(),cn.crossVectors(n,l0),cn.lengthSq()===0&&(Math.abs(n.z)===1?l0.x+=1e-4:l0.z+=1e-4,l0.normalize(),cn.crossVectors(n,l0)),cn.normalize(),Qs.crossVectors(l0,cn),i[0]=cn.x,i[4]=Qs.x,i[8]=l0.x,i[1]=cn.y,i[5]=Qs.y,i[9]=l0.y,i[2]=cn.z,i[6]=Qs.z,i[10]=l0.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],f=n[13],m=n[2],_=n[6],g=n[10],p=n[14],v=n[3],x=n[7],y=n[11],P=n[15],T=i[0],R=i[4],I=i[8],b=i[12],M=i[1],L=i[5],z=i[9],O=i[13],V=i[2],X=i[6],G=i[10],$=i[14],H=i[3],nt=i[7],ht=i[11],xt=i[15];return s[0]=o*T+a*M+l*V+c*H,s[4]=o*R+a*L+l*X+c*nt,s[8]=o*I+a*z+l*G+c*ht,s[12]=o*b+a*O+l*$+c*xt,s[1]=h*T+u*M+d*V+f*H,s[5]=h*R+u*L+d*X+f*nt,s[9]=h*I+u*z+d*G+f*ht,s[13]=h*b+u*O+d*$+f*xt,s[2]=m*T+_*M+g*V+p*H,s[6]=m*R+_*L+g*X+p*nt,s[10]=m*I+_*z+g*G+p*ht,s[14]=m*b+_*O+g*$+p*xt,s[3]=v*T+x*M+y*V+P*H,s[7]=v*R+x*L+y*X+P*nt,s[11]=v*I+x*z+y*G+P*ht,s[15]=v*b+x*O+y*$+P*xt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],a=t[5],l=t[9],c=t[13],h=t[2],u=t[6],d=t[10],f=t[14],m=t[3],_=t[7],g=t[11],p=t[15];return m*(+s*l*u-i*c*u-s*a*d+n*c*d+i*a*f-n*l*f)+_*(+e*l*f-e*c*d+s*o*d-i*o*f+i*c*h-s*l*h)+g*(+e*c*u-e*a*f-s*o*u+n*o*f+s*a*h-n*c*h)+p*(-i*a*h-e*l*u+e*a*d+i*o*u-n*o*d+n*l*h)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],h=t[8],u=t[9],d=t[10],f=t[11],m=t[12],_=t[13],g=t[14],p=t[15],v=u*g*c-_*d*c+_*l*f-a*g*f-u*l*p+a*d*p,x=m*d*c-h*g*c-m*l*f+o*g*f+h*l*p-o*d*p,y=h*_*c-m*u*c+m*a*f-o*_*f-h*a*p+o*u*p,P=m*u*l-h*_*l-m*a*d+o*_*d+h*a*g-o*u*g,T=e*v+n*x+i*y+s*P;if(T===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const R=1/T;return t[0]=v*R,t[1]=(_*d*s-u*g*s-_*i*f+n*g*f+u*i*p-n*d*p)*R,t[2]=(a*g*s-_*l*s+_*i*c-n*g*c-a*i*p+n*l*p)*R,t[3]=(u*l*s-a*d*s-u*i*c+n*d*c+a*i*f-n*l*f)*R,t[4]=x*R,t[5]=(h*g*s-m*d*s+m*i*f-e*g*f-h*i*p+e*d*p)*R,t[6]=(m*l*s-o*g*s-m*i*c+e*g*c+o*i*p-e*l*p)*R,t[7]=(o*d*s-h*l*s+h*i*c-e*d*c-o*i*f+e*l*f)*R,t[8]=y*R,t[9]=(m*u*s-h*_*s-m*n*f+e*_*f+h*n*p-e*u*p)*R,t[10]=(o*_*s-m*a*s+m*n*c-e*_*c-o*n*p+e*a*p)*R,t[11]=(h*a*s-o*u*s-h*n*c+e*u*c+o*n*f-e*a*f)*R,t[12]=P*R,t[13]=(h*_*i-m*u*i+m*n*d-e*_*d-h*n*g+e*u*g)*R,t[14]=(m*a*i-o*_*i-m*n*l+e*_*l+o*n*g-e*a*g)*R,t[15]=(o*u*i-h*a*i+h*n*l-e*u*l-o*n*d+e*a*d)*R,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,a=t.y,l=t.z,c=s*o,h=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,h*a+n,h*l-i*o,0,c*l-i*a,h*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,o){return this.set(1,n,s,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,o=e._y,a=e._z,l=e._w,c=s+s,h=o+o,u=a+a,d=s*c,f=s*h,m=s*u,_=o*h,g=o*u,p=a*u,v=l*c,x=l*h,y=l*u,P=n.x,T=n.y,R=n.z;return i[0]=(1-(_+p))*P,i[1]=(f+y)*P,i[2]=(m-x)*P,i[3]=0,i[4]=(f-y)*T,i[5]=(1-(d+p))*T,i[6]=(g+v)*T,i[7]=0,i[8]=(m+x)*R,i[9]=(g-v)*R,i[10]=(1-(d+_))*R,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=pi.set(i[0],i[1],i[2]).length();const o=pi.set(i[4],i[5],i[6]).length(),a=pi.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],y0.copy(this);const c=1/s,h=1/o,u=1/a;return y0.elements[0]*=c,y0.elements[1]*=c,y0.elements[2]*=c,y0.elements[4]*=h,y0.elements[5]*=h,y0.elements[6]*=h,y0.elements[8]*=u,y0.elements[9]*=u,y0.elements[10]*=u,e.setFromRotationMatrix(y0),n.x=s,n.y=o,n.z=a,this}makePerspective(t,e,n,i,s,o,a=w0){const l=this.elements,c=2*s/(e-t),h=2*s/(n-i),u=(e+t)/(e-t),d=(n+i)/(n-i);let f,m;if(a===w0)f=-(o+s)/(o-s),m=-2*o*s/(o-s);else if(a===Ts)f=-o/(o-s),m=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=d,l[13]=0,l[2]=0,l[6]=0,l[10]=f,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,e,n,i,s,o,a=w0){const l=this.elements,c=1/(e-t),h=1/(n-i),u=1/(o-s),d=(e+t)*c,f=(n+i)*h;let m,_;if(a===w0)m=(o+s)*u,_=-2*u;else if(a===Ts)m=s*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-d,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-f,l[2]=0,l[6]=0,l[10]=_,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const pi=new E,y0=new Dt,G3=new E(0,0,0),W3=new E(1,1,1),cn=new E,Qs=new E,l0=new E,Ul=new Dt,Nl=new de;class Qe{constructor(t=0,e=0,n=0,i=Qe.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],h=i[9],u=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(kt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-h,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-kt(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(kt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-kt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(kt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-kt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-h,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Ul.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Ul,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Nl.setFromEuler(this),this.setFromQuaternion(Nl,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Qe.DEFAULT_ORDER="XYZ";class Jo{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let X3=0;const Fl=new E,mi=new de,H0=new Dt,tr=new E,Yi=new E,Y3=new E,q3=new de,Ol=new E(1,0,0),Bl=new E(0,1,0),zl=new E(0,0,1),kl={type:"added"},Z3={type:"removed"},gi={type:"childadded",child:null},Ta={type:"childremoved",child:null};class Zt extends B0{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:X3++}),this.uuid=u0(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Zt.DEFAULT_UP.clone();const t=new E,e=new Qe,n=new de,i=new E(1,1,1);function s(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Dt},normalMatrix:{value:new Ht}}),this.matrix=new Dt,this.matrixWorld=new Dt,this.matrixAutoUpdate=Zt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Jo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return mi.setFromAxisAngle(t,e),this.quaternion.multiply(mi),this}rotateOnWorldAxis(t,e){return mi.setFromAxisAngle(t,e),this.quaternion.premultiply(mi),this}rotateX(t){return this.rotateOnAxis(Ol,t)}rotateY(t){return this.rotateOnAxis(Bl,t)}rotateZ(t){return this.rotateOnAxis(zl,t)}translateOnAxis(t,e){return Fl.copy(t).applyQuaternion(this.quaternion),this.position.add(Fl.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(Ol,t)}translateY(t){return this.translateOnAxis(Bl,t)}translateZ(t){return this.translateOnAxis(zl,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(H0.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?tr.copy(t):tr.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Yi.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?H0.lookAt(Yi,tr,this.up):H0.lookAt(tr,Yi,this.up),this.quaternion.setFromRotationMatrix(H0),i&&(H0.extractRotation(i.matrixWorld),mi.setFromRotationMatrix(H0),this.quaternion.premultiply(mi.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(kl),gi.child=t,this.dispatchEvent(gi),gi.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(Z3),Ta.child=t,this.dispatchEvent(Ta),Ta.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),H0.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),H0.multiply(t.parent.matrixWorld)),t.applyMatrix4(H0),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(kl),gi.child=t,this.dispatchEvent(gi),gi.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yi,t,Y3),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Yi,q3,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.visibility=this._visibility,i.active=this._active,i.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.geometryCount=this._geometryCount,i.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere={center:i.boundingSphere.center.toArray(),radius:i.boundingSphere.radius}),this.boundingBox!==null&&(i.boundingBox={min:i.boundingBox.min.toArray(),max:i.boundingBox.max.toArray()}));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];s(t.shapes,u)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(t.materials,this.material[l]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),h=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),m=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),m.length>0&&(n.nodes=m)}return n.object=i,n;function o(a){const l=[];for(const c in a){const h=a[c];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Zt.DEFAULT_UP=new E(0,1,0);Zt.DEFAULT_MATRIX_AUTO_UPDATE=!0;Zt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const v0=new E,G0=new E,Aa=new E,W0=new E,_i=new E,xi=new E,Vl=new E,Ca=new E,Ra=new E,Pa=new E,Ia=new te,La=new te,Da=new te;class s0{constructor(t=new E,e=new E,n=new E){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),v0.subVectors(t,e),i.cross(v0);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){v0.subVectors(i,e),G0.subVectors(n,e),Aa.subVectors(t,e);const o=v0.dot(v0),a=v0.dot(G0),l=v0.dot(Aa),c=G0.dot(G0),h=G0.dot(Aa),u=o*c-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(c*l-a*h)*d,m=(o*h-a*l)*d;return s.set(1-f-m,m,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,W0)===null?!1:W0.x>=0&&W0.y>=0&&W0.x+W0.y<=1}static getInterpolation(t,e,n,i,s,o,a,l){return this.getBarycoord(t,e,n,i,W0)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,W0.x),l.addScaledVector(o,W0.y),l.addScaledVector(a,W0.z),l)}static getInterpolatedAttribute(t,e,n,i,s,o){return Ia.setScalar(0),La.setScalar(0),Da.setScalar(0),Ia.fromBufferAttribute(t,e),La.fromBufferAttribute(t,n),Da.fromBufferAttribute(t,i),o.setScalar(0),o.addScaledVector(Ia,s.x),o.addScaledVector(La,s.y),o.addScaledVector(Da,s.z),o}static isFrontFacing(t,e,n,i){return v0.subVectors(n,e),G0.subVectors(t,e),v0.cross(G0).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return v0.subVectors(this.c,this.b),G0.subVectors(this.a,this.b),v0.cross(G0).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return s0.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return s0.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,s){return s0.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return s0.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return s0.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let o,a;_i.subVectors(i,n),xi.subVectors(s,n),Ca.subVectors(t,n);const l=_i.dot(Ca),c=xi.dot(Ca);if(l<=0&&c<=0)return e.copy(n);Ra.subVectors(t,i);const h=_i.dot(Ra),u=xi.dot(Ra);if(h>=0&&u<=h)return e.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return o=l/(l-h),e.copy(n).addScaledVector(_i,o);Pa.subVectors(t,s);const f=_i.dot(Pa),m=xi.dot(Pa);if(m>=0&&f<=m)return e.copy(s);const _=f*c-l*m;if(_<=0&&c>=0&&m<=0)return a=c/(c-m),e.copy(n).addScaledVector(xi,a);const g=h*m-f*u;if(g<=0&&u-h>=0&&f-m>=0)return Vl.subVectors(s,i),a=(u-h)/(u-h+(f-m)),e.copy(i).addScaledVector(Vl,a);const p=1/(g+_+d);return o=_*p,a=d*p,e.copy(n).addScaledVector(_i,o).addScaledVector(xi,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const ch={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},hn={h:0,s:0,l:0},er={h:0,s:0,l:0};function Ua(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}class dt{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Ze){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Jt.toWorkingColorSpace(this,e),this}setRGB(t,e,n,i=Jt.workingColorSpace){return this.r=t,this.g=e,this.b=n,Jt.toWorkingColorSpace(this,i),this}setHSL(t,e,n,i=Jt.workingColorSpace){if(t=H1(t,1),e=kt(e,0,1),n=kt(n,0,1),e===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+e):n+e-n*e,o=2*n-s;this.r=Ua(o,s,t+1/3),this.g=Ua(o,s,t),this.b=Ua(o,s,t-1/3)}return Jt.toWorkingColorSpace(this,i),this}setStyle(t,e=Ze){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Ze){const n=ch[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=tn(t.r),this.g=tn(t.g),this.b=tn(t.b),this}copyLinearToSRGB(t){return this.r=Di(t.r),this.g=Di(t.g),this.b=Di(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Ze){return Jt.fromWorkingColorSpace(ze.copy(this),t),Math.round(kt(ze.r*255,0,255))*65536+Math.round(kt(ze.g*255,0,255))*256+Math.round(kt(ze.b*255,0,255))}getHexString(t=Ze){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Jt.workingColorSpace){Jt.fromWorkingColorSpace(ze.copy(this),e);const n=ze.r,i=ze.g,s=ze.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const h=(a+o)/2;if(a===o)l=0,c=0;else{const u=o-a;switch(c=h<=.5?u/(o+a):u/(2-o-a),o){case n:l=(i-s)/u+(i<s?6:0);break;case i:l=(s-n)/u+2;break;case s:l=(n-i)/u+4;break}l/=6}return t.h=l,t.s=c,t.l=h,t}getRGB(t,e=Jt.workingColorSpace){return Jt.fromWorkingColorSpace(ze.copy(this),e),t.r=ze.r,t.g=ze.g,t.b=ze.b,t}getStyle(t=Ze){Jt.fromWorkingColorSpace(ze.copy(this),t);const e=ze.r,n=ze.g,i=ze.b;return t!==Ze?`color(${t} ${e.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(t,e,n){return this.getHSL(hn),this.setHSL(hn.h+t,hn.s+e,hn.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(hn),t.getHSL(er);const n=ps(hn.h,er.h,e),i=ps(hn.s,er.s,e),s=ps(hn.l,er.l,e);return this.setHSL(n,i,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,s=t.elements;return this.r=s[0]*e+s[3]*n+s[6]*i,this.g=s[1]*e+s[4]*n+s[7]*i,this.b=s[2]*e+s[5]*n+s[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const ze=new dt;dt.NAMES=ch;let J3=0;class We extends B0{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:J3++}),this.uuid=u0(),this.name="",this.type="Material",this.blending=Jn,this.side=en,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=Kr,this.blendDst=jr,this.blendEquation=mn,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new dt(0,0,0),this.blendAlpha=0,this.depthFunc=ti,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=m1,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Bn,this.stencilZFail=Bn,this.stencilZPass=Bn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const i=this[e];if(i===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Jn&&(n.blending=this.blending),this.side!==en&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==Kr&&(n.blendSrc=this.blendSrc),this.blendDst!==jr&&(n.blendDst=this.blendDst),this.blendEquation!==mn&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==ti&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==m1&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Bn&&(n.stencilFail=this.stencilFail),this.stencilZFail!==Bn&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==Bn&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(e){const s=i(t.textures),o=i(t.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class A0 extends We{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new dt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qe,this.combine=Fs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Z0=$3();function $3(){const r=new ArrayBuffer(4),t=new Float32Array(r),e=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;(c&8388608)===0;)c<<=1,h-=8388608;c&=-8388609,h+=947912704,s[l]=c|h}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:a}}function i0(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=kt(r,-65504,65504),Z0.floatView[0]=r;const t=Z0.uint32View[0],e=t>>23&511;return Z0.baseTable[e]+((t&8388607)>>Z0.shiftTable[e])}function ss(r){const t=r>>10;return Z0.uint32View[0]=Z0.mantissaTable[Z0.offsetTable[t]+(r&1023)]+Z0.exponentTable[t],Z0.floatView[0]}class K3{static toHalfFloat(t){return i0(t)}static fromHalfFloat(t){return ss(t)}}const Ee=new E,nr=new Y;let j3=0;class ce{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:j3++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Es,this.updateRanges=[],this.gpuType=r0,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)nr.fromBufferAttribute(this,e),nr.applyMatrix3(t),this.setXY(e,nr.x,nr.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Ee.fromBufferAttribute(this,e),Ee.applyMatrix3(t),this.setXYZ(e,Ee.x,Ee.y,Ee.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ee.fromBufferAttribute(this,e),Ee.applyMatrix4(t),this.setXYZ(e,Ee.x,Ee.y,Ee.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ee.fromBufferAttribute(this,e),Ee.applyNormalMatrix(t),this.setXYZ(e,Ee.x,Ee.y,Ee.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ee.fromBufferAttribute(this,e),Ee.transformDirection(t),this.setXYZ(e,Ee.x,Ee.y,Ee.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Je(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Gt(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Je(e,this.array)),e}setX(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Je(e,this.array)),e}setY(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Je(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Je(e,this.array)),e}setW(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array),i=Gt(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array),i=Gt(i,this.array),s=Gt(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Es&&(t.usage=this.usage),t}}class Q3 extends ce{constructor(t,e,n){super(new Int8Array(t),e,n)}}class td extends ce{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class ed extends ce{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class nd extends ce{constructor(t,e,n){super(new Int16Array(t),e,n)}}class G1 extends ce{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class id extends ce{constructor(t,e,n){super(new Int32Array(t),e,n)}}class W1 extends ce{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class sd extends ce{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=ss(this.array[t*this.itemSize]);return this.normalized&&(e=Je(e,this.array)),e}setX(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize]=i0(e),this}getY(t){let e=ss(this.array[t*this.itemSize+1]);return this.normalized&&(e=Je(e,this.array)),e}setY(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize+1]=i0(e),this}getZ(t){let e=ss(this.array[t*this.itemSize+2]);return this.normalized&&(e=Je(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize+2]=i0(e),this}getW(t){let e=ss(this.array[t*this.itemSize+3]);return this.normalized&&(e=Je(e,this.array)),e}setW(t,e){return this.normalized&&(e=Gt(e,this.array)),this.array[t*this.itemSize+3]=i0(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array)),this.array[t+0]=i0(e),this.array[t+1]=i0(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array),i=Gt(i,this.array)),this.array[t+0]=i0(e),this.array[t+1]=i0(n),this.array[t+2]=i0(i),this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array),i=Gt(i,this.array),s=Gt(s,this.array)),this.array[t+0]=i0(e),this.array[t+1]=i0(n),this.array[t+2]=i0(i),this.array[t+3]=i0(s),this}}class St extends ce{constructor(t,e,n){super(new Float32Array(t),e,n)}}let rd=0;const p0=new Dt,Na=new Zt,yi=new E,c0=new je,qi=new je,Le=new E;class Vt extends B0{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:rd++}),this.uuid=u0(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(oh(t)?W1:G1)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Ht().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return p0.makeRotationFromQuaternion(t),this.applyMatrix4(p0),this}rotateX(t){return p0.makeRotationX(t),this.applyMatrix4(p0),this}rotateY(t){return p0.makeRotationY(t),this.applyMatrix4(p0),this}rotateZ(t){return p0.makeRotationZ(t),this.applyMatrix4(p0),this}translate(t,e,n){return p0.makeTranslation(t,e,n),this.applyMatrix4(p0),this}scale(t,e,n){return p0.makeScale(t,e,n),this.applyMatrix4(p0),this}lookAt(t){return Na.lookAt(t),Na.updateMatrix(),this.applyMatrix4(Na.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(yi).negate(),this.translate(yi.x,yi.y,yi.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,s=t.length;i<s;i++){const o=t[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new St(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const s=t[i];e.setXYZ(i,s.x,s.y,s.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new je);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new E(-1/0,-1/0,-1/0),new E(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const s=e[n];c0.setFromBufferAttribute(s),this.morphTargetsRelative?(Le.addVectors(this.boundingBox.min,c0.min),this.boundingBox.expandByPoint(Le),Le.addVectors(this.boundingBox.max,c0.max),this.boundingBox.expandByPoint(Le)):(this.boundingBox.expandByPoint(c0.min),this.boundingBox.expandByPoint(c0.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ge);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new E,1/0);return}if(t){const n=this.boundingSphere.center;if(c0.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];qi.setFromBufferAttribute(a),this.morphTargetsRelative?(Le.addVectors(c0.min,qi.min),c0.expandByPoint(Le),Le.addVectors(c0.max,qi.max),c0.expandByPoint(Le)):(c0.expandByPoint(qi.min),c0.expandByPoint(qi.max))}c0.getCenter(n);let i=0;for(let s=0,o=t.count;s<o;s++)Le.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(Le));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],l=this.morphTargetsRelative;for(let c=0,h=a.count;c<h;c++)Le.fromBufferAttribute(a,c),l&&(yi.fromBufferAttribute(t,c),Le.add(yi)),i=Math.max(i,n.distanceToSquared(Le))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,s=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ce(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let I=0;I<n.count;I++)a[I]=new E,l[I]=new E;const c=new E,h=new E,u=new E,d=new Y,f=new Y,m=new Y,_=new E,g=new E;function p(I,b,M){c.fromBufferAttribute(n,I),h.fromBufferAttribute(n,b),u.fromBufferAttribute(n,M),d.fromBufferAttribute(s,I),f.fromBufferAttribute(s,b),m.fromBufferAttribute(s,M),h.sub(c),u.sub(c),f.sub(d),m.sub(d);const L=1/(f.x*m.y-m.x*f.y);isFinite(L)&&(_.copy(h).multiplyScalar(m.y).addScaledVector(u,-f.y).multiplyScalar(L),g.copy(u).multiplyScalar(f.x).addScaledVector(h,-m.x).multiplyScalar(L),a[I].add(_),a[b].add(_),a[M].add(_),l[I].add(g),l[b].add(g),l[M].add(g))}let v=this.groups;v.length===0&&(v=[{start:0,count:t.count}]);for(let I=0,b=v.length;I<b;++I){const M=v[I],L=M.start,z=M.count;for(let O=L,V=L+z;O<V;O+=3)p(t.getX(O+0),t.getX(O+1),t.getX(O+2))}const x=new E,y=new E,P=new E,T=new E;function R(I){P.fromBufferAttribute(i,I),T.copy(P);const b=a[I];x.copy(b),x.sub(P.multiplyScalar(P.dot(b))).normalize(),y.crossVectors(T,b);const L=y.dot(l[I])<0?-1:1;o.setXYZW(I,x.x,x.y,x.z,L)}for(let I=0,b=v.length;I<b;++I){const M=v[I],L=M.start,z=M.count;for(let O=L,V=L+z;O<V;O+=3)R(t.getX(O+0)),R(t.getX(O+1)),R(t.getX(O+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new ce(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new E,s=new E,o=new E,a=new E,l=new E,c=new E,h=new E,u=new E;if(t)for(let d=0,f=t.count;d<f;d+=3){const m=t.getX(d+0),_=t.getX(d+1),g=t.getX(d+2);i.fromBufferAttribute(e,m),s.fromBufferAttribute(e,_),o.fromBufferAttribute(e,g),h.subVectors(o,s),u.subVectors(i,s),h.cross(u),a.fromBufferAttribute(n,m),l.fromBufferAttribute(n,_),c.fromBufferAttribute(n,g),a.add(h),l.add(h),c.add(h),n.setXYZ(m,a.x,a.y,a.z),n.setXYZ(_,l.x,l.y,l.z),n.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),s.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),h.subVectors(o,s),u.subVectors(i,s),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)Le.fromBufferAttribute(t,e),Le.normalize(),t.setXYZ(e,Le.x,Le.y,Le.z)}toNonIndexed(){function t(a,l){const c=a.array,h=a.itemSize,u=a.normalized,d=new c.constructor(l.length*h);let f=0,m=0;for(let _=0,g=l.length;_<g;_++){a.isInterleavedBufferAttribute?f=l[_]*a.data.stride+a.offset:f=l[_]*h;for(let p=0;p<h;p++)d[m++]=c[f++]}return new ce(d,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Vt,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let h=0,u=c.length;h<u;h++){const d=c[h],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u];h.push(f.toJSON(t.data))}h.length>0&&(i[l]=h,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone(e));const i=t.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(e))}const s=t.morphAttributes;for(const c in s){const h=[],u=s[c];for(let d=0,f=u.length;d<f;d++)h.push(u[d].clone(e));this.morphAttributes[c]=h}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,h=o.length;c<h;c++){const u=o[c];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Hl=new Dt,Tn=new oi,ir=new Ge,Gl=new E,sr=new E,rr=new E,or=new E,Fa=new E,ar=new E,Wl=new E,lr=new E;class lt extends Zt{constructor(t=new Vt,e=new A0){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(s&&a){ar.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const h=a[l],u=s[l];h!==0&&(Fa.fromBufferAttribute(u,t),o?ar.addScaledVector(Fa,h):ar.addScaledVector(Fa.sub(e),h))}e.add(ar)}return e}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),ir.copy(n.boundingSphere),ir.applyMatrix4(s),Tn.copy(t.ray).recast(t.near),!(ir.containsPoint(Tn.origin)===!1&&(Tn.intersectSphere(ir,Gl)===null||Tn.origin.distanceToSquared(Gl)>(t.far-t.near)**2))&&(Hl.copy(s).invert(),Tn.copy(t.ray).applyMatrix4(Hl),!(n.boundingBox!==null&&Tn.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,Tn)))}_computeIntersections(t,e,n){let i;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,h=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let m=0,_=d.length;m<_;m++){const g=d[m],p=o[g.materialIndex],v=Math.max(g.start,f.start),x=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let y=v,P=x;y<P;y+=3){const T=a.getX(y),R=a.getX(y+1),I=a.getX(y+2);i=cr(this,p,t,n,c,h,u,T,R,I),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const m=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=m,p=_;g<p;g+=3){const v=a.getX(g),x=a.getX(g+1),y=a.getX(g+2);i=cr(this,o,t,n,c,h,u,v,x,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}else if(l!==void 0)if(Array.isArray(o))for(let m=0,_=d.length;m<_;m++){const g=d[m],p=o[g.materialIndex],v=Math.max(g.start,f.start),x=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let y=v,P=x;y<P;y+=3){const T=y,R=y+1,I=y+2;i=cr(this,p,t,n,c,h,u,T,R,I),i&&(i.faceIndex=Math.floor(y/3),i.face.materialIndex=g.materialIndex,e.push(i))}}else{const m=Math.max(0,f.start),_=Math.min(l.count,f.start+f.count);for(let g=m,p=_;g<p;g+=3){const v=g,x=g+1,y=g+2;i=cr(this,o,t,n,c,h,u,v,x,y),i&&(i.faceIndex=Math.floor(g/3),e.push(i))}}}}function od(r,t,e,n,i,s,o,a){let l;if(t.side===Ke?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,t.side===en,a),l===null)return null;lr.copy(a),lr.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(lr);return c<e.near||c>e.far?null:{distance:c,point:lr.clone(),object:r}}function cr(r,t,e,n,i,s,o,a,l,c){r.getVertexPosition(a,sr),r.getVertexPosition(l,rr),r.getVertexPosition(c,or);const h=od(r,t,e,n,sr,rr,or,Wl);if(h){const u=new E;s0.getBarycoord(Wl,sr,rr,or,u),i&&(h.uv=s0.getInterpolatedAttribute(i,a,l,c,u,new Y)),s&&(h.uv1=s0.getInterpolatedAttribute(s,a,l,c,u,new Y)),o&&(h.normal=s0.getInterpolatedAttribute(o,a,l,c,u,new E),h.normal.dot(n.direction)>0&&h.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new E,materialIndex:0};s0.getNormal(sr,rr,or,d.normal),h.face=d,h.barycoord=u}return h}class ve extends Vt{constructor(t=1,e=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],h=[],u=[];let d=0,f=0;m("z","y","x",-1,-1,n,e,t,o,s,0),m("z","y","x",1,-1,n,e,-t,o,s,1),m("x","z","y",1,1,t,n,e,i,o,2),m("x","z","y",1,-1,t,n,-e,i,o,3),m("x","y","z",1,-1,t,e,n,i,s,4),m("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new St(c,3)),this.setAttribute("normal",new St(h,3)),this.setAttribute("uv",new St(u,2));function m(_,g,p,v,x,y,P,T,R,I,b){const M=y/R,L=P/I,z=y/2,O=P/2,V=T/2,X=R+1,G=I+1;let $=0,H=0;const nt=new E;for(let ht=0;ht<G;ht++){const xt=ht*L-O;for(let Nt=0;Nt<X;Nt++){const ee=Nt*M-z;nt[_]=ee*v,nt[g]=xt*x,nt[p]=V,c.push(nt.x,nt.y,nt.z),nt[_]=0,nt[g]=0,nt[p]=T>0?1:-1,h.push(nt.x,nt.y,nt.z),u.push(Nt/R),u.push(1-ht/I),$+=1}}for(let ht=0;ht<I;ht++)for(let xt=0;xt<R;xt++){const Nt=d+xt+X*ht,ee=d+xt+X*(ht+1),q=d+(xt+1)+X*(ht+1),ot=d+(xt+1)+X*ht;l.push(Nt,ee,ot),l.push(ee,q,ot),H+=6}a.addGroup(f,H,b),f+=H,d+=$}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ve(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Oi(r){const t={};for(const e in r){t[e]={};for(const n in r[e]){const i=r[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function qe(r){const t={};for(let e=0;e<r.length;e++){const n=Oi(r[e]);for(const i in n)t[i]=n[i]}return t}function ad(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e].clone());return t}function hh(r){const t=r.getRenderTarget();return t===null?r.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Jt.workingColorSpace}const uh={clone:Oi,merge:qe};var ld=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,cd=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class T0 extends We{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=ld,this.fragmentShader=cd,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Oi(t.uniforms),this.uniformsGroups=ad(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class $o extends Zt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Dt,this.projectionMatrix=new Dt,this.projectionMatrixInverse=new Dt,this.coordinateSystem=w0}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const un=new E,Xl=new Y,Yl=new Y;class De extends $o{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Fi*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Kn*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Fi*2*Math.atan(Math.tan(Kn*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){un.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(un.x,un.y).multiplyScalar(-t/un.z),un.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(un.x,un.y).multiplyScalar(-t/un.z)}getViewSize(t,e){return this.getViewBounds(t,Xl,Yl),e.subVectors(Yl,Xl)}setViewOffset(t,e,n,i,s,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Kn*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const vi=-90,Mi=1;class dh extends Zt{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new De(vi,Mi,t,e);i.layers=this.layers,this.add(i);const s=new De(vi,Mi,t,e);s.layers=this.layers,this.add(s);const o=new De(vi,Mi,t,e);o.layers=this.layers,this.add(o);const a=new De(vi,Mi,t,e);a.layers=this.layers,this.add(a);const l=new De(vi,Mi,t,e);l.layers=this.layers,this.add(l);const c=new De(vi,Mi,t,e);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,s,o,a,l]=e;for(const c of e)this.remove(c);if(t===w0)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(t===Ts)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const c of e)this.add(c),c.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,h]=this.children,u=t.getRenderTarget(),d=t.getActiveCubeFace(),f=t.getActiveMipmapLevel(),m=t.xr.enabled;t.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,s),t.setRenderTarget(n,1,i),t.render(e,o),t.setRenderTarget(n,2,i),t.render(e,a),t.setRenderTarget(n,3,i),t.render(e,l),t.setRenderTarget(n,4,i),t.render(e,c),n.texture.generateMipmaps=_,t.setRenderTarget(n,5,i),t.render(e,h),t.setRenderTarget(u,d,f),t.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class zs extends Me{constructor(t,e,n,i,s,o,a,l,c,h){t=t!==void 0?t:[],e=e!==void 0?e:nn,super(t,e,n,i,s,o,a,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class fh extends O0{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new zs(i,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:Re}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new ve(5,5,5),s=new T0({name:"CubemapFromEquirect",uniforms:Oi(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Ke,blending:j0});s.uniforms.tEquirect.value=e;const o=new lt(i,s),a=e.minFilter;return e.minFilter===U0&&(e.minFilter=Re),new dh(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,n,i){const s=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(s)}}class Yn extends Zt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const hd={type:"move"};class Yr{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Yn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Yn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new E,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new E),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Yn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new E,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new E),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const _ of t.hand.values()){const g=e.getJointPose(_,n),p=this._getHandJoint(c,_);g!==null&&(p.matrix.fromArray(g.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.matrixWorldNeedsUpdate=!0,p.jointRadius=g.radius),p.visible=g!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),f=.02,m=.005;c.inputState.pinching&&d>f+m?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-m&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(hd)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new Yn;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class Ko{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new dt(t),this.density=e}clone(){return new Ko(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class jo{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new dt(t),this.near=e,this.far=n}clone(){return new jo(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Uo extends Zt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Qe,this.environmentIntensity=1,this.environmentRotation=new Qe,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class Qo{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Es,this.updateRanges=[],this.version=0,this.uuid=u0()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=u0()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=u0()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Ye=new E;class si{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Ye.fromBufferAttribute(this,e),Ye.applyMatrix4(t),this.setXYZ(e,Ye.x,Ye.y,Ye.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ye.fromBufferAttribute(this,e),Ye.applyNormalMatrix(t),this.setXYZ(e,Ye.x,Ye.y,Ye.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ye.fromBufferAttribute(this,e),Ye.transformDirection(t),this.setXYZ(e,Ye.x,Ye.y,Ye.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Je(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Gt(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=Gt(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Gt(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Gt(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Gt(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Je(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Je(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Je(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Je(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array),i=Gt(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=Gt(e,this.array),n=Gt(n,this.array),i=Gt(i,this.array),s=Gt(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return new ce(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new si(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class X1 extends We{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new dt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Si;const Zi=new E,bi=new E,wi=new E,Ei=new Y,Ji=new Y,ph=new Dt,hr=new E,$i=new E,ur=new E,ql=new Y,Oa=new Y,Zl=new Y;class mh extends Zt{constructor(t=new X1){if(super(),this.isSprite=!0,this.type="Sprite",Si===void 0){Si=new Vt;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Qo(e,5);Si.setIndex([0,1,2,0,2,3]),Si.setAttribute("position",new si(n,3,0,!1)),Si.setAttribute("uv",new si(n,2,3,!1))}this.geometry=Si,this.material=t,this.center=new Y(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),bi.setFromMatrixScale(this.matrixWorld),ph.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),wi.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&bi.multiplyScalar(-wi.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;dr(hr.set(-.5,-.5,0),wi,o,bi,i,s),dr($i.set(.5,-.5,0),wi,o,bi,i,s),dr(ur.set(.5,.5,0),wi,o,bi,i,s),ql.set(0,0),Oa.set(1,0),Zl.set(1,1);let a=t.ray.intersectTriangle(hr,$i,ur,!1,Zi);if(a===null&&(dr($i.set(-.5,.5,0),wi,o,bi,i,s),Oa.set(0,1),a=t.ray.intersectTriangle(hr,ur,$i,!1,Zi),a===null))return;const l=t.ray.origin.distanceTo(Zi);l<t.near||l>t.far||e.push({distance:l,point:Zi.clone(),uv:s0.getInterpolation(Zi,hr,$i,ur,ql,Oa,Zl,new Y),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function dr(r,t,e,n,i,s){Ei.subVectors(r,e).addScalar(.5).multiply(n),i!==void 0?(Ji.x=s*Ei.x-i*Ei.y,Ji.y=i*Ei.x+s*Ei.y):Ji.copy(Ei),r.copy(t),r.x+=Ji.x,r.y+=Ji.y,r.applyMatrix4(ph)}const fr=new E,Jl=new E;class gh extends Zt{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const s=e[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let s;for(s=0;s<i.length&&!(e<i[s].distance);s++);return i.splice(s,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let s=e[n].distance;if(e[n].object.visible&&(s-=s*e[n].hysteresis),t<s)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){fr.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(fr);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){fr.setFromMatrixPosition(t.matrixWorld),Jl.setFromMatrixPosition(this.matrixWorld);const n=fr.distanceTo(Jl)/t.zoom;e[0].object.visible=!0;let i,s;for(i=1,s=e.length;i<s;i++){let o=e[i].distance;if(e[i].object.visible&&(o-=o*e[i].hysteresis),n>=o)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];e.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return e}}const $l=new E,Kl=new te,jl=new te,ud=new E,Ql=new Dt,pr=new E,Ba=new Ge,tc=new Dt,za=new oi;class _h extends lt{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=p1,this.bindMatrix=new Dt,this.bindMatrixInverse=new Dt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new je),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,pr),this.boundingBox.expandByPoint(pr)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Ge),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,pr),this.boundingSphere.expandByPoint(pr)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Ba.copy(this.boundingSphere),Ba.applyMatrix4(i),t.ray.intersectsSphere(Ba)!==!1&&(tc.copy(i).invert(),za.copy(t.ray).applyMatrix4(tc),!(this.boundingBox!==null&&za.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,za)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new te,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const s=1/t.manhattanLength();s!==1/0?t.multiplyScalar(s):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===p1?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===X2?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;Kl.fromBufferAttribute(i.attributes.skinIndex,t),jl.fromBufferAttribute(i.attributes.skinWeight,t),$l.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let s=0;s<4;s++){const o=jl.getComponent(s);if(o!==0){const a=Kl.getComponent(s);Ql.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(ud.copy($l).applyMatrix4(Ql),o)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Y1 extends Zt{constructor(){super(),this.isBone=!0,this.type="Bone"}}class E0 extends Me{constructor(t=null,e=1,n=1,i,s,o,a,l,c=Ne,h=Ne,u,d){super(null,o,a,l,c,h,i,s,u,d),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const ec=new Dt,dd=new Dt;class ta{constructor(t=[],e=[]){this.uuid=u0(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Dt)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new Dt;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=t.length;s<o;s++){const a=t[s]?t[s].matrixWorld:dd;ec.multiplyMatrices(a,e[s]),ec.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new ta(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new E0(e,t,t,$e,r0);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const s=t.bones[n];let o=e[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Y1),this.bones.push(o),this.boneInverses.push(new Dt().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,s=e.length;i<s;i++){const o=e[i];t.bones.push(o.uuid);const a=n[i];t.boneInverses.push(a.toArray())}return t}}class Bi extends ce{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Ti=new Dt,nc=new Dt,mr=[],ic=new je,fd=new Dt,Ki=new lt,ji=new Ge;class xh extends lt{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Bi(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,fd)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new je),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Ti),ic.copy(t.boundingBox).applyMatrix4(Ti),this.boundingBox.union(ic)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new Ge),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,Ti),ji.copy(t.boundingSphere).applyMatrix4(Ti),this.boundingSphere.union(ji)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,o=t*s+1;for(let a=0;a<n.length;a++)n[a]=i[o+a]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(Ki.geometry=this.geometry,Ki.material=this.material,Ki.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),ji.copy(this.boundingSphere),ji.applyMatrix4(n),t.ray.intersectsSphere(ji)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Ti),nc.multiplyMatrices(n,Ti),Ki.matrixWorld=nc,Ki.raycast(t,mr);for(let o=0,a=mr.length;o<a;o++){const l=mr[o];l.instanceId=s,l.object=this,e.push(l)}mr.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Bi(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new E0(new Float32Array(i*this.count),i,this.count,Go,r0));const s=this.morphTexture.source.data.data;let o=0;for(let c=0;c<n.length;c++)o+=n[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=i*t;s[l]=a,s.set(n,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const ka=new E,pd=new E,md=new Ht;class Y0{constructor(t=new E(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=ka.subVectors(n,e).cross(pd.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(ka),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(t.start).addScaledVector(n,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||md.getNormalMatrix(t),i=this.coplanarPoint(ka).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const An=new Ge,gr=new E;class ks{constructor(t=new Y0,e=new Y0,n=new Y0,i=new Y0,s=new Y0,o=new Y0){this.planes=[t,e,n,i,s,o]}set(t,e,n,i,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=w0){const n=this.planes,i=t.elements,s=i[0],o=i[1],a=i[2],l=i[3],c=i[4],h=i[5],u=i[6],d=i[7],f=i[8],m=i[9],_=i[10],g=i[11],p=i[12],v=i[13],x=i[14],y=i[15];if(n[0].setComponents(l-s,d-c,g-f,y-p).normalize(),n[1].setComponents(l+s,d+c,g+f,y+p).normalize(),n[2].setComponents(l+o,d+h,g+m,y+v).normalize(),n[3].setComponents(l-o,d-h,g-m,y-v).normalize(),n[4].setComponents(l-a,d-u,g-_,y-x).normalize(),e===w0)n[5].setComponents(l+a,d+u,g+_,y+x).normalize();else if(e===Ts)n[5].setComponents(a,u,_,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),An.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),An.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(An)}intersectsSprite(t){return An.center.set(0,0,0),An.radius=.7071067811865476,An.applyMatrix4(t.matrixWorld),this.intersectsSphere(An)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(gr.x=i.normal.x>0?t.max.x:t.min.x,gr.y=i.normal.y>0?t.max.y:t.min.y,gr.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(gr)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Va(r,t){return r-t}function gd(r,t){return r.z-t.z}function _d(r,t){return t.z-r.z}class xd{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const s=this.pool,o=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];o.push(a),this.index++,a.start=t,a.count=e,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const e0=new Dt,yd=new dt(1,1,1),Ha=new ks,_r=new je,Cn=new Ge,Qi=new E,sc=new E,vd=new E,Ga=new xd,ke=new lt,xr=[];function Md(r,t,e=0){const n=t.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==t.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let o=0;o<n;o++)t.setComponent(s+e,o,r.getComponent(s,o))}else t.array.set(r.array,e*n);t.needsUpdate=!0}function Rn(r,t){if(r.constructor!==t.constructor){const e=Math.min(r.length,t.length);for(let n=0;n<e;n++)t[n]=r[n]}else{const e=Math.min(r.length,t.length);t.set(new r.constructor(r.buffer,0,e))}}class yh extends lt{constructor(t,e,n=e*2,i){super(new Vt,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new E0(e,t,t,$e,r0);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new E0(e,t,t,Os,sn);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new E0(e,t,t,$e,r0);n.colorSpace=Jt.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in t.attributes){const o=t.getAttribute(s),{array:a,itemSize:l,normalized:c}=o,h=new a.constructor(n*l),u=new ce(h,l,c);e.setAttribute(s,u)}if(t.getIndex()!==null){const s=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new ce(s,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error(`THREE.BatchedMesh: Added geometry missing "${n}". All geometries must have consistent attributes.`);const i=t.getAttribute(n),s=e.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid instanceId ${t}. Instance is either out of range or has been deleted.`)}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error(`THREE.BatchedMesh: Invalid geometryId ${t}. Geometry is either out of range or has been deleted.`)}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new je);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const s=e[n].geometryIndex;this.getMatrixAt(n,e0),this.getBoundingBoxAt(s,_r).applyMatrix4(e0),t.union(_r)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ge);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const s=e[n].geometryIndex;this.getMatrixAt(n,e0),this.getBoundingSphereAt(s,Cn).applyMatrix4(e0),t.union(Cn)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Va),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;e0.identity().toArray(s.image.data,i*16),s.needsUpdate=!0;const o=this._colorsTexture;return o&&(yd.toArray(o.image.data,i*4),o.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const o=t.getIndex();if(o!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?o.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Va),l=this._availableGeometryIds.shift(),s[l]=i):(l=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(l,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,l}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),o=e.getIndex(),a=this._geometryInfo[t];if(i&&o.count>a.reservedIndexCount||e.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=e.getAttribute("position").count;for(const h in n.attributes){const u=e.getAttribute(h),d=n.getAttribute(h);Md(u,d,l);const f=u.itemSize;for(let m=u.count,_=c;m<_;m++){const g=l+m;for(let p=0;p<f;p++)d.setComponent(g,p,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(i){const h=a.indexStart,u=a.reservedIndexCount;a.indexCount=e.getIndex().count;for(let d=0;d<o.count;d++)s.setX(h+d,l+o.getX(d));for(let d=o.count,f=u;d<f;d++)s.setX(h+d,l);s.needsUpdate=!0,s.addUpdateRange(h,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,e.boundingBox!==null&&(a.boundingBox=e.boundingBox.clone()),a.boundingSphere=null,e.boundingSphere!==null&&(a.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,s=n.length;i<s;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((o,a)=>a).sort((o,a)=>n[o].vertexStart-n[a].vertexStart),s=this.geometry;for(let o=0,a=n.length;o<a;o++){const l=i[o],c=n[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==e){const{indexStart:h,vertexStart:u,reservedIndexCount:d}=c,f=s.index,m=f.array,_=t-u;for(let g=h;g<h+d;g++)m[g]=m[g]+_;f.array.copyWithin(e,h,h+d),f.addUpdateRange(e,d),c.indexStart=e}e+=c.reservedIndexCount}if(c.vertexStart!==t){const{vertexStart:h,reservedVertexCount:u}=c,d=s.attributes;for(const f in d){const m=d[f],{array:_,itemSize:g}=m;_.copyWithin(t*g,h*g,(h+u)*g),m.addUpdateRange(t*g,u*g)}c.vertexStart=t}t+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const s=new je,o=n.index,a=n.attributes.position;for(let l=i.start,c=i.start+i.count;l<c;l++){let h=l;o&&(h=o.getX(h)),s.expandByPoint(Qi.fromBufferAttribute(a,h))}i.boundingBox=s}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const s=new Ge;this.getBoundingBoxAt(t,_r),_r.getCenter(s.center);const o=n.index,a=n.attributes.position;let l=0;for(let c=i.start,h=i.start+i.count;c<h;c++){let u=c;o&&(u=o.getX(u)),Qi.fromBufferAttribute(a,u),l=Math.max(l,s.center.distanceToSquared(Qi))}s.radius=Math.sqrt(l),i.boundingSphere=s}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(Va);e[e.length-1]===n.length;)n.pop(),e.pop();if(t<n.length)throw new Error(`BatchedMesh: Instance ids outside the range ${t} are being used. Cannot shrink instance count.`);const i=new Int32Array(t),s=new Int32Array(t);Rn(this._multiDrawCounts,i),Rn(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=t;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),Rn(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Rn(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),Rn(l.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>t)throw new Error(`BatchedMesh: Geometry vertex values are being used outside the range ${e}. Cannot shrink further.`);if(this.geometry.index&&Math.max(...n.map(l=>l.indexStart+l.reservedIndexCount))>e)throw new Error(`BatchedMesh: Geometry index values are being used outside the range ${e}. Cannot shrink further.`);const s=this.geometry;s.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new Vt,this._initializeGeometry(s));const o=this.geometry;s.index&&Rn(s.index.array,o.index.array);for(const a in s.attributes)Rn(s.attributes[a].array,o.attributes[a].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,o=this.geometry;ke.material=this.material,ke.geometry.index=o.index,ke.geometry.attributes=o.attributes,ke.geometry.boundingBox===null&&(ke.geometry.boundingBox=new je),ke.geometry.boundingSphere===null&&(ke.geometry.boundingSphere=new Ge);for(let a=0,l=n.length;a<l;a++){if(!n[a].visible||!n[a].active)continue;const c=n[a].geometryIndex,h=i[c];ke.geometry.setDrawRange(h.start,h.count),this.getMatrixAt(a,ke.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,ke.geometry.boundingBox),this.getBoundingSphereAt(c,ke.geometry.boundingSphere),ke.raycast(t,xr);for(let u=0,d=xr.length;u<d;u++){const f=xr[u];f.object=this,f.batchId=a,e.push(f)}xr.length=0}ke.material=null,ke.geometry.index=null,ke.geometry.attributes={},ke.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._geometryCount=t._geometryCount,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=i.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,h=this._multiDrawCounts,u=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,m=f.image.data;d&&(e0.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Ha.setFromProjectionMatrix(e0,t.coordinateSystem));let _=0;if(this.sortObjects){e0.copy(this.matrixWorld).invert(),Qi.setFromMatrixPosition(n.matrixWorld).applyMatrix4(e0),sc.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(e0);for(let v=0,x=l.length;v<x;v++)if(l[v].visible&&l[v].active){const y=l[v].geometryIndex;this.getMatrixAt(v,e0),this.getBoundingSphereAt(y,Cn).applyMatrix4(e0);let P=!1;if(d&&(P=!Ha.intersectsSphere(Cn)),!P){const T=u[y],R=vd.subVectors(Cn.center,Qi).dot(sc);Ga.push(T.start,T.count,R,v)}}const g=Ga.list,p=this.customSort;p===null?g.sort(s.transparent?_d:gd):p.call(this,g,n);for(let v=0,x=g.length;v<x;v++){const y=g[v];c[_]=y.start*a,h[_]=y.count,m[_]=y.index,_++}Ga.reset()}else for(let g=0,p=l.length;g<p;g++)if(l[g].visible&&l[g].active){const v=l[g].geometryIndex;let x=!1;if(d&&(this.getMatrixAt(g,e0),this.getBoundingSphereAt(v,Cn).applyMatrix4(e0),x=!Ha.intersectsSphere(Cn)),!x){const y=u[v];c[_]=y.start*a,h[_]=y.count,m[_]=g,_++}}f.needsUpdate=!0,this._multiDrawCount=_,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,s,o){this.onBeforeRender(t,null,i,s,o)}}class Fe extends We{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new dt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const No=new E,Fo=new E,rc=new Dt,ts=new oi,yr=new Ge,Wa=new E,oc=new E;class He extends Zt{constructor(t=new Vt,e=new Fe){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,s=e.count;i<s;i++)No.fromBufferAttribute(e,i-1),Fo.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=No.distanceTo(Fo);t.setAttribute("lineDistance",new St(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),yr.copy(n.boundingSphere),yr.applyMatrix4(i),yr.radius+=s,t.ray.intersectsSphere(yr)===!1)return;rc.copy(i).invert(),ts.copy(t.ray).applyMatrix4(rc);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,h=n.index,d=n.attributes.position;if(h!==null){const f=Math.max(0,o.start),m=Math.min(h.count,o.start+o.count);for(let _=f,g=m-1;_<g;_+=c){const p=h.getX(_),v=h.getX(_+1),x=vr(this,t,ts,l,p,v,_);x&&e.push(x)}if(this.isLineLoop){const _=h.getX(m-1),g=h.getX(f),p=vr(this,t,ts,l,_,g,m-1);p&&e.push(p)}}else{const f=Math.max(0,o.start),m=Math.min(d.count,o.start+o.count);for(let _=f,g=m-1;_<g;_+=c){const p=vr(this,t,ts,l,_,_+1,_);p&&e.push(p)}if(this.isLineLoop){const _=vr(this,t,ts,l,m-1,f,m-1);_&&e.push(_)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function vr(r,t,e,n,i,s,o){const a=r.geometry.attributes.position;if(No.fromBufferAttribute(a,i),Fo.fromBufferAttribute(a,s),e.distanceSqToSegment(No,Fo,Wa,oc)>n)return;Wa.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(Wa);if(!(c<t.near||c>t.far))return{distance:c,point:oc.clone().applyMatrix4(r.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:r}}const ac=new E,lc=new E;class C0 extends He{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,s=e.count;i<s;i+=2)ac.fromBufferAttribute(e,i),lc.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+ac.distanceTo(lc);t.setAttribute("lineDistance",new St(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class vh extends He{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class q1 extends We{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new dt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const cc=new Dt,_1=new oi,Mr=new Ge,Sr=new E;class Mh extends Zt{constructor(t=new Vt,e=new q1){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mr.copy(n.boundingSphere),Mr.applyMatrix4(i),Mr.radius+=s,t.ray.intersectsSphere(Mr)===!1)return;cc.copy(i).invert(),_1.copy(t.ray).applyMatrix4(cc);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,u=n.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let m=d,_=f;m<_;m++){const g=c.getX(m);Sr.fromBufferAttribute(u,g),hc(Sr,g,l,i,t,e,this)}}else{const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let m=d,_=f;m<_;m++)Sr.fromBufferAttribute(u,m),hc(Sr,m,l,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function hc(r,t,e,n,i,s,o){const a=_1.distanceSqToPoint(r);if(a<e){const l=new E;_1.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:t,face:null,faceIndex:null,barycoord:null,object:o})}}class Sh extends Me{constructor(t,e,n,i,s,o,a,l,c){super(t,e,n,i,s,o,a,l,c),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:Re,this.magFilter=s!==void 0?s:Re,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,t.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Sd extends Sh{constructor(t,e,n,i,s,o,a,l){super({},t,e,n,i,s,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class bd extends Me{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Ne,this.minFilter=Ne,this.generateMipmaps=!1,this.needsUpdate=!0}}class ea extends Me{constructor(t,e,n,i,s,o,a,l,c,h,u,d){super(null,o,a,l,c,h,i,s,u,d),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class wd extends ea{constructor(t,e,n,i,s,o){super(t,e,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=m0,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class Ed extends ea{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,nn),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class Td extends Me{constructor(t,e,n,i,s,o,a,l,c){super(t,e,n,i,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Z1 extends Me{constructor(t,e,n,i,s,o,a,l,c,h=$n){if(h!==$n&&h!==ni)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===$n&&(n=sn),n===void 0&&h===ni&&(n=ei),super(null,i,s,o,a,l,h,n,c),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Ne,this.minFilter=l!==void 0?l:Ne,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new gn(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class R0{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const s=n.length;let o;e?o=e:o=t*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const h=n[i],d=n[i+1]-h,f=(o-h)/d;return(i+f)/(s-1)}getTangent(t,e){let i=t-1e-4,s=t+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=e||(o.isVector2?new Y:new E);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new E,i=[],s=[],o=[],a=new E,l=new Dt;for(let f=0;f<=t;f++){const m=f/t;i[f]=this.getTangentAt(m,new E)}s[0]=new E,o[0]=new E;let c=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let f=1;f<=t;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const m=Math.acos(kt(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,m))}o[f].crossVectors(i[f],s[f])}if(e===!0){let f=Math.acos(kt(s[0].dot(s[t]),-1,1));f/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(f=-f);for(let m=1;m<=t;m++)s[m].applyMatrix4(l.makeRotationAxis(i[m],f*m)),o[m].crossVectors(i[m],s[m])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class na extends R0{constructor(t=0,e=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e=new Y){const n=e,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*h-f*u+this.aX,c=d*u+f*h+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class bh extends na{constructor(t,e,n,i,s,o){super(t,e,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function J1(){let r=0,t=0,e=0,n=0;function i(s,o,a,l){r=s,t=a,e=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,h,u){let d=(o-s)/c-(a-s)/(c+h)+(a-o)/h,f=(a-o)/h-(l-o)/(h+u)+(l-a)/u;d*=h,f*=h,i(o,a,d,f)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+n*a}}}const br=new E,Xa=new J1,Ya=new J1,qa=new J1;class wh extends R0{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new E){const n=e,i=this.points,s=i.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,h;this.closed||a>0?c=i[(a-1)%s]:(br.subVectors(i[0],i[1]).add(i[0]),c=br);const u=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?h=i[(a+2)%s]:(br.subVectors(i[s-1],i[s-2]).add(i[s-1]),h=br),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let m=Math.pow(c.distanceToSquared(u),f),_=Math.pow(u.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(h),f);_<1e-4&&(_=1),m<1e-4&&(m=_),g<1e-4&&(g=_),Xa.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,m,_,g),Ya.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,m,_,g),qa.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,m,_,g)}else this.curveType==="catmullrom"&&(Xa.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),Ya.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),qa.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return n.set(Xa.calc(l),Ya.calc(l),qa.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new E().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function uc(r,t,e,n,i){const s=(n-t)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*n+s+o)*l+(-3*e+3*n-2*s-o)*a+s*r+e}function Ad(r,t){const e=1-r;return e*e*t}function Cd(r,t){return 2*(1-r)*r*t}function Rd(r,t){return r*r*t}function ms(r,t,e,n){return Ad(r,t)+Cd(r,e)+Rd(r,n)}function Pd(r,t){const e=1-r;return e*e*e*t}function Id(r,t){const e=1-r;return 3*e*e*r*t}function Ld(r,t){return 3*(1-r)*r*r*t}function Dd(r,t){return r*r*r*t}function gs(r,t,e,n,i){return Pd(r,t)+Id(r,e)+Ld(r,n)+Dd(r,i)}class $1 extends R0{constructor(t=new Y,e=new Y,n=new Y,i=new Y){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new Y){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(gs(t,i.x,s.x,o.x,a.x),gs(t,i.y,s.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Eh extends R0{constructor(t=new E,e=new E,n=new E,i=new E){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new E){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(gs(t,i.x,s.x,o.x,a.x),gs(t,i.y,s.y,o.y,a.y),gs(t,i.z,s.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class K1 extends R0{constructor(t=new Y,e=new Y){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Y){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Y){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Th extends R0{constructor(t=new E,e=new E){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new E){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new E){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class j1 extends R0{constructor(t=new Y,e=new Y,n=new Y){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new Y){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(ms(t,i.x,s.x,o.x),ms(t,i.y,s.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Q1 extends R0{constructor(t=new E,e=new E,n=new E){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new E){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(ms(t,i.x,s.x,o.x),ms(t,i.y,s.y,o.y),ms(t,i.z,s.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class tl extends R0{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Y){const n=e,i=this.points,s=(i.length-1)*t,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],c=i[o],h=i[o>i.length-2?i.length-1:o+1],u=i[o>i.length-3?i.length-1:o+2];return n.set(uc(a,l.x,c.x,h.x,u.x),uc(a,l.y,c.y,h.y,u.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new Y().fromArray(i))}return this}}var Oo=Object.freeze({__proto__:null,ArcCurve:bh,CatmullRomCurve3:wh,CubicBezierCurve:$1,CubicBezierCurve3:Eh,EllipseCurve:na,LineCurve:K1,LineCurve3:Th,QuadraticBezierCurve:j1,QuadraticBezierCurve3:Q1,SplineCurve:tl});class Ah extends R0{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Oo[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(e.push(h),n=h)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Oo[i.type]().fromJSON(i))}return this}}class Cs extends Ah{constructor(t){super(),this.type="Path",this.currentPoint=new Y,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new K1(this.currentPoint.clone(),new Y(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new j1(this.currentPoint.clone(),new Y(t,e),new Y(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,o){const a=new $1(this.currentPoint.clone(),new Y(t,e),new Y(n,i),new Y(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new tl(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,s,o),this}absarc(t,e,n,i,s,o){return this.absellipse(t,e,n,n,i,s,o),this}ellipse(t,e,n,i,s,o,a,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(t+c,e+h,n,i,s,o,a,l),this}absellipse(t,e,n,i,s,o,a,l){const c=new na(t,e,n,i,s,o,a,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Vs extends Vt{constructor(t=[new Y(0,-.5),new Y(.5,0),new Y(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=kt(i,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],h=1/e,u=new E,d=new Y,f=new E,m=new E,_=new E;let g=0,p=0;for(let v=0;v<=t.length-1;v++)switch(v){case 0:g=t[v+1].x-t[v].x,p=t[v+1].y-t[v].y,f.x=p*1,f.y=-g,f.z=p*0,_.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case t.length-1:l.push(_.x,_.y,_.z);break;default:g=t[v+1].x-t[v].x,p=t[v+1].y-t[v].y,f.x=p*1,f.y=-g,f.z=p*0,m.copy(f),f.x+=_.x,f.y+=_.y,f.z+=_.z,f.normalize(),l.push(f.x,f.y,f.z),_.copy(m)}for(let v=0;v<=e;v++){const x=n+v*h*i,y=Math.sin(x),P=Math.cos(x);for(let T=0;T<=t.length-1;T++){u.x=t[T].x*y,u.y=t[T].y,u.z=t[T].x*P,o.push(u.x,u.y,u.z),d.x=v/e,d.y=T/(t.length-1),a.push(d.x,d.y);const R=l[3*T+0]*y,I=l[3*T+1],b=l[3*T+0]*P;c.push(R,I,b)}}for(let v=0;v<e;v++)for(let x=0;x<t.length-1;x++){const y=x+v*t.length,P=y,T=y+t.length,R=y+t.length+1,I=y+1;s.push(P,T,I),s.push(R,I,T)}this.setIndex(s),this.setAttribute("position",new St(o,3)),this.setAttribute("uv",new St(a,2)),this.setAttribute("normal",new St(c,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Vs(t.points,t.segments,t.phiStart,t.phiLength)}}class ia extends Vs{constructor(t=1,e=1,n=4,i=8){const s=new Cs;s.absarc(0,-e/2,t,Math.PI*1.5,0),s.absarc(0,e/2,t,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:t,length:e,capSegments:n,radialSegments:i}}static fromJSON(t){return new ia(t.radius,t.length,t.capSegments,t.radialSegments)}}class sa extends Vt{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const s=[],o=[],a=[],l=[],c=new E,h=new Y;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=e;u++,d+=3){const f=n+u/e*i;c.x=t*Math.cos(f),c.y=t*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),h.x=(o[d]/t+1)/2,h.y=(o[d+1]/t+1)/2,l.push(h.x,h.y)}for(let u=1;u<=e;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new St(o,3)),this.setAttribute("normal",new St(a,3)),this.setAttribute("uv",new St(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new sa(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class Te extends Vt{constructor(t=1,e=1,n=1,i=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const h=[],u=[],d=[],f=[];let m=0;const _=[],g=n/2;let p=0;v(),o===!1&&(t>0&&x(!0),e>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new St(u,3)),this.setAttribute("normal",new St(d,3)),this.setAttribute("uv",new St(f,2));function v(){const y=new E,P=new E;let T=0;const R=(e-t)/n;for(let I=0;I<=s;I++){const b=[],M=I/s,L=M*(e-t)+t;for(let z=0;z<=i;z++){const O=z/i,V=O*l+a,X=Math.sin(V),G=Math.cos(V);P.x=L*X,P.y=-M*n+g,P.z=L*G,u.push(P.x,P.y,P.z),y.set(X,R,G).normalize(),d.push(y.x,y.y,y.z),f.push(O,1-M),b.push(m++)}_.push(b)}for(let I=0;I<i;I++)for(let b=0;b<s;b++){const M=_[b][I],L=_[b+1][I],z=_[b+1][I+1],O=_[b][I+1];(t>0||b!==0)&&(h.push(M,L,O),T+=3),(e>0||b!==s-1)&&(h.push(L,z,O),T+=3)}c.addGroup(p,T,0),p+=T}function x(y){const P=m,T=new Y,R=new E;let I=0;const b=y===!0?t:e,M=y===!0?1:-1;for(let z=1;z<=i;z++)u.push(0,g*M,0),d.push(0,M,0),f.push(.5,.5),m++;const L=m;for(let z=0;z<=i;z++){const V=z/i*l+a,X=Math.cos(V),G=Math.sin(V);R.x=b*G,R.y=g*M,R.z=b*X,u.push(R.x,R.y,R.z),d.push(0,M,0),T.x=X*.5+.5,T.y=G*.5*M+.5,f.push(T.x,T.y),m++}for(let z=0;z<i;z++){const O=P+z,V=L+z;y===!0?h.push(V,V+1,O):h.push(V+1,V,O),I+=3}c.addGroup(p,I,y===!0?1:2),p+=I}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Te(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class ra extends Te{constructor(t=1,e=1,n=32,i=1,s=!1,o=0,a=Math.PI*2){super(0,t,e,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(t){return new ra(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class yn extends Vt{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const s=[],o=[];a(i),c(n),h(),this.setAttribute("position",new St(s,3)),this.setAttribute("normal",new St(s.slice(),3)),this.setAttribute("uv",new St(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(v){const x=new E,y=new E,P=new E;for(let T=0;T<e.length;T+=3)f(e[T+0],x),f(e[T+1],y),f(e[T+2],P),l(x,y,P,v)}function l(v,x,y,P){const T=P+1,R=[];for(let I=0;I<=T;I++){R[I]=[];const b=v.clone().lerp(y,I/T),M=x.clone().lerp(y,I/T),L=T-I;for(let z=0;z<=L;z++)z===0&&I===T?R[I][z]=b:R[I][z]=b.clone().lerp(M,z/L)}for(let I=0;I<T;I++)for(let b=0;b<2*(T-I)-1;b++){const M=Math.floor(b/2);b%2===0?(d(R[I][M+1]),d(R[I+1][M]),d(R[I][M])):(d(R[I][M+1]),d(R[I+1][M+1]),d(R[I+1][M]))}}function c(v){const x=new E;for(let y=0;y<s.length;y+=3)x.x=s[y+0],x.y=s[y+1],x.z=s[y+2],x.normalize().multiplyScalar(v),s[y+0]=x.x,s[y+1]=x.y,s[y+2]=x.z}function h(){const v=new E;for(let x=0;x<s.length;x+=3){v.x=s[x+0],v.y=s[x+1],v.z=s[x+2];const y=g(v)/2/Math.PI+.5,P=p(v)/Math.PI+.5;o.push(y,1-P)}m(),u()}function u(){for(let v=0;v<o.length;v+=6){const x=o[v+0],y=o[v+2],P=o[v+4],T=Math.max(x,y,P),R=Math.min(x,y,P);T>.9&&R<.1&&(x<.2&&(o[v+0]+=1),y<.2&&(o[v+2]+=1),P<.2&&(o[v+4]+=1))}}function d(v){s.push(v.x,v.y,v.z)}function f(v,x){const y=v*3;x.x=t[y+0],x.y=t[y+1],x.z=t[y+2]}function m(){const v=new E,x=new E,y=new E,P=new E,T=new Y,R=new Y,I=new Y;for(let b=0,M=0;b<s.length;b+=9,M+=6){v.set(s[b+0],s[b+1],s[b+2]),x.set(s[b+3],s[b+4],s[b+5]),y.set(s[b+6],s[b+7],s[b+8]),T.set(o[M+0],o[M+1]),R.set(o[M+2],o[M+3]),I.set(o[M+4],o[M+5]),P.copy(v).add(x).add(y).divideScalar(3);const L=g(P);_(T,M+0,v,L),_(R,M+2,x,L),_(I,M+4,y,L)}}function _(v,x,y,P){P<0&&v.x===1&&(o[x]=v.x-1),y.x===0&&y.z===0&&(o[x]=P/2/Math.PI+.5)}function g(v){return Math.atan2(v.z,-v.x)}function p(v){return Math.atan2(-v.y,Math.sqrt(v.x*v.x+v.z*v.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new yn(t.vertices,t.indices,t.radius,t.details)}}class oa extends yn{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new oa(t.radius,t.detail)}}const wr=new E,Er=new E,Za=new E,Tr=new s0;class Ch extends Vt{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),s=Math.cos(Kn*e),o=t.getIndex(),a=t.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},f=[];for(let m=0;m<l;m+=3){o?(c[0]=o.getX(m),c[1]=o.getX(m+1),c[2]=o.getX(m+2)):(c[0]=m,c[1]=m+1,c[2]=m+2);const{a:_,b:g,c:p}=Tr;if(_.fromBufferAttribute(a,c[0]),g.fromBufferAttribute(a,c[1]),p.fromBufferAttribute(a,c[2]),Tr.getNormal(Za),u[0]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,u[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,u[2]=`${Math.round(p.x*i)},${Math.round(p.y*i)},${Math.round(p.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let v=0;v<3;v++){const x=(v+1)%3,y=u[v],P=u[x],T=Tr[h[v]],R=Tr[h[x]],I=`${y}_${P}`,b=`${P}_${y}`;b in d&&d[b]?(Za.dot(d[b].normal)<=s&&(f.push(T.x,T.y,T.z),f.push(R.x,R.y,R.z)),d[b]=null):I in d||(d[I]={index0:c[v],index1:c[x],normal:Za.clone()})}}for(const m in d)if(d[m]){const{index0:_,index1:g}=d[m];wr.fromBufferAttribute(a,_),Er.fromBufferAttribute(a,g),f.push(wr.x,wr.y,wr.z),f.push(Er.x,Er.y,Er.z)}this.setAttribute("position",new St(f,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class jn extends Cs{constructor(t){super(t),this.uuid=u0(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Cs().fromJSON(i))}return this}}class Ud{static triangulate(t,e,n=2){const i=e&&e.length,s=i?e[0]*n:t.length;let o=Rh(t,0,s,n,!0);const a=[];if(!o||o.next===o.prev)return a;let l,c,h,u,d,f,m;if(i&&(o=zd(t,e,o,n)),t.length>80*n){l=h=t[0],c=u=t[1];for(let _=n;_<s;_+=n)d=t[_],f=t[_+1],d<l&&(l=d),f<c&&(c=f),d>h&&(h=d),f>u&&(u=f);m=Math.max(h-l,u-c),m=m!==0?32767/m:0}return Rs(o,a,n,l,c,m,0),a}}function Rh(r,t,e,n,i){let s,o;if(i===$d(r,t,e,n)>0)for(s=t;s<e;s+=n)o=dc(s,r[s],r[s+1],o);else for(s=e-n;s>=t;s-=n)o=dc(s,r[s],r[s+1],o);return o&&aa(o,o.next)&&(Is(o),o=o.next),o}function ri(r,t){if(!r)return r;t||(t=r);let e=r,n;do if(n=!1,!e.steiner&&(aa(e,e.next)||ge(e.prev,e,e.next)===0)){if(Is(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Rs(r,t,e,n,i,s,o){if(!r)return;!o&&s&&Wd(r,n,i,s);let a=r,l,c;for(;r.prev!==r.next;){if(l=r.prev,c=r.next,s?Fd(r,n,i,s):Nd(r)){t.push(l.i/e|0),t.push(r.i/e|0),t.push(c.i/e|0),Is(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=Od(ri(r),t,e),Rs(r,t,e,n,i,s,2)):o===2&&Bd(r,t,e,n,i,s):Rs(ri(r),t,e,n,i,s,1);break}}}function Nd(r){const t=r.prev,e=r,n=r.next;if(ge(t,e,n)>=0)return!1;const i=t.x,s=e.x,o=n.x,a=t.y,l=e.y,c=n.y,h=i<s?i<o?i:o:s<o?s:o,u=a<l?a<c?a:c:l<c?l:c,d=i>s?i>o?i:o:s>o?s:o,f=a>l?a>c?a:c:l>c?l:c;let m=n.next;for(;m!==t;){if(m.x>=h&&m.x<=d&&m.y>=u&&m.y<=f&&Ii(i,a,s,l,o,c,m.x,m.y)&&ge(m.prev,m,m.next)>=0)return!1;m=m.next}return!0}function Fd(r,t,e,n){const i=r.prev,s=r,o=r.next;if(ge(i,s,o)>=0)return!1;const a=i.x,l=s.x,c=o.x,h=i.y,u=s.y,d=o.y,f=a<l?a<c?a:c:l<c?l:c,m=h<u?h<d?h:d:u<d?u:d,_=a>l?a>c?a:c:l>c?l:c,g=h>u?h>d?h:d:u>d?u:d,p=x1(f,m,t,e,n),v=x1(_,g,t,e,n);let x=r.prevZ,y=r.nextZ;for(;x&&x.z>=p&&y&&y.z<=v;){if(x.x>=f&&x.x<=_&&x.y>=m&&x.y<=g&&x!==i&&x!==o&&Ii(a,h,l,u,c,d,x.x,x.y)&&ge(x.prev,x,x.next)>=0||(x=x.prevZ,y.x>=f&&y.x<=_&&y.y>=m&&y.y<=g&&y!==i&&y!==o&&Ii(a,h,l,u,c,d,y.x,y.y)&&ge(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;x&&x.z>=p;){if(x.x>=f&&x.x<=_&&x.y>=m&&x.y<=g&&x!==i&&x!==o&&Ii(a,h,l,u,c,d,x.x,x.y)&&ge(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;y&&y.z<=v;){if(y.x>=f&&y.x<=_&&y.y>=m&&y.y<=g&&y!==i&&y!==o&&Ii(a,h,l,u,c,d,y.x,y.y)&&ge(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function Od(r,t,e){let n=r;do{const i=n.prev,s=n.next.next;!aa(i,s)&&Ph(i,n,n.next,s)&&Ps(i,s)&&Ps(s,i)&&(t.push(i.i/e|0),t.push(n.i/e|0),t.push(s.i/e|0),Is(n),Is(n.next),n=r=s),n=n.next}while(n!==r);return ri(n)}function Bd(r,t,e,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&qd(o,a)){let l=Ih(o,a);o=ri(o,o.next),l=ri(l,l.next),Rs(o,t,e,n,i,s,0),Rs(l,t,e,n,i,s,0);return}a=a.next}o=o.next}while(o!==r)}function zd(r,t,e,n){const i=[];let s,o,a,l,c;for(s=0,o=t.length;s<o;s++)a=t[s]*n,l=s<o-1?t[s+1]*n:r.length,c=Rh(r,a,l,n,!1),c===c.next&&(c.steiner=!0),i.push(Yd(c));for(i.sort(kd),s=0;s<i.length;s++)e=Vd(i[s],e);return e}function kd(r,t){return r.x-t.x}function Vd(r,t){const e=Hd(r,t);if(!e)return t;const n=Ih(e,r);return ri(n,n.next),ri(e,e.next)}function Hd(r,t){let e=t,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=s&&d>n&&(n=d,i=e.x<e.next.x?e:e.next,d===s))return i}e=e.next}while(e!==t);if(!i)return null;const a=i,l=i.x,c=i.y;let h=1/0,u;e=i;do s>=e.x&&e.x>=l&&s!==e.x&&Ii(o<c?s:n,o,l,c,o<c?n:s,o,e.x,e.y)&&(u=Math.abs(o-e.y)/(s-e.x),Ps(e,r)&&(u<h||u===h&&(e.x>i.x||e.x===i.x&&Gd(i,e)))&&(i=e,h=u)),e=e.next;while(e!==a);return i}function Gd(r,t){return ge(r.prev,r,t.prev)<0&&ge(t.next,r,r.next)<0}function Wd(r,t,e,n){let i=r;do i.z===0&&(i.z=x1(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,Xd(i)}function Xd(r){let t,e,n,i,s,o,a,l,c=1;do{for(e=r,r=null,s=null,o=0;e;){for(o++,n=e,a=0,t=0;t<c&&(a++,n=n.nextZ,!!n);t++);for(l=c;a>0||l>0&&n;)a!==0&&(l===0||!n||e.z<=n.z)?(i=e,e=e.nextZ,a--):(i=n,n=n.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;e=n}s.nextZ=null,c*=2}while(o>1);return r}function x1(r,t,e,n,i){return r=(r-e)*i|0,t=(t-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function Yd(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function Ii(r,t,e,n,i,s,o,a){return(i-o)*(t-a)>=(r-o)*(s-a)&&(r-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(s-a)>=(i-o)*(n-a)}function qd(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!Zd(r,t)&&(Ps(r,t)&&Ps(t,r)&&Jd(r,t)&&(ge(r.prev,r,t.prev)||ge(r,t.prev,t))||aa(r,t)&&ge(r.prev,r,r.next)>0&&ge(t.prev,t,t.next)>0)}function ge(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function aa(r,t){return r.x===t.x&&r.y===t.y}function Ph(r,t,e,n){const i=Cr(ge(r,t,e)),s=Cr(ge(r,t,n)),o=Cr(ge(e,n,r)),a=Cr(ge(e,n,t));return!!(i!==s&&o!==a||i===0&&Ar(r,e,t)||s===0&&Ar(r,n,t)||o===0&&Ar(e,r,n)||a===0&&Ar(e,t,n))}function Ar(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function Cr(r){return r>0?1:r<0?-1:0}function Zd(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&Ph(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function Ps(r,t){return ge(r.prev,r,r.next)<0?ge(r,t,r.next)>=0&&ge(r,r.prev,t)>=0:ge(r,t,r.prev)<0||ge(r,r.next,t)<0}function Jd(r,t){let e=r,n=!1;const i=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&i<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==r);return n}function Ih(r,t){const e=new y1(r.i,r.x,r.y),n=new y1(t.i,t.x,t.y),i=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=i,i.prev=e,n.next=e,e.prev=n,s.next=n,n.prev=s,n}function dc(r,t,e,n){const i=new y1(r,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Is(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function y1(r,t,e){this.i=r,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function $d(r,t,e,n){let i=0;for(let s=t,o=e-n;s<e;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class N0{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return n*.5}static isClockWise(t){return N0.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];fc(t),pc(n,t);let o=t.length;e.forEach(fc);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,pc(n,e[l]);const a=Ud.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function fc(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function pc(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class la extends Vt{constructor(t=new jn([new Y(.5,.5),new Y(-.5,.5),new Y(-.5,-.5),new Y(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],s=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new St(i,3)),this.setAttribute("uv",new St(s,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,h=e.steps!==void 0?e.steps:1,u=e.depth!==void 0?e.depth:1;let d=e.bevelEnabled!==void 0?e.bevelEnabled:!0,f=e.bevelThickness!==void 0?e.bevelThickness:.2,m=e.bevelSize!==void 0?e.bevelSize:f-.1,_=e.bevelOffset!==void 0?e.bevelOffset:0,g=e.bevelSegments!==void 0?e.bevelSegments:3;const p=e.extrudePath,v=e.UVGenerator!==void 0?e.UVGenerator:Kd;let x,y=!1,P,T,R,I;p&&(x=p.getSpacedPoints(h),y=!0,d=!1,P=p.computeFrenetFrames(h,!1),T=new E,R=new E,I=new E),d||(g=0,f=0,m=0,_=0);const b=a.extractPoints(c);let M=b.shape;const L=b.holes;if(!N0.isClockWise(M)){M=M.reverse();for(let tt=0,Q=L.length;tt<Q;tt++){const C=L[tt];N0.isClockWise(C)&&(L[tt]=C.reverse())}}const O=N0.triangulateShape(M,L),V=M;for(let tt=0,Q=L.length;tt<Q;tt++){const C=L[tt];M=M.concat(C)}function X(tt,Q,C){return Q||console.error("THREE.ExtrudeGeometry: vec does not exist"),tt.clone().addScaledVector(Q,C)}const G=M.length,$=O.length;function H(tt,Q,C){let Ct,et,vt;const rt=tt.x-Q.x,Ut=tt.y-Q.y,mt=C.x-tt.x,A=C.y-tt.y,S=rt*rt+Ut*Ut,F=rt*A-Ut*mt;if(Math.abs(F)>Number.EPSILON){const Z=Math.sqrt(S),j=Math.sqrt(mt*mt+A*A),J=Q.x-Ut/Z,At=Q.y+rt/Z,ut=C.x-A/j,yt=C.y+mt/j,qt=((ut-J)*A-(yt-At)*mt)/(rt*A-Ut*mt);Ct=J+rt*qt-tt.x,et=At+Ut*qt-tt.y;const st=Ct*Ct+et*et;if(st<=2)return new Y(Ct,et);vt=Math.sqrt(st/2)}else{let Z=!1;rt>Number.EPSILON?mt>Number.EPSILON&&(Z=!0):rt<-Number.EPSILON?mt<-Number.EPSILON&&(Z=!0):Math.sign(Ut)===Math.sign(A)&&(Z=!0),Z?(Ct=-Ut,et=rt,vt=Math.sqrt(S)):(Ct=rt,et=Ut,vt=Math.sqrt(S/2))}return new Y(Ct/vt,et/vt)}const nt=[];for(let tt=0,Q=V.length,C=Q-1,Ct=tt+1;tt<Q;tt++,C++,Ct++)C===Q&&(C=0),Ct===Q&&(Ct=0),nt[tt]=H(V[tt],V[C],V[Ct]);const ht=[];let xt,Nt=nt.concat();for(let tt=0,Q=L.length;tt<Q;tt++){const C=L[tt];xt=[];for(let Ct=0,et=C.length,vt=et-1,rt=Ct+1;Ct<et;Ct++,vt++,rt++)vt===et&&(vt=0),rt===et&&(rt=0),xt[Ct]=H(C[Ct],C[vt],C[rt]);ht.push(xt),Nt=Nt.concat(xt)}for(let tt=0;tt<g;tt++){const Q=tt/g,C=f*Math.cos(Q*Math.PI/2),Ct=m*Math.sin(Q*Math.PI/2)+_;for(let et=0,vt=V.length;et<vt;et++){const rt=X(V[et],nt[et],Ct);at(rt.x,rt.y,-C)}for(let et=0,vt=L.length;et<vt;et++){const rt=L[et];xt=ht[et];for(let Ut=0,mt=rt.length;Ut<mt;Ut++){const A=X(rt[Ut],xt[Ut],Ct);at(A.x,A.y,-C)}}}const ee=m+_;for(let tt=0;tt<G;tt++){const Q=d?X(M[tt],Nt[tt],ee):M[tt];y?(R.copy(P.normals[0]).multiplyScalar(Q.x),T.copy(P.binormals[0]).multiplyScalar(Q.y),I.copy(x[0]).add(R).add(T),at(I.x,I.y,I.z)):at(Q.x,Q.y,0)}for(let tt=1;tt<=h;tt++)for(let Q=0;Q<G;Q++){const C=d?X(M[Q],Nt[Q],ee):M[Q];y?(R.copy(P.normals[tt]).multiplyScalar(C.x),T.copy(P.binormals[tt]).multiplyScalar(C.y),I.copy(x[tt]).add(R).add(T),at(I.x,I.y,I.z)):at(C.x,C.y,u/h*tt)}for(let tt=g-1;tt>=0;tt--){const Q=tt/g,C=f*Math.cos(Q*Math.PI/2),Ct=m*Math.sin(Q*Math.PI/2)+_;for(let et=0,vt=V.length;et<vt;et++){const rt=X(V[et],nt[et],Ct);at(rt.x,rt.y,u+C)}for(let et=0,vt=L.length;et<vt;et++){const rt=L[et];xt=ht[et];for(let Ut=0,mt=rt.length;Ut<mt;Ut++){const A=X(rt[Ut],xt[Ut],Ct);y?at(A.x,A.y+x[h-1].y,x[h-1].x+C):at(A.x,A.y,u+C)}}}q(),ot();function q(){const tt=i.length/3;if(d){let Q=0,C=G*Q;for(let Ct=0;Ct<$;Ct++){const et=O[Ct];Pt(et[2]+C,et[1]+C,et[0]+C)}Q=h+g*2,C=G*Q;for(let Ct=0;Ct<$;Ct++){const et=O[Ct];Pt(et[0]+C,et[1]+C,et[2]+C)}}else{for(let Q=0;Q<$;Q++){const C=O[Q];Pt(C[2],C[1],C[0])}for(let Q=0;Q<$;Q++){const C=O[Q];Pt(C[0]+G*h,C[1]+G*h,C[2]+G*h)}}n.addGroup(tt,i.length/3-tt,0)}function ot(){const tt=i.length/3;let Q=0;Tt(V,Q),Q+=V.length;for(let C=0,Ct=L.length;C<Ct;C++){const et=L[C];Tt(et,Q),Q+=et.length}n.addGroup(tt,i.length/3-tt,1)}function Tt(tt,Q){let C=tt.length;for(;--C>=0;){const Ct=C;let et=C-1;et<0&&(et=tt.length-1);for(let vt=0,rt=h+g*2;vt<rt;vt++){const Ut=G*vt,mt=G*(vt+1),A=Q+Ct+Ut,S=Q+et+Ut,F=Q+et+mt,Z=Q+Ct+mt;Kt(A,S,F,Z)}}}function at(tt,Q,C){l.push(tt),l.push(Q),l.push(C)}function Pt(tt,Q,C){Rt(tt),Rt(Q),Rt(C);const Ct=i.length/3,et=v.generateTopUV(n,i,Ct-3,Ct-2,Ct-1);ie(et[0]),ie(et[1]),ie(et[2])}function Kt(tt,Q,C,Ct){Rt(tt),Rt(Q),Rt(Ct),Rt(Q),Rt(C),Rt(Ct);const et=i.length/3,vt=v.generateSideWallUV(n,i,et-6,et-3,et-2,et-1);ie(vt[0]),ie(vt[1]),ie(vt[3]),ie(vt[1]),ie(vt[2]),ie(vt[3])}function Rt(tt){i.push(l[tt*3+0]),i.push(l[tt*3+1]),i.push(l[tt*3+2])}function ie(tt){s.push(tt.x),s.push(tt.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return jd(e,n,t)}static fromJSON(t,e){const n=[];for(let s=0,o=t.shapes.length;s<o;s++){const a=e[t.shapes[s]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Oo[i.type]().fromJSON(i)),new la(n,t.options)}}const Kd={generateTopUV:function(r,t,e,n,i){const s=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],h=t[i*3+1];return[new Y(s,o),new Y(a,l),new Y(c,h)]},generateSideWallUV:function(r,t,e,n,i,s){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],h=t[n*3+1],u=t[n*3+2],d=t[i*3],f=t[i*3+1],m=t[i*3+2],_=t[s*3],g=t[s*3+1],p=t[s*3+2];return Math.abs(a-h)<Math.abs(o-c)?[new Y(o,1-l),new Y(c,1-u),new Y(d,1-m),new Y(_,1-p)]:[new Y(a,1-l),new Y(h,1-u),new Y(f,1-m),new Y(g,1-p)]}};function jd(r,t,e){if(e.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];e.shapes.push(s.uuid)}else e.shapes.push(r.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Hs extends yn{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Hs(t.radius,t.detail)}}class $0 extends yn{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new $0(t.radius,t.detail)}}class vn extends Vt{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,h=l+1,u=t/a,d=e/l,f=[],m=[],_=[],g=[];for(let p=0;p<h;p++){const v=p*d-o;for(let x=0;x<c;x++){const y=x*u-s;m.push(y,-v,0),_.push(0,0,1),g.push(x/a),g.push(1-p/l)}}for(let p=0;p<l;p++)for(let v=0;v<a;v++){const x=v+c*p,y=v+c*(p+1),P=v+1+c*(p+1),T=v+1+c*p;f.push(x,y,T),f.push(y,P,T)}this.setIndex(f),this.setAttribute("position",new St(m,3)),this.setAttribute("normal",new St(_,3)),this.setAttribute("uv",new St(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vn(t.width,t.height,t.widthSegments,t.heightSegments)}}class ca extends Vt{constructor(t=.5,e=1,n=32,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],h=[];let u=t;const d=(e-t)/i,f=new E,m=new Y;for(let _=0;_<=i;_++){for(let g=0;g<=n;g++){const p=s+g/n*o;f.x=u*Math.cos(p),f.y=u*Math.sin(p),l.push(f.x,f.y,f.z),c.push(0,0,1),m.x=(f.x/e+1)/2,m.y=(f.y/e+1)/2,h.push(m.x,m.y)}u+=d}for(let _=0;_<i;_++){const g=_*(n+1);for(let p=0;p<n;p++){const v=p+g,x=v,y=v+n+1,P=v+n+2,T=v+1;a.push(x,y,T),a.push(y,P,T)}}this.setIndex(a),this.setAttribute("position",new St(l,3)),this.setAttribute("normal",new St(c,3)),this.setAttribute("uv",new St(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new ca(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class ha extends Vt{constructor(t=new jn([new Y(0,.5),new Y(-.5,-.5),new Y(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let h=0;h<t.length;h++)c(t[h]),this.addGroup(a,l,h),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new St(i,3)),this.setAttribute("normal",new St(s,3)),this.setAttribute("uv",new St(o,2));function c(h){const u=i.length/3,d=h.extractPoints(e);let f=d.shape;const m=d.holes;N0.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,p=m.length;g<p;g++){const v=m[g];N0.isClockWise(v)===!0&&(m[g]=v.reverse())}const _=N0.triangulateShape(f,m);for(let g=0,p=m.length;g<p;g++){const v=m[g];f=f.concat(v)}for(let g=0,p=f.length;g<p;g++){const v=f[g];i.push(v.x,v.y,0),s.push(0,0,1),o.push(v.x,v.y)}for(let g=0,p=_.length;g<p;g++){const v=_[g],x=v[0]+u,y=v[1]+u,P=v[2]+u;n.push(x,y,P),l+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return Qd(e,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const o=e[t.shapes[i]];n.push(o)}return new ha(n,t.curveSegments)}}function Qd(r,t){if(t.shapes=[],Array.isArray(r))for(let e=0,n=r.length;e<n;e++){const i=r[e];t.shapes.push(i.uuid)}else t.shapes.push(r.uuid);return t}class Vi extends Vt{constructor(t=1,e=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const h=[],u=new E,d=new E,f=[],m=[],_=[],g=[];for(let p=0;p<=n;p++){const v=[],x=p/n;let y=0;p===0&&o===0?y=.5/e:p===n&&l===Math.PI&&(y=-.5/e);for(let P=0;P<=e;P++){const T=P/e;u.x=-t*Math.cos(i+T*s)*Math.sin(o+x*a),u.y=t*Math.cos(o+x*a),u.z=t*Math.sin(i+T*s)*Math.sin(o+x*a),m.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),g.push(T+y,1-x),v.push(c++)}h.push(v)}for(let p=0;p<n;p++)for(let v=0;v<e;v++){const x=h[p][v+1],y=h[p][v],P=h[p+1][v],T=h[p+1][v+1];(p!==0||o>0)&&f.push(x,y,T),(p!==n-1||l<Math.PI)&&f.push(y,P,T)}this.setIndex(f),this.setAttribute("position",new St(m,3)),this.setAttribute("normal",new St(_,3)),this.setAttribute("uv",new St(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Vi(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class ua extends yn{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new ua(t.radius,t.detail)}}class J0 extends Vt{constructor(t=1,e=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],h=new E,u=new E,d=new E;for(let f=0;f<=n;f++)for(let m=0;m<=i;m++){const _=m/i*s,g=f/n*Math.PI*2;u.x=(t+e*Math.cos(g))*Math.cos(_),u.y=(t+e*Math.cos(g))*Math.sin(_),u.z=e*Math.sin(g),a.push(u.x,u.y,u.z),h.x=t*Math.cos(_),h.y=t*Math.sin(_),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(m/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let m=1;m<=i;m++){const _=(i+1)*f+m-1,g=(i+1)*(f-1)+m-1,p=(i+1)*(f-1)+m,v=(i+1)*f+m;o.push(_,g,v),o.push(g,p,v)}this.setIndex(o),this.setAttribute("position",new St(a,3)),this.setAttribute("normal",new St(l,3)),this.setAttribute("uv",new St(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new J0(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class da extends Vt{constructor(t=1,e=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],h=[],u=new E,d=new E,f=new E,m=new E,_=new E,g=new E,p=new E;for(let x=0;x<=n;++x){const y=x/n*s*Math.PI*2;v(y,s,o,t,f),v(y+.01,s,o,t,m),g.subVectors(m,f),p.addVectors(m,f),_.crossVectors(g,p),p.crossVectors(_,g),_.normalize(),p.normalize();for(let P=0;P<=i;++P){const T=P/i*Math.PI*2,R=-e*Math.cos(T),I=e*Math.sin(T);u.x=f.x+(R*p.x+I*_.x),u.y=f.y+(R*p.y+I*_.y),u.z=f.z+(R*p.z+I*_.z),l.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),c.push(d.x,d.y,d.z),h.push(x/n),h.push(P/i)}}for(let x=1;x<=n;x++)for(let y=1;y<=i;y++){const P=(i+1)*(x-1)+(y-1),T=(i+1)*x+(y-1),R=(i+1)*x+y,I=(i+1)*(x-1)+y;a.push(P,T,I),a.push(T,R,I)}this.setIndex(a),this.setAttribute("position",new St(l,3)),this.setAttribute("normal",new St(c,3)),this.setAttribute("uv",new St(h,2));function v(x,y,P,T,R){const I=Math.cos(x),b=Math.sin(x),M=P/y*x,L=Math.cos(M);R.x=T*(2+L)*.5*I,R.y=T*(2+L)*b*.5,R.z=T*Math.sin(M)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new da(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class fa extends Vt{constructor(t=new Q1(new E(-1,-1,0),new E(-1,1,0),new E(1,1,0)),e=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:s};const o=t.computeFrenetFrames(e,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new E,l=new E,c=new Y;let h=new E;const u=[],d=[],f=[],m=[];_(),this.setIndex(m),this.setAttribute("position",new St(u,3)),this.setAttribute("normal",new St(d,3)),this.setAttribute("uv",new St(f,2));function _(){for(let x=0;x<e;x++)g(x);g(s===!1?e:0),v(),p()}function g(x){h=t.getPointAt(x/e,h);const y=o.normals[x],P=o.binormals[x];for(let T=0;T<=i;T++){const R=T/i*Math.PI*2,I=Math.sin(R),b=-Math.cos(R);l.x=b*y.x+I*P.x,l.y=b*y.y+I*P.y,l.z=b*y.z+I*P.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=h.x+n*l.x,a.y=h.y+n*l.y,a.z=h.z+n*l.z,u.push(a.x,a.y,a.z)}}function p(){for(let x=1;x<=e;x++)for(let y=1;y<=i;y++){const P=(i+1)*(x-1)+(y-1),T=(i+1)*x+(y-1),R=(i+1)*x+y,I=(i+1)*(x-1)+y;m.push(P,T,I),m.push(T,R,I)}}function v(){for(let x=0;x<=e;x++)for(let y=0;y<=i;y++)c.x=x/e,c.y=y/i,f.push(c.x,c.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new fa(new Oo[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Lh extends Vt{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new E,s=new E;if(t.index!==null){const o=t.attributes.position,a=t.index;let l=t.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,f=u.count;for(let m=d,_=d+f;m<_;m+=3)for(let g=0;g<3;g++){const p=a.getX(m+g),v=a.getX(m+(g+1)%3);i.fromBufferAttribute(o,p),s.fromBufferAttribute(o,v),mc(i,s,n)===!0&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}}else{const o=t.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const h=3*a+c,u=3*a+(c+1)%3;i.fromBufferAttribute(o,h),s.fromBufferAttribute(o,u),mc(i,s,n)===!0&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}this.setAttribute("position",new St(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function mc(r,t,e){const n=`${r.x},${r.y},${r.z}-${t.x},${t.y},${t.z}`,i=`${t.x},${t.y},${t.z}-${r.x},${r.y},${r.z}`;return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var gc=Object.freeze({__proto__:null,BoxGeometry:ve,CapsuleGeometry:ia,CircleGeometry:sa,ConeGeometry:ra,CylinderGeometry:Te,DodecahedronGeometry:oa,EdgesGeometry:Ch,ExtrudeGeometry:la,IcosahedronGeometry:Hs,LatheGeometry:Vs,OctahedronGeometry:$0,PlaneGeometry:vn,PolyhedronGeometry:yn,RingGeometry:ca,ShapeGeometry:ha,SphereGeometry:Vi,TetrahedronGeometry:ua,TorusGeometry:J0,TorusKnotGeometry:da,TubeGeometry:fa,WireframeGeometry:Lh});class Dh extends We{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new dt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Uh extends T0{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class el extends We{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new dt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xn,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qe,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Nh extends el{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Y(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return kt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new dt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new dt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new dt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class nl extends We{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new dt(16777215),this.specular=new dt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xn,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qe,this.combine=Fs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Fh extends We{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new dt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xn,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Oh extends We{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xn,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Bh extends We{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new dt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xn,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qe,this.combine=Fs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class il extends We{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=J2,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class sl extends We{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class zh extends We{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new dt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xn,this.normalScale=new Y(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class kh extends Fe{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function qn(r,t,e){return!r||!e&&r.constructor===t?r:typeof t.BYTES_PER_ELEMENT=="number"?new t(r):Array.prototype.slice.call(r)}function Vh(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function Hh(r){function t(i,s){return r[i]-r[s]}const e=r.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function v1(r,t,e){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=e[s]*t;for(let l=0;l!==t;++l)i[o++]=r[a+l]}return i}function rl(r,t,e,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(t.push(s.time),e.push(...o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(t.push(s.time),o.toArray(e,e.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(t.push(s.time),e.push(o)),s=r[i++];while(s!==void 0)}function t4(r,t,e,n,i=30){const s=r.clone();s.name=t;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],h=c.getValueSize(),u=[],d=[];for(let f=0;f<c.times.length;++f){const m=c.times[f]*i;if(!(m<e||m>=n)){u.push(c.times[f]);for(let _=0;_<h;++_)d.push(c.values[f*h+_])}}u.length!==0&&(c.times=qn(u,c.times.constructor),c.values=qn(d,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function e4(r,t=0,e=r,n=30){n<=0&&(n=30);const i=e.tracks.length,s=t/n;for(let o=0;o<i;++o){const a=e.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(p){return p.name===a.name&&p.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const m=a.times.length-1;let _;if(s<=a.times[0]){const p=h,v=u-h;_=a.values.slice(p,v)}else if(s>=a.times[m]){const p=m*u+h,v=p+u-h;_=a.values.slice(p,v)}else{const p=a.createInterpolant(),v=h,x=u-h;p.evaluate(s),_=p.resultBuffer.slice(v,x)}l==="quaternion"&&new de().fromArray(_).normalize().conjugate().toArray(_);const g=c.times.length;for(let p=0;p<g;++p){const v=p*f+d;if(l==="quaternion")de.multiplyQuaternionsFlat(c.values,v,_,0,c.values,v);else{const x=f-d*2;for(let y=0;y<x;++y)c.values[v+y]-=_[y]}}}return r.blendMode=k1,r}const n4={convertArray:qn,isTypedArray:Vh,getKeyframeOrder:Hh,sortedArray:v1,flattenJSON:rl,subclip:t4,makeClipAdditive:e4};class Gs{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],s=e[n-1];t:{e:{let o;n:{i:if(!(t<i)){for(let a=n+2;;){if(i===void 0){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=e[++n],t<i)break e}o=e.length;break n}if(!(t>=s)){const a=e[1];t<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=e[--n-1],t>=s)break e}o=n,n=0;break n}break t}for(;n<o;){const a=n+o>>>1;t<e[a]?o=a:n=a+1}if(i=e[n],s=e[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let o=0;o!==i;++o)e[o]=n[s+o];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Gh extends Gs{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Wn,endingEnd:Wn}}intervalChanged_(t,e,n){const i=this.parameterPositions;let s=t-2,o=t+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Xn:s=t,a=2*e-n;break;case bs:s=i.length-2,a=e+i[s]-i[s+1];break;default:s=t,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Xn:o=t,l=2*n-e;break;case bs:o=1,l=n+i[1]-i[0];break;default:o=t-1,l=e}const c=(n-e)*.5,h=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(l-n),this._offsetPrev=s*h,this._offsetNext=o*h}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,m=(n-e)/(i-e),_=m*m,g=_*m,p=-d*g+2*d*_-d*m,v=(1+d)*g+(-1.5-2*d)*_+(-.5+d)*m+1,x=(-1-f)*g+(1.5+f)*_+.5*m,y=f*g-f*_;for(let P=0;P!==a;++P)s[P]=p*o[h+P]+v*o[c+P]+x*o[l+P]+y*o[u+P];return s}}class ol extends Gs{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,h=(n-e)/(i-e),u=1-h;for(let d=0;d!==a;++d)s[d]=o[c+d]*u+o[l+d]*h;return s}}class Wh extends Gs{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class P0{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=qn(e,this.TimeBufferType),this.values=qn(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:qn(t.times,Array),values:qn(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new Wh(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new ol(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Gh(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Ss:e=this.InterpolantFactoryMethodDiscrete;break;case Do:e=this.InterpolantFactoryMethodLinear;break;case Xr:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ss;case this.InterpolantFactoryMethodLinear:return Do;case this.InterpolantFactoryMethodSmooth:return Xr}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<t;)++s;for(;o!==-1&&n[o]>e;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=n.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),t=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),t=!1;break}o=l}if(i!==void 0&&Vh(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===Xr,s=t.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=t[a],h=t[a+1];if(c!==h&&(a!==1||c!==t[0]))if(i)l=!0;else{const u=a*n,d=u-n,f=u+n;for(let m=0;m!==n;++m){const _=e[u+m];if(_!==e[d+m]||_!==e[f+m]){l=!0;break}}}if(l){if(a!==o){t[o]=t[a];const u=a*n,d=o*n;for(let f=0;f!==n;++f)e[d+f]=e[u+f]}++o}}if(s>0){t[o]=t[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)e[l+c]=e[a+c];++o}return o!==t.length?(this.times=t.slice(0,o),this.values=e.slice(0,o*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}P0.prototype.TimeBufferType=Float32Array;P0.prototype.ValueBufferType=Float32Array;P0.prototype.DefaultInterpolation=Do;class ai extends P0{constructor(t,e,n){super(t,e,n)}}ai.prototype.ValueTypeName="bool";ai.prototype.ValueBufferType=Array;ai.prototype.DefaultInterpolation=Ss;ai.prototype.InterpolantFactoryMethodLinear=void 0;ai.prototype.InterpolantFactoryMethodSmooth=void 0;class al extends P0{}al.prototype.ValueTypeName="color";class Ls extends P0{}Ls.prototype.ValueTypeName="number";class Xh extends Gs{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-e)/(i-e);let c=t*a;for(let h=c+a;c!==h;c+=4)de.slerpFlat(s,0,o,c-a,o,c,l);return s}}class Ws extends P0{InterpolantFactoryMethodLinear(t){return new Xh(this.times,this.values,this.getValueSize(),t)}}Ws.prototype.ValueTypeName="quaternion";Ws.prototype.InterpolantFactoryMethodSmooth=void 0;class li extends P0{constructor(t,e,n){super(t,e,n)}}li.prototype.ValueTypeName="string";li.prototype.ValueBufferType=Array;li.prototype.DefaultInterpolation=Ss;li.prototype.InterpolantFactoryMethodLinear=void 0;li.prototype.InterpolantFactoryMethodSmooth=void 0;class Ds extends P0{}Ds.prototype.ValueTypeName="vector";class Us{constructor(t="",e=-1,n=[],i=Yo){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=u0(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let o=0,a=n.length;o!==a;++o)e.push(s4(n[o]).scale(i));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let s=0,o=n.length;s!==o;++s)e.push(P0.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const s=e.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const h=Hh(l);l=v1(l,1,h),c=v1(c,1,h),!i&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Ls(".morphTargetInfluences["+e[a].name+"]",l,c).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=t.length;a<l;a++){const c=t[a],h=c.name.match(s);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],e,n));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(u,d,f,m,_){if(f.length!==0){const g=[],p=[];rl(f,g,p,m),g.length!==0&&_.push(new u(d,g,p))}},i=[],s=t.name||"default",o=t.fps||30,a=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let m;for(m=0;m<d.length;m++)if(d[m].morphTargets)for(let _=0;_<d[m].morphTargets.length;_++)f[d[m].morphTargets[_]]=-1;for(const _ in f){const g=[],p=[];for(let v=0;v!==d[m].morphTargets.length;++v){const x=d[m];g.push(x.time),p.push(x.morphTarget===_?1:0)}i.push(new Ls(".morphTargetInfluence["+_+"]",g,p))}l=f.length*o}else{const f=".bones["+e[u].name+"]";n(Ds,f+".position",d,"pos",i),n(Ws,f+".quaternion",d,"rot",i),n(Ds,f+".scale",d,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const s=this.tracks[n];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function i4(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ls;case"vector":case"vector2":case"vector3":case"vector4":return Ds;case"color":return al;case"quaternion":return Ws;case"bool":case"boolean":return ai;case"string":return li}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function s4(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=i4(r.type);if(r.times===void 0){const e=[],n=[];rl(r.keys,e,n,"value"),r.times=e,r.values=n}return t.parse!==void 0?t.parse(r):new t(r.name,r.times,r.values,r.interpolation)}const K0={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class ll{constructor(t,e,n){const i=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(h){a++,s===!1&&i.onStart!==void 0&&i.onStart(h,o,a),s=!0},this.itemEnd=function(h){o++,i.onProgress!==void 0&&i.onProgress(h,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const f=c[u],m=c[u+1];if(f.global&&(f.lastIndex=0),f.test(h))return m}return null}}}const Yh=new ll;class o0{constructor(t){this.manager=t!==void 0?t:Yh,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}o0.DEFAULT_MATERIAL_NAME="__DEFAULT";const X0={};class r4 extends Error{constructor(t,e){super(t),this.response=e}}class rn extends o0{constructor(t){super(t)}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=K0.get(t);if(s!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(X0[t]!==void 0){X0[t].push({onLoad:e,onProgress:n,onError:i});return}X0[t]=[],X0[t].push({onLoad:e,onProgress:n,onError:i});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=X0[t],u=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,m=f!==0;let _=0;const g=new ReadableStream({start(p){v();function v(){u.read().then(({done:x,value:y})=>{if(x)p.close();else{_+=y.byteLength;const P=new ProgressEvent("progress",{lengthComputable:m,loaded:_,total:f});for(let T=0,R=h.length;T<R;T++){const I=h[T];I.onProgress&&I.onProgress(P)}p.enqueue(y),v()}},x=>{p.error(x)})}}});return new Response(g)}else throw new r4(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,a));case"json":return c.json();default:if(a===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(m=>f.decode(m))}}}).then(c=>{K0.add(t,c);const h=X0[t];delete X0[t];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onLoad&&f.onLoad(c)}}).catch(c=>{const h=X0[t];if(h===void 0)throw this.manager.itemError(t),c;delete X0[t];for(let u=0,d=h.length;u<d;u++){const f=h[u];f.onError&&f.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class o4 extends o0{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new rn(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=Us.parse(t[n]);e.push(i)}return e}}class a4 extends o0{constructor(t){super(t)}load(t,e,n,i){const s=this,o=[],a=new ea,l=new rn(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function h(u){l.load(t[u],function(d){const f=s.parse(d,!0);o[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=Re),a.image=o,a.format=f.format,a.needsUpdate=!0,e&&e(a))},n,i)}if(Array.isArray(t))for(let u=0,d=t.length;u<d;++u)h(u);else l.load(t,function(u){const d=s.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let m=0;m<f;m++){o[m]={mipmaps:[]};for(let _=0;_<d.mipmapCount;_++)o[m].mipmaps.push(d.mipmaps[m*d.mipmapCount+_]),o[m].format=d.format,o[m].width=d.width,o[m].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=Re),a.format=d.format,a.needsUpdate=!0,e&&e(a)},n,i);return a}}class Ns extends o0{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=K0.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;const a=As("img");function l(){h(),K0.add(t,this),e&&e(this),s.manager.itemEnd(t)}function c(u){h(),i&&i(u),s.manager.itemError(t),s.manager.itemEnd(t)}function h(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(t),a.src=t,a}}class l4 extends o0{constructor(t){super(t)}load(t,e,n,i){const s=new zs;s.colorSpace=Ze;const o=new Ns(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(t[c],function(h){s.images[c]=h,a++,a===6&&(s.needsUpdate=!0,e&&e(s))},void 0,i)}for(let c=0;c<t.length;++c)l(c);return s}}class c4 extends o0{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new E0,a=new rn(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(t,function(l){let c;try{c=s.parse(l)}catch(h){if(i!==void 0)i(h);else{console.error(h);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:m0,o.wrapT=c.wrapT!==void 0?c.wrapT:m0,o.magFilter=c.magFilter!==void 0?c.magFilter:Re,o.minFilter=c.minFilter!==void 0?c.minFilter:Re,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=U0),c.mipmapCount===1&&(o.minFilter=Re),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,e&&e(o,c)},n,i),o}}class h4 extends o0{constructor(t){super(t)}load(t,e,n,i){const s=new Me,o=new Ns(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){s.image=a,s.needsUpdate=!0,e!==void 0&&e(s)},n,i),s}}class Mn extends Zt{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new dt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class cl extends Mn{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Zt.DEFAULT_UP),this.updateMatrix(),this.groundColor=new dt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Ja=new Dt,_c=new E,xc=new E;class hl{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Y(512,512),this.map=null,this.mapPass=null,this.matrix=new Dt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new ks,this._frameExtents=new Y(1,1),this._viewportCount=1,this._viewports=[new te(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;_c.setFromMatrixPosition(t.matrixWorld),e.position.copy(_c),xc.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(xc),e.updateMatrixWorld(),Ja.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ja),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Ja)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class u4 extends hl{constructor(){super(new De(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,n=Fi*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;(n!==e.fov||i!==e.aspect||s!==e.far)&&(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class qh extends Mn{constructor(t,e,n=0,i=Math.PI/3,s=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Zt.DEFAULT_UP),this.updateMatrix(),this.target=new Zt,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new u4}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const yc=new Dt,es=new E,$a=new E;class d4 extends hl{constructor(){super(new De(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Y(4,2),this._viewportCount=6,this._viewports=[new te(2,1,1,1),new te(0,1,1,1),new te(3,1,1,1),new te(1,1,1,1),new te(3,0,1,1),new te(1,0,1,1)],this._cubeDirections=[new E(1,0,0),new E(-1,0,0),new E(0,0,1),new E(0,0,-1),new E(0,1,0),new E(0,-1,0)],this._cubeUps=[new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,1,0),new E(0,0,1),new E(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),es.setFromMatrixPosition(t.matrixWorld),n.position.copy(es),$a.copy(n.position),$a.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt($a),n.updateMatrixWorld(),i.makeTranslation(-es.x,-es.y,-es.z),yc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yc)}}class Zh extends Mn{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new d4}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class Xs extends $o{constructor(t=-1,e=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=h*this.view.offsetY,l=a-h*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class f4 extends hl{constructor(){super(new Xs(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ul extends Mn{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Zt.DEFAULT_UP),this.updateMatrix(),this.target=new Zt,this.shadow=new f4}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class Jh extends Mn{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class $h extends Mn{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Kh{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new E)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*s),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],1.092548*(n*i)),e.addScaledVector(o[5],1.092548*(i*s)),e.addScaledVector(o[6],.315392*(3*s*s-1)),e.addScaledVector(o[7],1.092548*(n*s)),e.addScaledVector(o[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],2*.511664*i),e.addScaledVector(o[2],2*.511664*s),e.addScaledVector(o[3],2*.511664*n),e.addScaledVector(o[4],2*.429043*n*i),e.addScaledVector(o[5],2*.429043*i*s),e.addScaledVector(o[6],.743125*s*s-.247708),e.addScaledVector(o[7],2*.429043*n*s),e.addScaledVector(o[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,s=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-i*i)}}class jh extends Mn{constructor(t=new Kh,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class pa extends o0{constructor(t){super(t),this.textures={}}load(t,e,n,i){const s=this,o=new rn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(s){return e[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),e[s]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new dt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const s in t.uniforms){const o=t.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new dt().setHex(o.value);break;case"v2":i.uniforms[s].value=new Y().fromArray(o.value);break;case"v3":i.uniforms[s].value=new E().fromArray(o.value);break;case"v4":i.uniforms[s].value=new te().fromArray(o.value);break;case"m3":i.uniforms[s].value=new Ht().fromArray(o.value);break;case"m4":i.uniforms[s].value=new Dt().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const s in t.extensions)i.extensions[s]=t.extensions[s];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let s=t.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new Y().fromArray(s)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new Y().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return pa.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:Dh,SpriteMaterial:X1,RawShaderMaterial:Uh,ShaderMaterial:T0,PointsMaterial:q1,MeshPhysicalMaterial:Nh,MeshStandardMaterial:el,MeshPhongMaterial:nl,MeshToonMaterial:Fh,MeshNormalMaterial:Oh,MeshLambertMaterial:Bh,MeshDepthMaterial:il,MeshDistanceMaterial:sl,MeshBasicMaterial:A0,MeshMatcapMaterial:zh,LineDashedMaterial:kh,LineBasicMaterial:Fe,Material:We};return new e[t]}}class M1{static decodeText(t){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let n=0,i=t.length;n<i;n++)e+=String.fromCharCode(t[n]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class Qh extends Vt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class tu extends o0{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new rn(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(f,m){if(e[m]!==void 0)return e[m];const g=f.interleavedBuffers[m],p=s(f,g.buffer),v=Pi(g.type,p),x=new Qo(v,g.stride);return x.uuid=g.uuid,e[m]=x,x}function s(f,m){if(n[m]!==void 0)return n[m];const g=f.arrayBuffers[m],p=new Uint32Array(g).buffer;return n[m]=p,p}const o=t.isInstancedBufferGeometry?new Qh:new Vt,a=t.data.index;if(a!==void 0){const f=Pi(a.type,a.array);o.setIndex(new ce(f,1))}const l=t.data.attributes;for(const f in l){const m=l[f];let _;if(m.isInterleavedBufferAttribute){const g=i(t.data,m.data);_=new si(g,m.itemSize,m.offset,m.normalized)}else{const g=Pi(m.type,m.array),p=m.isInstancedBufferAttribute?Bi:ce;_=new p(g,m.itemSize,m.normalized)}m.name!==void 0&&(_.name=m.name),m.usage!==void 0&&_.setUsage(m.usage),o.setAttribute(f,_)}const c=t.data.morphAttributes;if(c)for(const f in c){const m=c[f],_=[];for(let g=0,p=m.length;g<p;g++){const v=m[g];let x;if(v.isInterleavedBufferAttribute){const y=i(t.data,v.data);x=new si(y,v.itemSize,v.offset,v.normalized)}else{const y=Pi(v.type,v.array);x=new ce(y,v.itemSize,v.normalized)}v.name!==void 0&&(x.name=v.name),_.push(x)}o.morphAttributes[f]=_}t.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const u=t.data.groups||t.data.drawcalls||t.data.offsets;if(u!==void 0)for(let f=0,m=u.length;f!==m;++f){const _=u[f];o.addGroup(_.start,_.count,_.materialIndex)}const d=t.data.boundingSphere;if(d!==void 0){const f=new E;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new Ge(f,d.radius)}return t.name&&(o.name=t.name),t.userData&&(o.userData=t.userData),o}}class p4 extends o0{constructor(t){super(t)}load(t,e,n,i){const s=this,o=this.path===""?M1.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||o;const a=new rn(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(l){let c=null;try{c=JSON.parse(l)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+t+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}s.parse(c,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?M1.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const s=new rn(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(t,e),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(a)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,i),o=this.parseImages(t.images,function(){e!==void 0&&e(c)}),a=this.parseTextures(t.textures,o),l=this.parseMaterials(t.materials,a),c=this.parseObject(t.object,s,l,a,n),h=this.parseSkeletons(t.skeletons,c);if(this.bindSkeletons(c,h),this.bindLightTargets(c),e!==void 0){let u=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&e(c)}return c}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),s=await this.parseImagesAsync(t.images),o=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,o),l=this.parseObject(t.object,i,a,o,e),c=this.parseSkeletons(t.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const s=new jn().fromJSON(t[n]);e[s.uuid]=s}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=new ta().fromJSON(t[s],i);n[a.uuid]=a}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new tu;for(let s=0,o=t.length;s<o;s++){let a;const l=t[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in gc?a=gc[l.type].fromJSON(l,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const s=new pa;s.setTextures(e);for(let o=0,a=t.length;o<a;o++){const l=t[o];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],s=Us.parse(i);e[s.uuid]=s}return e}parseImages(t,e){const n=this,i={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(h)}else return l.data?{data:Pi(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){const l=new ll(e);s=new Ns(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,h=t.length;c<h;c++){const u=t[c],d=u.url;if(Array.isArray(d)){const f=[];for(let m=0,_=d.length;m<_;m++){const g=d[m],p=a(g);p!==null&&(p instanceof HTMLImageElement?f.push(p):f.push(new E0(p.data,p.width,p.height)))}i[u.uuid]=new gn(f)}else{const f=a(u.url);i[u.uuid]=new gn(f)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:e.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:Pi(o.type,o.data),width:o.width,height:o.height}:null}if(t!==void 0&&t.length>0){i=new Ns(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=t.length;o<a;o++){const l=t[o],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const f=c[u],m=await s(f);m!==null&&(m instanceof HTMLImageElement?h.push(m):h.push(new E0(m.data,m.width,m.height)))}n[l.uuid]=new gn(h)}else{const h=await s(l.url);n[l.uuid]=new gn(h)}}}return n}parseTextures(t,e){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=t[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),e[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=e[a.image],c=l.data;let h;Array.isArray(c)?(h=new zs,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new E0:h=new Me,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=a.uuid,a.name!==void 0&&(h.name=a.name),a.mapping!==void 0&&(h.mapping=n(a.mapping,m4)),a.channel!==void 0&&(h.channel=a.channel),a.offset!==void 0&&h.offset.fromArray(a.offset),a.repeat!==void 0&&h.repeat.fromArray(a.repeat),a.center!==void 0&&h.center.fromArray(a.center),a.rotation!==void 0&&(h.rotation=a.rotation),a.wrap!==void 0&&(h.wrapS=n(a.wrap[0],vc),h.wrapT=n(a.wrap[1],vc)),a.format!==void 0&&(h.format=a.format),a.internalFormat!==void 0&&(h.internalFormat=a.internalFormat),a.type!==void 0&&(h.type=a.type),a.colorSpace!==void 0&&(h.colorSpace=a.colorSpace),a.minFilter!==void 0&&(h.minFilter=n(a.minFilter,Mc)),a.magFilter!==void 0&&(h.magFilter=n(a.magFilter,Mc)),a.anisotropy!==void 0&&(h.anisotropy=a.anisotropy),a.flipY!==void 0&&(h.flipY=a.flipY),a.generateMipmaps!==void 0&&(h.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(h.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(h.compareFunction=a.compareFunction),a.userData!==void 0&&(h.userData=a.userData),i[a.uuid]=h}return i}parseObject(t,e,n,i,s){let o;function a(d){return e[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),e[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let m=0,_=d.length;m<_;m++){const g=d[m];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),f.push(n[g])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function c(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let h,u;switch(t.type){case"Scene":o=new Uo,t.background!==void 0&&(Number.isInteger(t.background)?o.background=new dt(t.background):o.background=c(t.background)),t.environment!==void 0&&(o.environment=c(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?o.fog=new jo(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(o.fog=new Ko(t.fog.color,t.fog.density)),t.fog.name!==""&&(o.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(o.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(o.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&o.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":o=new De(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(o.focus=t.focus),t.zoom!==void 0&&(o.zoom=t.zoom),t.filmGauge!==void 0&&(o.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(o.filmOffset=t.filmOffset),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"OrthographicCamera":o=new Xs(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(o.zoom=t.zoom),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"AmbientLight":o=new Jh(t.color,t.intensity);break;case"DirectionalLight":o=new ul(t.color,t.intensity),o.target=t.target||"";break;case"PointLight":o=new Zh(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":o=new $h(t.color,t.intensity,t.width,t.height);break;case"SpotLight":o=new qh(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),o.target=t.target||"";break;case"HemisphereLight":o=new cl(t.color,t.groundColor,t.intensity);break;case"LightProbe":o=new jh().fromJSON(t);break;case"SkinnedMesh":h=a(t.geometry),u=l(t.material),o=new _h(h,u),t.bindMode!==void 0&&(o.bindMode=t.bindMode),t.bindMatrix!==void 0&&o.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(o.skeleton=t.skeleton);break;case"Mesh":h=a(t.geometry),u=l(t.material),o=new lt(h,u);break;case"InstancedMesh":h=a(t.geometry),u=l(t.material);const d=t.count,f=t.instanceMatrix,m=t.instanceColor;o=new xh(h,u,d),o.instanceMatrix=new Bi(new Float32Array(f.array),16),m!==void 0&&(o.instanceColor=new Bi(new Float32Array(m.array),m.itemSize));break;case"BatchedMesh":h=a(t.geometry),u=l(t.material),o=new yh(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,u),o.geometry=h,o.perObjectFrustumCulled=t.perObjectFrustumCulled,o.sortObjects=t.sortObjects,o._drawRanges=t.drawRanges,o._reservedRanges=t.reservedRanges,o._visibility=t.visibility,o._active=t.active,o._bounds=t.bounds.map(_=>{const g=new je;g.min.fromArray(_.boxMin),g.max.fromArray(_.boxMax);const p=new Ge;return p.radius=_.sphereRadius,p.center.fromArray(_.sphereCenter),{boxInitialized:_.boxInitialized,box:g,sphereInitialized:_.sphereInitialized,sphere:p}}),o._maxInstanceCount=t.maxInstanceCount,o._maxVertexCount=t.maxVertexCount,o._maxIndexCount=t.maxIndexCount,o._geometryInitialized=t.geometryInitialized,o._geometryCount=t.geometryCount,o._matricesTexture=c(t.matricesTexture.uuid),t.colorsTexture!==void 0&&(o._colorsTexture=c(t.colorsTexture.uuid));break;case"LOD":o=new gh;break;case"Line":o=new He(a(t.geometry),l(t.material));break;case"LineLoop":o=new vh(a(t.geometry),l(t.material));break;case"LineSegments":o=new C0(a(t.geometry),l(t.material));break;case"PointCloud":case"Points":o=new Mh(a(t.geometry),l(t.material));break;case"Sprite":o=new mh(l(t.material));break;case"Group":o=new Yn;break;case"Bone":o=new Y1;break;default:o=new Zt}if(o.uuid=t.uuid,t.name!==void 0&&(o.name=t.name),t.matrix!==void 0?(o.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=t.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(t.position!==void 0&&o.position.fromArray(t.position),t.rotation!==void 0&&o.rotation.fromArray(t.rotation),t.quaternion!==void 0&&o.quaternion.fromArray(t.quaternion),t.scale!==void 0&&o.scale.fromArray(t.scale)),t.up!==void 0&&o.up.fromArray(t.up),t.castShadow!==void 0&&(o.castShadow=t.castShadow),t.receiveShadow!==void 0&&(o.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(o.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(o.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(o.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(o.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(o.visible=t.visible),t.frustumCulled!==void 0&&(o.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(o.renderOrder=t.renderOrder),t.userData!==void 0&&(o.userData=t.userData),t.layers!==void 0&&(o.layers.mask=t.layers),t.children!==void 0){const d=t.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],e,n,i,s))}if(t.animations!==void 0){const d=t.animations;for(let f=0;f<d.length;f++){const m=d[f];o.animations.push(s[m])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(o.autoUpdate=t.autoUpdate);const d=t.levels;for(let f=0;f<d.length;f++){const m=d[f],_=o.getObjectByProperty("uuid",m.object);_!==void 0&&o.addLevel(_,m.distance,m.hysteresis)}}return o}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new Zt}})}}const m4={UVMapping:zo,CubeReflectionMapping:nn,CubeRefractionMapping:_n,EquirectangularReflectionMapping:xs,EquirectangularRefractionMapping:ys,CubeUVReflectionMapping:zi},vc={RepeatWrapping:vs,ClampToEdgeWrapping:m0,MirroredRepeatWrapping:Ms},Mc={NearestFilter:Ne,NearestMipmapNearestFilter:P1,NearestMipmapLinearFilter:Ri,LinearFilter:Re,LinearMipmapNearestFilter:ls,LinearMipmapLinearFilter:U0};class g4 extends o0{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=K0.get(t);if(o!==void 0){if(s.manager.itemStart(t),o.then){o.then(c=>{e&&e(c),s.manager.itemEnd(t)}).catch(c=>{i&&i(c)});return}return setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const l=fetch(t,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return K0.add(t,c),e&&e(c),s.manager.itemEnd(t),c}).catch(function(c){i&&i(c),K0.remove(t),s.manager.itemError(t),s.manager.itemEnd(t)});K0.add(t,l),s.manager.itemStart(t)}}let Rr;class dl{static getContext(){return Rr===void 0&&(Rr=new(window.AudioContext||window.webkitAudioContext)),Rr}static setContext(t){Rr=t}}class _4 extends o0{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new rn(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(l){try{const c=l.slice(0);dl.getContext().decodeAudioData(c,function(u){e(u)}).catch(a)}catch(c){a(c)}},n,i);function a(l){i?i(l):console.error(l),s.manager.itemError(t)}}}const Sc=new Dt,bc=new Dt,Pn=new Dt;class x4{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new De,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new De,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Pn.copy(t.projectionMatrix);const i=e.eyeSep/2,s=i*e.near/e.focus,o=e.near*Math.tan(Kn*e.fov*.5)/e.zoom;let a,l;bc.elements[12]=-i,Sc.elements[12]=i,a=-o*e.aspect+s,l=o*e.aspect+s,Pn.elements[0]=2*e.near/(l-a),Pn.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Pn),a=-o*e.aspect-s,l=o*e.aspect-s,Pn.elements[0]=2*e.near/(l-a),Pn.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Pn)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(bc),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Sc)}}class eu extends De{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t,this.index=0}}class fl{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=wc(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=wc();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function wc(){return performance.now()}const In=new E,Ec=new de,y4=new E,Ln=new E;class v4 extends Zt{constructor(){super(),this.type="AudioListener",this.context=dl.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new fl}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(In,Ec,y4),Ln.set(0,0,-1).applyQuaternion(Ec),e.positionX){const i=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(In.x,i),e.positionY.linearRampToValueAtTime(In.y,i),e.positionZ.linearRampToValueAtTime(In.z,i),e.forwardX.linearRampToValueAtTime(Ln.x,i),e.forwardY.linearRampToValueAtTime(Ln.y,i),e.forwardZ.linearRampToValueAtTime(Ln.z,i),e.upX.linearRampToValueAtTime(n.x,i),e.upY.linearRampToValueAtTime(n.y,i),e.upZ.linearRampToValueAtTime(n.z,i)}else e.setPosition(In.x,In.y,In.z),e.setOrientation(Ln.x,Ln.y,Ln.z,n.x,n.y,n.z)}}class nu extends Zt{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const Dn=new E,Tc=new de,M4=new E,Un=new E;class S4 extends nu{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Dn,Tc,M4),Un.set(0,0,1).applyQuaternion(Tc);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(Dn.x,n),e.positionY.linearRampToValueAtTime(Dn.y,n),e.positionZ.linearRampToValueAtTime(Dn.z,n),e.orientationX.linearRampToValueAtTime(Un.x,n),e.orientationY.linearRampToValueAtTime(Un.y,n),e.orientationZ.linearRampToValueAtTime(Un.z,n)}else e.setPosition(Dn.x,Dn.y,Dn.z),e.setOrientation(Un.x,Un.y,Un.z)}}class b4{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class iu{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,s,o;switch(e){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=e}else{o+=e;const a=e/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=e*this._origIndex;this._mixBufferRegion(n,i,l,1-s,e)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let l=e,c=e+e;l!==c;++l)if(n[l]!==n[l+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let s=n,o=i;s!==o;++s)e[s]=e[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)t[e+o]=t[n+o]}_slerp(t,e,n,i){de.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,s){const o=this._workIndex*s;de.multiplyQuaternionsFlat(t,o,t,e,t,n),de.slerpFlat(t,e,t,e,t,o,i)}_lerp(t,e,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=e+a;t[l]=t[l]*o+t[n+a]*i}}_lerpAdditive(t,e,n,i,s){for(let o=0;o!==s;++o){const a=e+o;t[a]=t[a]+t[n+o]*i}}}const pl="\\[\\]\\.:\\/",w4=new RegExp("["+pl+"]","g"),ml="[^"+pl+"]",E4="[^"+pl.replace("\\.","")+"]",T4=/((?:WC+[\/:])*)/.source.replace("WC",ml),A4=/(WCOD+)?/.source.replace("WCOD",E4),C4=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ml),R4=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ml),P4=new RegExp("^"+T4+A4+C4+R4+"$"),I4=["material","materials","bones","map"];class L4{constructor(t,e,n){const i=n||Qt.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class Qt{constructor(t,e,n){this.path=e,this.parsedPath=n||Qt.parseTrackName(e),this.node=Qt.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new Qt.Composite(t,e,n):new Qt(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(w4,"")}static parseTrackName(t){const e=P4.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);I4.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===e||a.uuid===e)return a;const l=n(a.children);if(l)return l}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let s=e.propertyIndex;if(t||(t=Qt.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let h=0;h<t.length;h++)if(t[h].name===c){c=h;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const o=t[i];if(o===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?a=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[s]!==void 0&&(s=t.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Qt.Composite=L4;Qt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Qt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Qt.prototype.GetterByBindingType=[Qt.prototype._getValue_direct,Qt.prototype._getValue_array,Qt.prototype._getValue_arrayElement,Qt.prototype._getValue_toArray];Qt.prototype.SetterByBindingTypeAndVersioning=[[Qt.prototype._setValue_direct,Qt.prototype._setValue_direct_setNeedsUpdate,Qt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Qt.prototype._setValue_array,Qt.prototype._setValue_array_setNeedsUpdate,Qt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Qt.prototype._setValue_arrayElement,Qt.prototype._setValue_arrayElement_setNeedsUpdate,Qt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Qt.prototype._setValue_fromArray,Qt.prototype._setValue_fromArray_setNeedsUpdate,Qt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class D4{constructor(){this.isAnimationObjectGroup=!0,this.uuid=u0(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,l=t.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],f=d.uuid;let m=e[f];if(m===void 0){m=l++,e[f]=m,t.push(d);for(let _=0,g=o;_!==g;++_)s[_].push(new Qt(d,n[_],i[_]))}else if(m<c){a=t[m];const _=--c,g=t[_];e[g.uuid]=m,t[m]=g,e[f]=_,t[_]=d;for(let p=0,v=o;p!==v;++p){const x=s[p],y=x[_];let P=x[m];x[m]=y,P===void 0&&(P=new Qt(d,n[p],i[p])),x[_]=P}}else t[m]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,h=e[c];if(h!==void 0&&h>=s){const u=s++,d=t[u];e[d.uuid]=h,t[h]=d,e[c]=u,t[u]=l;for(let f=0,m=i;f!==m;++f){const _=n[f],g=_[u],p=_[h];_[h]=g,_[u]=p}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=t.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],h=c.uuid,u=e[h];if(u!==void 0)if(delete e[h],u<s){const d=--s,f=t[d],m=--o,_=t[m];e[f.uuid]=u,t[u]=f,e[_.uuid]=d,t[d]=_,t.pop();for(let g=0,p=i;g!==p;++g){const v=n[g],x=v[d],y=v[m];v[u]=x,v[d]=y,v.pop()}}else{const d=--o,f=t[d];d>0&&(e[f.uuid]=u),t[u]=f,t.pop();for(let m=0,_=i;m!==_;++m){const g=n[m];g[u]=g[d],g.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);i=s.length,n[t]=i,o.push(t),a.push(e),s.push(u);for(let d=h,f=l.length;d!==f;++d){const m=l[d];u[d]=new Qt(m,t,e)}return u}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=t[a];e[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class su{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const s=e.tracks,o=s.length,a=new Array(o),l={endingStart:Wn,endingEnd:Wn};for(let c=0;c!==o;++c){const h=s[c].createInterpolant(null);a[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=q2,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const i=this._clip.duration,s=t._clip.duration,o=s/i,a=i/s;t.warp(1,o,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=t/o,c[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const l=(t-s)*n;l<0||n===0?e=0:(this._startTime=null,e=n*l)}e*=this._updateTimeScale(t);const o=this._updateTime(e),a=this._updateWeight(t);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case k1:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulateAdditive(a);break;case Yo:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(o),c[h].accumulate(i,a)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,s=this._loopCount;const o=n===Z2;if(t===0)return s===-1?i:o&&(s&1)===1?e-i:i;if(n===Y2){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=e||i<0){const a=Math.floor(i/e);i-=e*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(l===1){const c=t<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=Xn,i.endingEnd=Xn):(t?i.endingStart=this.zeroSlopeAtStart?Xn:Wn:i.endingStart=bs,e?i.endingEnd=this.zeroSlopeAtEnd?Xn:Wn:i.endingEnd=bs)}_scheduleFading(t,e,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=e,a[1]=s+t,l[1]=n,this}}const U4=new Float32Array(1);class N4 extends B0{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,s=i.length,o=t._propertyBindings,a=t._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==s;++u){const d=i[u],f=d.name;let m=h[f];if(m!==void 0)++m.referenceCount,o[u]=m;else{if(m=o[u],m!==void 0){m._cacheIndex===null&&(++m.referenceCount,this._addInactiveBinding(m,l,f));continue}const _=e&&e._propertyBindings[u].binding.parsedPath;m=new iu(Qt.create(n,f,_),d.ValueTypeName,d.getValueSize()),++m.referenceCount,this._addInactiveBinding(m,l,f),o[u]=m}a[u].resultBuffer=m.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,s=this._actionsByClip[i];this._bindAction(t,s&&s.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,s=this._actionsByClip;let o=s[e];if(o===void 0)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=o;else{const a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=i.length,i.push(t),o.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],h=t._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),t._byClipCacheIndex=null;const u=a.actionByRoot,d=(t._localRoot||this._root).uuid;delete u[d],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[e];o===void 0&&(o={},i[e]=o),o[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=e[e.length-1],c=t._cacheIndex;l._cacheIndex=c,e[c]=l,e.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new ol(new Float32Array(2),new Float32Array(2),1,U4),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,s=e[i];t.__cacheIndex=i,e[i]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const i=e||this._root,s=i.uuid;let o=typeof t=="string"?Us.findByName(i,t):t;const a=o!==null?o.uuid:t,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Yo),l!==void 0){const u=l.actionByRoot[s];if(u!==void 0&&u.blendMode===n)return u;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const h=new su(this,o,e,n);return this._bindAction(h,c),this._addInactiveAction(h,a,s),h}existingAction(t,e){const n=e||this._root,i=n.uuid,s=typeof t=="string"?Us.findByName(n,t):t,o=s?s.uuid:t,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,s=Math.sign(t),o=this._accuIndex^=1;for(let c=0;c!==n;++c)e[c]._update(i,t,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const h=c._cacheIndex,u=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,e[h]=u,e.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[e];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[e];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class F4 extends qo{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new Zo(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class O4 extends qo{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTargetArray=!0,this.depth=n,this.texture=new Bs(null,t,e,n),this.texture.isRenderTargetTexture=!0}}class gl{constructor(t){this.value=t}clone(){return new gl(this.value.clone===void 0?this.value:this.value.clone())}}let B4=0;class z4 extends B0{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:B4++}),this.name="",this.usage=Es,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const s=Array.isArray(e[n])?e[n]:[e[n]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class k4 extends Qo{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class V4{constructor(t,e,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const Ac=new Dt;class ru{constructor(t,e,n=0,i=1/0){this.ray=new oi(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new Jo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return Ac.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Ac),this}intersectObject(t,e=!0,n=[]){return S1(t,this,n,e),n.sort(Cc),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)S1(t[i],this,n,e);return n.sort(Cc),n}}function Cc(r,t){return r.distance-t.distance}function S1(r,t,e,n){let i=!0;if(r.layers.test(t.layers)&&r.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const s=r.children;for(let o=0,a=s.length;o<a;o++)S1(s[o],t,e,!0)}}class b1{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=kt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(kt(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class H4{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class _l{constructor(t,e,n,i){_l.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const s=this.elements;return s[0]=t,s[2]=e,s[1]=n,s[3]=i,this}}const Rc=new Y;class G4{constructor(t=new Y(1/0,1/0),e=new Y(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Rc.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Rc).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Pc=new E,Pr=new E;class W4{constructor(t=new E,e=new E){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Pc.subVectors(t,this.start),Pr.subVectors(this.end,this.start);const n=Pr.dot(Pr);let s=Pr.dot(Pc)/n;return e&&(s=kt(s,0,1)),s}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Ic=new E;class X4 extends Zt{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new Vt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,h=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new St(i,3));const s=new Fe({fog:!1,toneMapped:!1});this.cone=new C0(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),Ic.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Ic),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const dn=new E,Ir=new Dt,Ka=new Dt;class Y4 extends C0{constructor(t){const e=ou(t),n=new Vt,i=[],s=[],o=new dt(0,0,1),a=new dt(0,1,0);for(let c=0;c<e.length;c++){const h=e[c];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new St(i,3)),n.setAttribute("color",new St(s,3));const l=new Fe({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Ka.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<e.length;s++){const a=e[s];a.parent&&a.parent.isBone&&(Ir.multiplyMatrices(Ka,a.matrixWorld),dn.setFromMatrixPosition(Ir),i.setXYZ(o,dn.x,dn.y,dn.z),Ir.multiplyMatrices(Ka,a.parent.matrixWorld),dn.setFromMatrixPosition(Ir),i.setXYZ(o+1,dn.x,dn.y,dn.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function ou(r){const t=[];r.isBone===!0&&t.push(r);for(let e=0;e<r.children.length;e++)t.push(...ou(r.children[e]));return t}class q4 extends lt{constructor(t,e,n){const i=new Vi(e,4,2),s=new A0({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Z4=new E,Lc=new dt,Dc=new dt;class J4 extends Zt{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new $0(e);i.rotateY(Math.PI*.5),this.material=new A0({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new ce(o,3)),this.add(new lt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Lc.copy(this.light.color),Dc.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const s=n<i/2?Lc:Dc;e.setXYZ(n,s.r,s.g,s.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(Z4.setFromMatrixPosition(this.light.matrixWorld).negate())}}class $4 extends C0{constructor(t=10,e=10,n=4473924,i=8947848){n=new dt(n),i=new dt(i);const s=e/2,o=t/e,a=t/2,l=[],c=[];for(let d=0,f=0,m=-a;d<=e;d++,m+=o){l.push(-a,0,m,a,0,m),l.push(m,0,-a,m,0,a);const _=d===s?n:i;_.toArray(c,f),f+=3,_.toArray(c,f),f+=3,_.toArray(c,f),f+=3,_.toArray(c,f),f+=3}const h=new Vt;h.setAttribute("position",new St(l,3)),h.setAttribute("color",new St(c,3));const u=new Fe({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class K4 extends C0{constructor(t=10,e=16,n=8,i=64,s=4473924,o=8947848){s=new dt(s),o=new dt(o);const a=[],l=[];if(e>1)for(let u=0;u<e;u++){const d=u/e*(Math.PI*2),f=Math.sin(d)*t,m=Math.cos(d)*t;a.push(0,0,0),a.push(f,0,m);const _=u&1?s:o;l.push(_.r,_.g,_.b),l.push(_.r,_.g,_.b)}for(let u=0;u<n;u++){const d=u&1?s:o,f=t-t/n*u;for(let m=0;m<i;m++){let _=m/i*(Math.PI*2),g=Math.sin(_)*f,p=Math.cos(_)*f;a.push(g,0,p),l.push(d.r,d.g,d.b),_=(m+1)/i*(Math.PI*2),g=Math.sin(_)*f,p=Math.cos(_)*f,a.push(g,0,p),l.push(d.r,d.g,d.b)}}const c=new Vt;c.setAttribute("position",new St(a,3)),c.setAttribute("color",new St(l,3));const h=new Fe({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Uc=new E,Lr=new E,Nc=new E;class j4 extends Zt{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new Vt;i.setAttribute("position",new St([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new Fe({fog:!1,toneMapped:!1});this.lightPlane=new He(i,s),this.add(this.lightPlane),i=new Vt,i.setAttribute("position",new St([0,0,0,0,0,1],3)),this.targetLine=new He(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Uc.setFromMatrixPosition(this.light.matrixWorld),Lr.setFromMatrixPosition(this.light.target.matrixWorld),Nc.subVectors(Lr,Uc),this.lightPlane.lookAt(Lr),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Lr),this.targetLine.scale.z=Nc.length()}}const Dr=new E,ye=new $o;class Q4 extends C0{constructor(t){const e=new Vt,n=new Fe({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(m,_){l(m),l(_)}function l(m){i.push(0,0,0),s.push(0,0,0),o[m]===void 0&&(o[m]=[]),o[m].push(i.length/3-1)}e.setAttribute("position",new St(i,3)),e.setAttribute("color",new St(s,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new dt(16755200),h=new dt(16711680),u=new dt(43775),d=new dt(16777215),f=new dt(3355443);this.setColors(c,h,u,d,f)}setColors(t,e,n,i,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,t.r,t.g,t.b),a.setXYZ(1,t.r,t.g,t.b),a.setXYZ(2,t.r,t.g,t.b),a.setXYZ(3,t.r,t.g,t.b),a.setXYZ(4,t.r,t.g,t.b),a.setXYZ(5,t.r,t.g,t.b),a.setXYZ(6,t.r,t.g,t.b),a.setXYZ(7,t.r,t.g,t.b),a.setXYZ(8,t.r,t.g,t.b),a.setXYZ(9,t.r,t.g,t.b),a.setXYZ(10,t.r,t.g,t.b),a.setXYZ(11,t.r,t.g,t.b),a.setXYZ(12,t.r,t.g,t.b),a.setXYZ(13,t.r,t.g,t.b),a.setXYZ(14,t.r,t.g,t.b),a.setXYZ(15,t.r,t.g,t.b),a.setXYZ(16,t.r,t.g,t.b),a.setXYZ(17,t.r,t.g,t.b),a.setXYZ(18,t.r,t.g,t.b),a.setXYZ(19,t.r,t.g,t.b),a.setXYZ(20,t.r,t.g,t.b),a.setXYZ(21,t.r,t.g,t.b),a.setXYZ(22,t.r,t.g,t.b),a.setXYZ(23,t.r,t.g,t.b),a.setXYZ(24,e.r,e.g,e.b),a.setXYZ(25,e.r,e.g,e.b),a.setXYZ(26,e.r,e.g,e.b),a.setXYZ(27,e.r,e.g,e.b),a.setXYZ(28,e.r,e.g,e.b),a.setXYZ(29,e.r,e.g,e.b),a.setXYZ(30,e.r,e.g,e.b),a.setXYZ(31,e.r,e.g,e.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;ye.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);const s=this.camera.coordinateSystem===w0?-1:0;be("c",e,t,ye,0,0,s),be("t",e,t,ye,0,0,1),be("n1",e,t,ye,-1,-1,s),be("n2",e,t,ye,n,-1,s),be("n3",e,t,ye,-1,i,s),be("n4",e,t,ye,n,i,s),be("f1",e,t,ye,-1,-1,1),be("f2",e,t,ye,n,-1,1),be("f3",e,t,ye,-1,i,1),be("f4",e,t,ye,n,i,1),be("u1",e,t,ye,n*.7,i*1.1,s),be("u2",e,t,ye,-1*.7,i*1.1,s),be("u3",e,t,ye,0,i*2,s),be("cf1",e,t,ye,-1,0,1),be("cf2",e,t,ye,n,0,1),be("cf3",e,t,ye,0,-1,1),be("cf4",e,t,ye,0,i,1),be("cn1",e,t,ye,-1,0,s),be("cn2",e,t,ye,n,0,s),be("cn3",e,t,ye,0,-1,s),be("cn4",e,t,ye,0,i,s),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function be(r,t,e,n,i,s,o){Dr.set(i,s,o).unproject(n);const a=t[r];if(a!==void 0){const l=e.getAttribute("position");for(let c=0,h=a.length;c<h;c++)l.setXYZ(a[c],Dr.x,Dr.y,Dr.z)}}const Ur=new je;class tf extends C0{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Vt;s.setIndex(new ce(n,1)),s.setAttribute("position",new ce(i,3)),super(s,new Fe({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Ur.setFromObject(this.object),Ur.isEmpty())return;const t=Ur.min,e=Ur.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class ef extends C0{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Vt;s.setIndex(new ce(n,1)),s.setAttribute("position",new St(i,3)),super(s,new Fe({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class nf extends He{constructor(t,e=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new Vt;o.setAttribute("position",new St(s,3)),o.computeBoundingSphere(),super(o,new Fe({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Vt;l.setAttribute("position",new St(a,3)),l.computeBoundingSphere(),this.add(new lt(l,new A0({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Fc=new E;let Nr,ja;class sf extends Zt{constructor(t=new E(0,0,1),e=new E(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Nr===void 0&&(Nr=new Vt,Nr.setAttribute("position",new St([0,0,0,0,1,0],3)),ja=new Te(0,.5,1,5,1),ja.translate(0,-.5,0)),this.position.copy(e),this.line=new He(Nr,new Fe({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new lt(ja,new A0({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,s,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Fc.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(Fc,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class rf extends C0{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Vt;i.setAttribute("position",new St(e,3)),i.setAttribute("color",new St(n,3));const s=new Fe({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(t,e,n){const i=new dt,s=this.geometry.attributes.color.array;return i.set(t),i.toArray(s,0),i.toArray(s,3),i.set(e),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class of{constructor(){this.type="ShapePath",this.color=new dt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Cs,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,s,o){return this.currentPath.bezierCurveTo(t,e,n,i,s,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(p){const v=[];for(let x=0,y=p.length;x<y;x++){const P=p[x],T=new jn;T.curves=P.curves,v.push(T)}return v}function n(p,v){const x=v.length;let y=!1;for(let P=x-1,T=0;T<x;P=T++){let R=v[P],I=v[T],b=I.x-R.x,M=I.y-R.y;if(Math.abs(M)>Number.EPSILON){if(M<0&&(R=v[T],b=-b,I=v[P],M=-M),p.y<R.y||p.y>I.y)continue;if(p.y===R.y){if(p.x===R.x)return!0}else{const L=M*(p.x-R.x)-b*(p.y-R.y);if(L===0)return!0;if(L<0)continue;y=!y}}else{if(p.y!==R.y)continue;if(I.x<=p.x&&p.x<=R.x||R.x<=p.x&&p.x<=I.x)return!0}}return y}const i=N0.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new jn,l.curves=a.curves,c.push(l),c;let h=!i(s[0].getPoints());h=t?!h:h;const u=[],d=[];let f=[],m=0,_;d[m]=void 0,f[m]=[];for(let p=0,v=s.length;p<v;p++)a=s[p],_=a.getPoints(),o=i(_),o=t?!o:o,o?(!h&&d[m]&&m++,d[m]={s:new jn,p:_},d[m].s.curves=a.curves,h&&m++,f[m]=[]):f[m].push({h:a,p:_[0]});if(!d[0])return e(s);if(d.length>1){let p=!1,v=0;for(let x=0,y=d.length;x<y;x++)u[x]=[];for(let x=0,y=d.length;x<y;x++){const P=f[x];for(let T=0;T<P.length;T++){const R=P[T];let I=!0;for(let b=0;b<d.length;b++)n(R.p,d[b].p)&&(x!==b&&v++,I?(I=!1,u[b].push(R)):p=!0);I&&u[x].push(R)}}v>0&&p===!1&&(f=u)}let g;for(let p=0,v=d.length;p<v;p++){l=d[p].s,c.push(l),g=f[p];for(let x=0,y=g.length;x<y;x++)l.holes.push(g[x].h)}return c}}class xl extends B0{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}function af(r,t){const e=r.image&&r.image.width?r.image.width/r.image.height:1;return e>t?(r.repeat.x=1,r.repeat.y=e/t,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=t/e,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function lf(r,t){const e=r.image&&r.image.width?r.image.width/r.image.height:1;return e>t?(r.repeat.x=t/e,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=e/t,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function cf(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function w1(r,t,e,n){const i=hf(n);switch(e){case U1:return r*t;case F1:return r*t;case O1:return r*t*2;case Go:return r*t/i.components*i.byteLength;case Os:return r*t/i.components*i.byteLength;case B1:return r*t*2/i.components*i.byteLength;case Wo:return r*t*2/i.components*i.byteLength;case N1:return r*t*3/i.components*i.byteLength;case $e:return r*t*4/i.components*i.byteLength;case Xo:return r*t*4/i.components*i.byteLength;case cs:case hs:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*8;case us:case ds:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case ao:case co:return Math.max(r,16)*Math.max(t,8)/4;case oo:case lo:return Math.max(r,8)*Math.max(t,8)/2;case ho:case uo:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*8;case fo:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case po:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case mo:return Math.floor((r+4)/5)*Math.floor((t+3)/4)*16;case go:return Math.floor((r+4)/5)*Math.floor((t+4)/5)*16;case _o:return Math.floor((r+5)/6)*Math.floor((t+4)/5)*16;case xo:return Math.floor((r+5)/6)*Math.floor((t+5)/6)*16;case yo:return Math.floor((r+7)/8)*Math.floor((t+4)/5)*16;case vo:return Math.floor((r+7)/8)*Math.floor((t+5)/6)*16;case Mo:return Math.floor((r+7)/8)*Math.floor((t+7)/8)*16;case So:return Math.floor((r+9)/10)*Math.floor((t+4)/5)*16;case bo:return Math.floor((r+9)/10)*Math.floor((t+5)/6)*16;case wo:return Math.floor((r+9)/10)*Math.floor((t+7)/8)*16;case Eo:return Math.floor((r+9)/10)*Math.floor((t+9)/10)*16;case To:return Math.floor((r+11)/12)*Math.floor((t+9)/10)*16;case Ao:return Math.floor((r+11)/12)*Math.floor((t+11)/12)*16;case fs:case Co:case Ro:return Math.ceil(r/4)*Math.ceil(t/4)*16;case z1:case Po:return Math.ceil(r/4)*Math.ceil(t/4)*8;case Io:case Lo:return Math.ceil(r/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function hf(r){switch(r){case F0:case I1:return{byteLength:1,components:1};case Ni:case L1:case ki:return{byteLength:2,components:1};case Vo:case Ho:return{byteLength:2,components:4};case sn:case ko:case r0:return{byteLength:4,components:1};case D1:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}class uf{static contain(t,e){return af(t,e)}static cover(t,e){return lf(t,e)}static fill(t){return cf(t)}static getByteLength(t,e,n,i){return w1(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Bo}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Bo);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function au(){let r=null,t=!1,e=null,n=null;function i(s,o){e(s,o),n=r.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=r.requestAnimationFrame(i),t=!0)},stop:function(){r.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){r=s}}}function df(r){const t=new WeakMap;function e(a,l){const c=a.array,h=a.usage,u=c.byteLength,d=r.createBuffer();r.bindBuffer(l,d),r.bufferData(l,c,h),a.onUploadCallback();let f;if(c instanceof Float32Array)f=r.FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=r.HALF_FLOAT:f=r.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=r.SHORT;else if(c instanceof Uint32Array)f=r.UNSIGNED_INT;else if(c instanceof Int32Array)f=r.INT;else if(c instanceof Int8Array)f=r.BYTE;else if(c instanceof Uint8Array)f=r.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:u}}function n(a,l,c){const h=l.array,u=l.updateRanges;if(r.bindBuffer(c,a),u.length===0)r.bufferSubData(c,0,h);else{u.sort((f,m)=>f.start-m.start);let d=0;for(let f=1;f<u.length;f++){const m=u[d],_=u[f];_.start<=m.start+m.count+1?m.count=Math.max(m.count,_.start+_.count-m.start):(++d,u[d]=_)}u.length=d+1;for(let f=0,m=u.length;f<m;f++){const _=u[f];r.bufferSubData(c,_.start*h.BYTES_PER_ELEMENT,h,_.start,_.count)}l.clearUpdateRanges()}l.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),t.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=t.get(a);l&&(r.deleteBuffer(l.buffer),t.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const h=t.get(a);(!h||h.version<a.version)&&t.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=t.get(a);if(c===void 0)t.set(a,e(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:i,remove:s,update:o}}var ff=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,pf=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,mf=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,gf=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,_f=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,xf=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,yf=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,vf=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,Mf=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Sf=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,bf=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,wf=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,Ef=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,Tf=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,Af=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,Cf=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,Rf=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,Pf=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,If=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,Lf=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,Df=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,Uf=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,Nf=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,Ff=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,Of=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,Bf=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,zf=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,kf=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,Vf=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE
		emissiveColor = sRGBTransferEOTF( emissiveColor );
	#endif
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Hf=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Gf="gl_FragColor = linearToOutputTexel( gl_FragColor );",Wf=`vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Xf=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Yf=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,qf=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Zf=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Jf=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,$f=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Kf=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,jf=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Qf=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,t5=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,e5=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,n5=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,i5=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,s5=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,r5=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,o5=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,a5=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,l5=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,c5=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,h5=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,u5=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,d5=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,f5=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,p5=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,m5=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,g5=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,_5=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,x5=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,y5=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,v5=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,M5=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,S5=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,b5=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,w5=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,E5=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,T5=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,A5=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,C5=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,R5=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,P5=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,I5=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,L5=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,D5=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,U5=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,N5=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,F5=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,O5=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,B5=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,z5=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,k5=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,V5=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,H5=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,G5=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,W5=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,X5=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Y5=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,q5=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Z5=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,J5=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,$5=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,K5=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,j5=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Q5=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,t6=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,e6=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,n6=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,i6=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,s6=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,r6=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,o6=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,a6=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		#else
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,l6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,c6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,h6=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,u6=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const d6=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,f6=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,p6=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,m6=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,g6=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,_6=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,x6=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,y6=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,v6=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,M6=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,S6=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,b6=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,w6=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,E6=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,T6=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,A6=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,C6=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,R6=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,P6=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,I6=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,L6=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,D6=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,U6=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,N6=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,F6=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,O6=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,B6=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,z6=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,k6=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,V6=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,H6=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,G6=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,W6=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix[ 3 ];
	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,X6=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Xt={alphahash_fragment:ff,alphahash_pars_fragment:pf,alphamap_fragment:mf,alphamap_pars_fragment:gf,alphatest_fragment:_f,alphatest_pars_fragment:xf,aomap_fragment:yf,aomap_pars_fragment:vf,batching_pars_vertex:Mf,batching_vertex:Sf,begin_vertex:bf,beginnormal_vertex:wf,bsdfs:Ef,iridescence_fragment:Tf,bumpmap_pars_fragment:Af,clipping_planes_fragment:Cf,clipping_planes_pars_fragment:Rf,clipping_planes_pars_vertex:Pf,clipping_planes_vertex:If,color_fragment:Lf,color_pars_fragment:Df,color_pars_vertex:Uf,color_vertex:Nf,common:Ff,cube_uv_reflection_fragment:Of,defaultnormal_vertex:Bf,displacementmap_pars_vertex:zf,displacementmap_vertex:kf,emissivemap_fragment:Vf,emissivemap_pars_fragment:Hf,colorspace_fragment:Gf,colorspace_pars_fragment:Wf,envmap_fragment:Xf,envmap_common_pars_fragment:Yf,envmap_pars_fragment:qf,envmap_pars_vertex:Zf,envmap_physical_pars_fragment:r5,envmap_vertex:Jf,fog_vertex:$f,fog_pars_vertex:Kf,fog_fragment:jf,fog_pars_fragment:Qf,gradientmap_pars_fragment:t5,lightmap_pars_fragment:e5,lights_lambert_fragment:n5,lights_lambert_pars_fragment:i5,lights_pars_begin:s5,lights_toon_fragment:o5,lights_toon_pars_fragment:a5,lights_phong_fragment:l5,lights_phong_pars_fragment:c5,lights_physical_fragment:h5,lights_physical_pars_fragment:u5,lights_fragment_begin:d5,lights_fragment_maps:f5,lights_fragment_end:p5,logdepthbuf_fragment:m5,logdepthbuf_pars_fragment:g5,logdepthbuf_pars_vertex:_5,logdepthbuf_vertex:x5,map_fragment:y5,map_pars_fragment:v5,map_particle_fragment:M5,map_particle_pars_fragment:S5,metalnessmap_fragment:b5,metalnessmap_pars_fragment:w5,morphinstance_vertex:E5,morphcolor_vertex:T5,morphnormal_vertex:A5,morphtarget_pars_vertex:C5,morphtarget_vertex:R5,normal_fragment_begin:P5,normal_fragment_maps:I5,normal_pars_fragment:L5,normal_pars_vertex:D5,normal_vertex:U5,normalmap_pars_fragment:N5,clearcoat_normal_fragment_begin:F5,clearcoat_normal_fragment_maps:O5,clearcoat_pars_fragment:B5,iridescence_pars_fragment:z5,opaque_fragment:k5,packing:V5,premultiplied_alpha_fragment:H5,project_vertex:G5,dithering_fragment:W5,dithering_pars_fragment:X5,roughnessmap_fragment:Y5,roughnessmap_pars_fragment:q5,shadowmap_pars_fragment:Z5,shadowmap_pars_vertex:J5,shadowmap_vertex:$5,shadowmask_pars_fragment:K5,skinbase_vertex:j5,skinning_pars_vertex:Q5,skinning_vertex:t6,skinnormal_vertex:e6,specularmap_fragment:n6,specularmap_pars_fragment:i6,tonemapping_fragment:s6,tonemapping_pars_fragment:r6,transmission_fragment:o6,transmission_pars_fragment:a6,uv_pars_fragment:l6,uv_pars_vertex:c6,uv_vertex:h6,worldpos_vertex:u6,background_vert:d6,background_frag:f6,backgroundCube_vert:p6,backgroundCube_frag:m6,cube_vert:g6,cube_frag:_6,depth_vert:x6,depth_frag:y6,distanceRGBA_vert:v6,distanceRGBA_frag:M6,equirect_vert:S6,equirect_frag:b6,linedashed_vert:w6,linedashed_frag:E6,meshbasic_vert:T6,meshbasic_frag:A6,meshlambert_vert:C6,meshlambert_frag:R6,meshmatcap_vert:P6,meshmatcap_frag:I6,meshnormal_vert:L6,meshnormal_frag:D6,meshphong_vert:U6,meshphong_frag:N6,meshphysical_vert:F6,meshphysical_frag:O6,meshtoon_vert:B6,meshtoon_frag:z6,points_vert:k6,points_frag:V6,shadow_vert:H6,shadow_frag:G6,sprite_vert:W6,sprite_frag:X6},ct={common:{diffuse:{value:new dt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ht}},envmap:{envMap:{value:null},envMapRotation:{value:new Ht},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ht}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ht}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ht},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ht},normalScale:{value:new Y(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ht},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ht}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ht}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ht}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new dt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new dt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0},uvTransform:{value:new Ht}},sprite:{diffuse:{value:new dt(16777215)},opacity:{value:1},center:{value:new Y(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ht},alphaMap:{value:null},alphaMapTransform:{value:new Ht},alphaTest:{value:0}}},S0={basic:{uniforms:qe([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.fog]),vertexShader:Xt.meshbasic_vert,fragmentShader:Xt.meshbasic_frag},lambert:{uniforms:qe([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,ct.lights,{emissive:{value:new dt(0)}}]),vertexShader:Xt.meshlambert_vert,fragmentShader:Xt.meshlambert_frag},phong:{uniforms:qe([ct.common,ct.specularmap,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,ct.lights,{emissive:{value:new dt(0)},specular:{value:new dt(1118481)},shininess:{value:30}}]),vertexShader:Xt.meshphong_vert,fragmentShader:Xt.meshphong_frag},standard:{uniforms:qe([ct.common,ct.envmap,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.roughnessmap,ct.metalnessmap,ct.fog,ct.lights,{emissive:{value:new dt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Xt.meshphysical_vert,fragmentShader:Xt.meshphysical_frag},toon:{uniforms:qe([ct.common,ct.aomap,ct.lightmap,ct.emissivemap,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.gradientmap,ct.fog,ct.lights,{emissive:{value:new dt(0)}}]),vertexShader:Xt.meshtoon_vert,fragmentShader:Xt.meshtoon_frag},matcap:{uniforms:qe([ct.common,ct.bumpmap,ct.normalmap,ct.displacementmap,ct.fog,{matcap:{value:null}}]),vertexShader:Xt.meshmatcap_vert,fragmentShader:Xt.meshmatcap_frag},points:{uniforms:qe([ct.points,ct.fog]),vertexShader:Xt.points_vert,fragmentShader:Xt.points_frag},dashed:{uniforms:qe([ct.common,ct.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Xt.linedashed_vert,fragmentShader:Xt.linedashed_frag},depth:{uniforms:qe([ct.common,ct.displacementmap]),vertexShader:Xt.depth_vert,fragmentShader:Xt.depth_frag},normal:{uniforms:qe([ct.common,ct.bumpmap,ct.normalmap,ct.displacementmap,{opacity:{value:1}}]),vertexShader:Xt.meshnormal_vert,fragmentShader:Xt.meshnormal_frag},sprite:{uniforms:qe([ct.sprite,ct.fog]),vertexShader:Xt.sprite_vert,fragmentShader:Xt.sprite_frag},background:{uniforms:{uvTransform:{value:new Ht},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Xt.background_vert,fragmentShader:Xt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Ht}},vertexShader:Xt.backgroundCube_vert,fragmentShader:Xt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Xt.cube_vert,fragmentShader:Xt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Xt.equirect_vert,fragmentShader:Xt.equirect_frag},distanceRGBA:{uniforms:qe([ct.common,ct.displacementmap,{referencePosition:{value:new E},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Xt.distanceRGBA_vert,fragmentShader:Xt.distanceRGBA_frag},shadow:{uniforms:qe([ct.lights,ct.fog,{color:{value:new dt(0)},opacity:{value:1}}]),vertexShader:Xt.shadow_vert,fragmentShader:Xt.shadow_frag}};S0.physical={uniforms:qe([S0.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ht},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ht},clearcoatNormalScale:{value:new Y(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ht},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ht},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ht},sheen:{value:0},sheenColor:{value:new dt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ht},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ht},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ht},transmissionSamplerSize:{value:new Y},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ht},attenuationDistance:{value:0},attenuationColor:{value:new dt(0)},specularColor:{value:new dt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ht},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ht},anisotropyVector:{value:new Y},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ht}}]),vertexShader:Xt.meshphysical_vert,fragmentShader:Xt.meshphysical_frag};const Fr={r:0,b:0,g:0},Nn=new Qe,Y6=new Dt;function q6(r,t,e,n,i,s,o){const a=new dt(0);let l=s===!0?0:1,c,h,u=null,d=0,f=null;function m(x){let y=x.isScene===!0?x.background:null;return y&&y.isTexture&&(y=(x.backgroundBlurriness>0?e:t).get(y)),y}function _(x){let y=!1;const P=m(x);P===null?p(a,l):P&&P.isColor&&(p(P,1),y=!0);const T=r.xr.getEnvironmentBlendMode();T==="additive"?n.buffers.color.setClear(0,0,0,1,o):T==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(r.autoClear||y)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function g(x,y){const P=m(y);P&&(P.isCubeTexture||P.mapping===zi)?(h===void 0&&(h=new lt(new ve(1,1,1),new T0({name:"BackgroundCubeMaterial",uniforms:Oi(S0.backgroundCube.uniforms),vertexShader:S0.backgroundCube.vertexShader,fragmentShader:S0.backgroundCube.fragmentShader,side:Ke,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(T,R,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),Nn.copy(y.backgroundRotation),Nn.x*=-1,Nn.y*=-1,Nn.z*=-1,P.isCubeTexture&&P.isRenderTargetTexture===!1&&(Nn.y*=-1,Nn.z*=-1),h.material.uniforms.envMap.value=P,h.material.uniforms.flipEnvMap.value=P.isCubeTexture&&P.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(Y6.makeRotationFromEuler(Nn)),h.material.toneMapped=Jt.getTransfer(P.colorSpace)!==ae,(u!==P||d!==P.version||f!==r.toneMapping)&&(h.material.needsUpdate=!0,u=P,d=P.version,f=r.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):P&&P.isTexture&&(c===void 0&&(c=new lt(new vn(2,2),new T0({name:"BackgroundMaterial",uniforms:Oi(S0.background.uniforms),vertexShader:S0.background.vertexShader,fragmentShader:S0.background.fragmentShader,side:en,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=P,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.toneMapped=Jt.getTransfer(P.colorSpace)!==ae,P.matrixAutoUpdate===!0&&P.updateMatrix(),c.material.uniforms.uvTransform.value.copy(P.matrix),(u!==P||d!==P.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,u=P,d=P.version,f=r.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null))}function p(x,y){x.getRGB(Fr,hh(r)),n.buffers.color.setClear(Fr.r,Fr.g,Fr.b,y,o)}function v(){h!==void 0&&(h.geometry.dispose(),h.material.dispose(),h=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(x,y=1){a.set(x),l=y,p(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(x){l=x,p(a,l)},render:_,addToRenderList:g,dispose:v}}function Z6(r,t){const e=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=d(null);let s=i,o=!1;function a(M,L,z,O,V){let X=!1;const G=u(O,z,L);s!==G&&(s=G,c(s.object)),X=f(M,O,z,V),X&&m(M,O,z,V),V!==null&&t.update(V,r.ELEMENT_ARRAY_BUFFER),(X||o)&&(o=!1,y(M,L,z,O),V!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(V).buffer))}function l(){return r.createVertexArray()}function c(M){return r.bindVertexArray(M)}function h(M){return r.deleteVertexArray(M)}function u(M,L,z){const O=z.wireframe===!0;let V=n[M.id];V===void 0&&(V={},n[M.id]=V);let X=V[L.id];X===void 0&&(X={},V[L.id]=X);let G=X[O];return G===void 0&&(G=d(l()),X[O]=G),G}function d(M){const L=[],z=[],O=[];for(let V=0;V<e;V++)L[V]=0,z[V]=0,O[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:L,enabledAttributes:z,attributeDivisors:O,object:M,attributes:{},index:null}}function f(M,L,z,O){const V=s.attributes,X=L.attributes;let G=0;const $=z.getAttributes();for(const H in $)if($[H].location>=0){const ht=V[H];let xt=X[H];if(xt===void 0&&(H==="instanceMatrix"&&M.instanceMatrix&&(xt=M.instanceMatrix),H==="instanceColor"&&M.instanceColor&&(xt=M.instanceColor)),ht===void 0||ht.attribute!==xt||xt&&ht.data!==xt.data)return!0;G++}return s.attributesNum!==G||s.index!==O}function m(M,L,z,O){const V={},X=L.attributes;let G=0;const $=z.getAttributes();for(const H in $)if($[H].location>=0){let ht=X[H];ht===void 0&&(H==="instanceMatrix"&&M.instanceMatrix&&(ht=M.instanceMatrix),H==="instanceColor"&&M.instanceColor&&(ht=M.instanceColor));const xt={};xt.attribute=ht,ht&&ht.data&&(xt.data=ht.data),V[H]=xt,G++}s.attributes=V,s.attributesNum=G,s.index=O}function _(){const M=s.newAttributes;for(let L=0,z=M.length;L<z;L++)M[L]=0}function g(M){p(M,0)}function p(M,L){const z=s.newAttributes,O=s.enabledAttributes,V=s.attributeDivisors;z[M]=1,O[M]===0&&(r.enableVertexAttribArray(M),O[M]=1),V[M]!==L&&(r.vertexAttribDivisor(M,L),V[M]=L)}function v(){const M=s.newAttributes,L=s.enabledAttributes;for(let z=0,O=L.length;z<O;z++)L[z]!==M[z]&&(r.disableVertexAttribArray(z),L[z]=0)}function x(M,L,z,O,V,X,G){G===!0?r.vertexAttribIPointer(M,L,z,V,X):r.vertexAttribPointer(M,L,z,O,V,X)}function y(M,L,z,O){_();const V=O.attributes,X=z.getAttributes(),G=L.defaultAttributeValues;for(const $ in X){const H=X[$];if(H.location>=0){let nt=V[$];if(nt===void 0&&($==="instanceMatrix"&&M.instanceMatrix&&(nt=M.instanceMatrix),$==="instanceColor"&&M.instanceColor&&(nt=M.instanceColor)),nt!==void 0){const ht=nt.normalized,xt=nt.itemSize,Nt=t.get(nt);if(Nt===void 0)continue;const ee=Nt.buffer,q=Nt.type,ot=Nt.bytesPerElement,Tt=q===r.INT||q===r.UNSIGNED_INT||nt.gpuType===ko;if(nt.isInterleavedBufferAttribute){const at=nt.data,Pt=at.stride,Kt=nt.offset;if(at.isInstancedInterleavedBuffer){for(let Rt=0;Rt<H.locationSize;Rt++)p(H.location+Rt,at.meshPerAttribute);M.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=at.meshPerAttribute*at.count)}else for(let Rt=0;Rt<H.locationSize;Rt++)g(H.location+Rt);r.bindBuffer(r.ARRAY_BUFFER,ee);for(let Rt=0;Rt<H.locationSize;Rt++)x(H.location+Rt,xt/H.locationSize,q,ht,Pt*ot,(Kt+xt/H.locationSize*Rt)*ot,Tt)}else{if(nt.isInstancedBufferAttribute){for(let at=0;at<H.locationSize;at++)p(H.location+at,nt.meshPerAttribute);M.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=nt.meshPerAttribute*nt.count)}else for(let at=0;at<H.locationSize;at++)g(H.location+at);r.bindBuffer(r.ARRAY_BUFFER,ee);for(let at=0;at<H.locationSize;at++)x(H.location+at,xt/H.locationSize,q,ht,xt*ot,xt/H.locationSize*at*ot,Tt)}}else if(G!==void 0){const ht=G[$];if(ht!==void 0)switch(ht.length){case 2:r.vertexAttrib2fv(H.location,ht);break;case 3:r.vertexAttrib3fv(H.location,ht);break;case 4:r.vertexAttrib4fv(H.location,ht);break;default:r.vertexAttrib1fv(H.location,ht)}}}}v()}function P(){I();for(const M in n){const L=n[M];for(const z in L){const O=L[z];for(const V in O)h(O[V].object),delete O[V];delete L[z]}delete n[M]}}function T(M){if(n[M.id]===void 0)return;const L=n[M.id];for(const z in L){const O=L[z];for(const V in O)h(O[V].object),delete O[V];delete L[z]}delete n[M.id]}function R(M){for(const L in n){const z=n[L];if(z[M.id]===void 0)continue;const O=z[M.id];for(const V in O)h(O[V].object),delete O[V];delete z[M.id]}}function I(){b(),o=!0,s!==i&&(s=i,c(s.object))}function b(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:I,resetDefaultState:b,dispose:P,releaseStatesOfGeometry:T,releaseStatesOfProgram:R,initAttributes:_,enableAttribute:g,disableUnusedAttributes:v}}function J6(r,t,e){let n;function i(c){n=c}function s(c,h){r.drawArrays(n,c,h),e.update(h,n,1)}function o(c,h,u){u!==0&&(r.drawArraysInstanced(n,c,h,u),e.update(h,n,u))}function a(c,h,u){if(u===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,h,0,u);let f=0;for(let m=0;m<u;m++)f+=h[m];e.update(f,n,1)}function l(c,h,u,d){if(u===0)return;const f=t.get("WEBGL_multi_draw");if(f===null)for(let m=0;m<c.length;m++)o(c[m],h[m],d[m]);else{f.multiDrawArraysInstancedWEBGL(n,c,0,h,0,d,0,u);let m=0;for(let _=0;_<u;_++)m+=h[_]*d[_];e.update(m,n,1)}}this.setMode=i,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function $6(r,t,e,n){let i;function s(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const R=t.get("EXT_texture_filter_anisotropic");i=r.getParameter(R.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(R){return!(R!==$e&&n.convert(R)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(R){const I=R===ki&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(R!==F0&&n.convert(R)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&R!==r0&&!I)}function l(R){if(R==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";R="mediump"}return R==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=e.precision!==void 0?e.precision:"highp";const h=l(c);h!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",h,"instead."),c=h);const u=e.logarithmicDepthBuffer===!0,d=e.reverseDepthBuffer===!0&&t.has("EXT_clip_control"),f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),m=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),g=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),p=r.getParameter(r.MAX_VERTEX_ATTRIBS),v=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),x=r.getParameter(r.MAX_VARYING_VECTORS),y=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),P=m>0,T=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:u,reverseDepthBuffer:d,maxTextures:f,maxVertexTextures:m,maxTextureSize:_,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:v,maxVaryings:x,maxFragmentUniforms:y,vertexTextures:P,maxSamples:T}}function K6(r){const t=this;let e=null,n=0,i=!1,s=!1;const o=new Y0,a=new Ht,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||n!==0||i;return i=d,n=u.length,f},this.beginShadows=function(){s=!0,h(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(u,d){e=h(u,d,0)},this.setState=function(u,d,f){const m=u.clippingPlanes,_=u.clipIntersection,g=u.clipShadows,p=r.get(u);if(!i||m===null||m.length===0||s&&!g)s?h(null):c();else{const v=s?0:n,x=v*4;let y=p.clippingState||null;l.value=y,y=h(m,d,x,f);for(let P=0;P!==x;++P)y[P]=e[P];p.clippingState=y,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=v}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function h(u,d,f,m){const _=u!==null?u.length:0;let g=null;if(_!==0){if(g=l.value,m!==!0||g===null){const p=f+_*4,v=d.matrixWorldInverse;a.getNormalMatrix(v),(g===null||g.length<p)&&(g=new Float32Array(p));for(let x=0,y=f;x!==_;++x,y+=4)o.copy(u[x]).applyMatrix4(v,a),o.normal.toArray(g,y),g[y+3]=o.constant}l.value=g,l.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,g}}function j6(r){let t=new WeakMap;function e(o,a){return a===xs?o.mapping=nn:a===ys&&(o.mapping=_n),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===xs||a===ys)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new fh(l.height);return c.fromEquirectangularTexture(r,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function s(){t=new WeakMap}return{get:n,dispose:s}}const Li=4,Oc=[.125,.215,.35,.446,.526,.582],Hn=20,Qa=new Xs,Bc=new dt;let t1=null,e1=0,n1=0,i1=!1;const kn=(1+Math.sqrt(5))/2,Ai=1/kn,zc=[new E(-kn,Ai,0),new E(kn,Ai,0),new E(-Ai,0,kn),new E(Ai,0,kn),new E(0,kn,-Ai),new E(0,kn,Ai),new E(-1,1,-1),new E(1,1,-1),new E(-1,1,1),new E(1,1,1)],Q6=new E;class E1{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,s={}){const{size:o=256,position:a=Q6}=s;t1=this._renderer.getRenderTarget(),e1=this._renderer.getActiveCubeFace(),n1=this._renderer.getActiveMipmapLevel(),i1=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(t,n,i,l,a),e>0&&this._blur(l,0,0,e),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Hc(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Vc(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(t1,e1,n1),this._renderer.xr.enabled=i1,t.scissorTest=!1,Or(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===nn||t.mapping===_n?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),t1=this._renderer.getRenderTarget(),e1=this._renderer.getActiveCubeFace(),n1=this._renderer.getActiveMipmapLevel(),i1=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:Re,minFilter:Re,generateMipmaps:!1,type:ki,format:$e,colorSpace:ii,depthBuffer:!1},i=kc(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=kc(t,e,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=tp(s)),this._blurMaterial=ep(s,t,e)}return i}_compileMaterial(t){const e=new lt(this._lodPlanes[0],t);this._renderer.compile(e,Qa)}_sceneToCubeUV(t,e,n,i,s){const l=new De(90,1,e,n),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,d=u.autoClear,f=u.toneMapping;u.getClearColor(Bc),u.toneMapping=Q0,u.autoClear=!1;const m=new A0({name:"PMREM.Background",side:Ke,depthWrite:!1,depthTest:!1}),_=new lt(new ve,m);let g=!1;const p=t.background;p?p.isColor&&(m.color.copy(p),t.background=null,g=!0):(m.color.copy(Bc),g=!0);for(let v=0;v<6;v++){const x=v%3;x===0?(l.up.set(0,c[v],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+h[v],s.y,s.z)):x===1?(l.up.set(0,0,c[v]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+h[v],s.z)):(l.up.set(0,c[v],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+h[v]));const y=this._cubeSize;Or(i,x*y,v>2?y:0,y,y),u.setRenderTarget(i),g&&u.render(_,l),u.render(t,l)}_.geometry.dispose(),_.material.dispose(),u.toneMapping=f,u.autoClear=d,t.background=p}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===nn||t.mapping===_n;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Hc()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Vc());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new lt(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=t;const l=this._cubeSize;Or(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,Qa)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=zc[(i-s-1)%zc.length];this._blur(t,s-1,s,o,a)}e.autoClear=n}_blur(t,e,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",s),this._halfBlur(o,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new lt(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,m=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Hn-1),_=s/m,g=isFinite(s)?1+Math.floor(h*_):Hn;g>Hn&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Hn}`);const p=[];let v=0;for(let R=0;R<Hn;++R){const I=R/_,b=Math.exp(-I*I/2);p.push(b),R===0?v+=b:R<g&&(v+=2*b)}for(let R=0;R<p.length;R++)p[R]=p[R]/v;d.envMap.value=t.texture,d.samples.value=g,d.weights.value=p,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:x}=this;d.dTheta.value=m,d.mipInt.value=x-n;const y=this._sizeLods[i],P=3*y*(i>x-Li?i-x+Li:0),T=4*(this._cubeSize-y);Or(e,P,T,3*y,2*y),l.setRenderTarget(e),l.render(u,Qa)}}function tp(r){const t=[],e=[],n=[];let i=r;const s=r-Li+1+Oc.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>r-Li?l=Oc[o-r+Li-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],f=6,m=6,_=3,g=2,p=1,v=new Float32Array(_*m*f),x=new Float32Array(g*m*f),y=new Float32Array(p*m*f);for(let T=0;T<f;T++){const R=T%3*2/3-1,I=T>2?0:-1,b=[R,I,0,R+2/3,I,0,R+2/3,I+1,0,R,I,0,R+2/3,I+1,0,R,I+1,0];v.set(b,_*m*T),x.set(d,g*m*T);const M=[T,T,T,T,T,T];y.set(M,p*m*T)}const P=new Vt;P.setAttribute("position",new ce(v,_)),P.setAttribute("uv",new ce(x,g)),P.setAttribute("faceIndex",new ce(y,p)),t.push(P),i>Li&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function kc(r,t,e){const n=new O0(r,t,e);return n.texture.mapping=zi,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Or(r,t,e,n,i){r.viewport.set(t,e,n,i),r.scissor.set(t,e,n,i)}function ep(r,t,e){const n=new Float32Array(Hn),i=new E(0,1,0);return new T0({name:"SphericalGaussianBlur",defines:{n:Hn,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:yl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:j0,depthTest:!1,depthWrite:!1})}function Vc(){return new T0({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:yl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:j0,depthTest:!1,depthWrite:!1})}function Hc(){return new T0({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:yl(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:j0,depthTest:!1,depthWrite:!1})}function yl(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function np(r){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===xs||l===ys,h=l===nn||l===_n;if(c||h){let u=t.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return e===null&&(e=new E1(r)),u=c?e.fromEquirectangular(a,u):e.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,t.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return c&&f&&f.height>0||h&&f&&i(f)?(e===null&&(e=new E1(r)),u=c?e.fromEquirectangular(a):e.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,t.set(a,u),a.addEventListener("dispose",s),u.texture):null}}}return a}function i(a){let l=0;const c=6;for(let h=0;h<c;h++)a[h]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function ip(r){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&zn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function sp(r,t,e,n){const i={},s=new WeakMap;function o(u){const d=u.target;d.index!==null&&t.remove(d.index);for(const m in d.attributes)t.remove(d.attributes[m]);d.removeEventListener("dispose",o),delete i[d.id];const f=s.get(d);f&&(t.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(u,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(u){const d=u.attributes;for(const f in d)t.update(d[f],r.ARRAY_BUFFER)}function c(u){const d=[],f=u.index,m=u.attributes.position;let _=0;if(f!==null){const v=f.array;_=f.version;for(let x=0,y=v.length;x<y;x+=3){const P=v[x+0],T=v[x+1],R=v[x+2];d.push(P,T,T,R,R,P)}}else if(m!==void 0){const v=m.array;_=m.version;for(let x=0,y=v.length/3-1;x<y;x+=3){const P=x+0,T=x+1,R=x+2;d.push(P,T,T,R,R,P)}}else return;const g=new(oh(d)?W1:G1)(d,1);g.version=_;const p=s.get(u);p&&t.remove(p),s.set(u,g)}function h(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&c(u)}else c(u);return s.get(u)}return{get:a,update:l,getWireframeAttribute:h}}function rp(r,t,e){let n;function i(d){n=d}let s,o;function a(d){s=d.type,o=d.bytesPerElement}function l(d,f){r.drawElements(n,f,s,d*o),e.update(f,n,1)}function c(d,f,m){m!==0&&(r.drawElementsInstanced(n,f,s,d*o,m),e.update(f,n,m))}function h(d,f,m){if(m===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,s,d,0,m);let g=0;for(let p=0;p<m;p++)g+=f[p];e.update(g,n,1)}function u(d,f,m,_){if(m===0)return;const g=t.get("WEBGL_multi_draw");if(g===null)for(let p=0;p<d.length;p++)c(d[p]/o,f[p],_[p]);else{g.multiDrawElementsInstancedWEBGL(n,f,0,s,d,0,_,0,m);let p=0;for(let v=0;v<m;v++)p+=f[v]*_[v];e.update(p,n,1)}}this.setMode=i,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=h,this.renderMultiDrawInstances=u}function op(r){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(e.calls++,o){case r.TRIANGLES:e.triangles+=a*(s/3);break;case r.LINES:e.lines+=a*(s/2);break;case r.LINE_STRIP:e.lines+=a*(s-1);break;case r.LINE_LOOP:e.lines+=a*s;break;case r.POINTS:e.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function ap(r,t,e){const n=new WeakMap,i=new te;function s(o,a,l){const c=o.morphTargetInfluences,h=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=h!==void 0?h.length:0;let d=n.get(a);if(d===void 0||d.count!==u){let M=function(){I.dispose(),n.delete(a),a.removeEventListener("dispose",M)};var f=M;d!==void 0&&d.texture.dispose();const m=a.morphAttributes.position!==void 0,_=a.morphAttributes.normal!==void 0,g=a.morphAttributes.color!==void 0,p=a.morphAttributes.position||[],v=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let y=0;m===!0&&(y=1),_===!0&&(y=2),g===!0&&(y=3);let P=a.attributes.position.count*y,T=1;P>t.maxTextureSize&&(T=Math.ceil(P/t.maxTextureSize),P=t.maxTextureSize);const R=new Float32Array(P*T*4*u),I=new Bs(R,P,T,u);I.type=r0,I.needsUpdate=!0;const b=y*4;for(let L=0;L<u;L++){const z=p[L],O=v[L],V=x[L],X=P*T*4*L;for(let G=0;G<z.count;G++){const $=G*b;m===!0&&(i.fromBufferAttribute(z,G),R[X+$+0]=i.x,R[X+$+1]=i.y,R[X+$+2]=i.z,R[X+$+3]=0),_===!0&&(i.fromBufferAttribute(O,G),R[X+$+4]=i.x,R[X+$+5]=i.y,R[X+$+6]=i.z,R[X+$+7]=0),g===!0&&(i.fromBufferAttribute(V,G),R[X+$+8]=i.x,R[X+$+9]=i.y,R[X+$+10]=i.z,R[X+$+11]=V.itemSize===4?i.w:1)}}d={count:u,texture:I,size:new Y(P,T)},n.set(a,d),a.addEventListener("dispose",M)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(r,"morphTexture",o.morphTexture,e);else{let m=0;for(let g=0;g<c.length;g++)m+=c[g];const _=a.morphTargetsRelative?1:1-m;l.getUniforms().setValue(r,"morphTargetBaseInfluence",_),l.getUniforms().setValue(r,"morphTargetInfluences",c)}l.getUniforms().setValue(r,"morphTargetsTexture",d.texture,e),l.getUniforms().setValue(r,"morphTargetsTextureSize",d.size)}return{update:s}}function lp(r,t,e,n){let i=new WeakMap;function s(l){const c=n.render.frame,h=l.geometry,u=t.get(l,h);if(i.get(u)!==c&&(t.update(u),i.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==c&&(e.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&e.update(l.instanceColor,r.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==c&&(d.update(),i.set(d,c))}return u}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:s,dispose:o}}const lu=new Me,Gc=new Z1(1,1),cu=new Bs,hu=new Zo,uu=new zs,Wc=[],Xc=[],Yc=new Float32Array(16),qc=new Float32Array(9),Zc=new Float32Array(4);function Hi(r,t,e){const n=r[0];if(n<=0||n>0)return r;const i=t*e;let s=Wc[i];if(s===void 0&&(s=new Float32Array(i),Wc[i]=s),t!==0){n.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=e,r[o].toArray(s,a)}return s}function Pe(r,t){if(r.length!==t.length)return!1;for(let e=0,n=r.length;e<n;e++)if(r[e]!==t[e])return!1;return!0}function Ie(r,t){for(let e=0,n=t.length;e<n;e++)r[e]=t[e]}function ma(r,t){let e=Xc[t];e===void 0&&(e=new Int32Array(t),Xc[t]=e);for(let n=0;n!==t;++n)e[n]=r.allocateTextureUnit();return e}function cp(r,t){const e=this.cache;e[0]!==t&&(r.uniform1f(this.addr,t),e[0]=t)}function hp(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Pe(e,t))return;r.uniform2fv(this.addr,t),Ie(e,t)}}function up(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(r.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Pe(e,t))return;r.uniform3fv(this.addr,t),Ie(e,t)}}function dp(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Pe(e,t))return;r.uniform4fv(this.addr,t),Ie(e,t)}}function fp(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Pe(e,t))return;r.uniformMatrix2fv(this.addr,!1,t),Ie(e,t)}else{if(Pe(e,n))return;Zc.set(n),r.uniformMatrix2fv(this.addr,!1,Zc),Ie(e,n)}}function pp(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Pe(e,t))return;r.uniformMatrix3fv(this.addr,!1,t),Ie(e,t)}else{if(Pe(e,n))return;qc.set(n),r.uniformMatrix3fv(this.addr,!1,qc),Ie(e,n)}}function mp(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(Pe(e,t))return;r.uniformMatrix4fv(this.addr,!1,t),Ie(e,t)}else{if(Pe(e,n))return;Yc.set(n),r.uniformMatrix4fv(this.addr,!1,Yc),Ie(e,n)}}function gp(r,t){const e=this.cache;e[0]!==t&&(r.uniform1i(this.addr,t),e[0]=t)}function _p(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Pe(e,t))return;r.uniform2iv(this.addr,t),Ie(e,t)}}function xp(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Pe(e,t))return;r.uniform3iv(this.addr,t),Ie(e,t)}}function yp(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Pe(e,t))return;r.uniform4iv(this.addr,t),Ie(e,t)}}function vp(r,t){const e=this.cache;e[0]!==t&&(r.uniform1ui(this.addr,t),e[0]=t)}function Mp(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Pe(e,t))return;r.uniform2uiv(this.addr,t),Ie(e,t)}}function Sp(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Pe(e,t))return;r.uniform3uiv(this.addr,t),Ie(e,t)}}function bp(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Pe(e,t))return;r.uniform4uiv(this.addr,t),Ie(e,t)}}function wp(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);let s;this.type===r.SAMPLER_2D_SHADOW?(Gc.compareFunction=V1,s=Gc):s=lu,e.setTexture2D(t||s,i)}function Ep(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||hu,i)}function Tp(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||uu,i)}function Ap(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||cu,i)}function Cp(r){switch(r){case 5126:return cp;case 35664:return hp;case 35665:return up;case 35666:return dp;case 35674:return fp;case 35675:return pp;case 35676:return mp;case 5124:case 35670:return gp;case 35667:case 35671:return _p;case 35668:case 35672:return xp;case 35669:case 35673:return yp;case 5125:return vp;case 36294:return Mp;case 36295:return Sp;case 36296:return bp;case 35678:case 36198:case 36298:case 36306:case 35682:return wp;case 35679:case 36299:case 36307:return Ep;case 35680:case 36300:case 36308:case 36293:return Tp;case 36289:case 36303:case 36311:case 36292:return Ap}}function Rp(r,t){r.uniform1fv(this.addr,t)}function Pp(r,t){const e=Hi(t,this.size,2);r.uniform2fv(this.addr,e)}function Ip(r,t){const e=Hi(t,this.size,3);r.uniform3fv(this.addr,e)}function Lp(r,t){const e=Hi(t,this.size,4);r.uniform4fv(this.addr,e)}function Dp(r,t){const e=Hi(t,this.size,4);r.uniformMatrix2fv(this.addr,!1,e)}function Up(r,t){const e=Hi(t,this.size,9);r.uniformMatrix3fv(this.addr,!1,e)}function Np(r,t){const e=Hi(t,this.size,16);r.uniformMatrix4fv(this.addr,!1,e)}function Fp(r,t){r.uniform1iv(this.addr,t)}function Op(r,t){r.uniform2iv(this.addr,t)}function Bp(r,t){r.uniform3iv(this.addr,t)}function zp(r,t){r.uniform4iv(this.addr,t)}function kp(r,t){r.uniform1uiv(this.addr,t)}function Vp(r,t){r.uniform2uiv(this.addr,t)}function Hp(r,t){r.uniform3uiv(this.addr,t)}function Gp(r,t){r.uniform4uiv(this.addr,t)}function Wp(r,t,e){const n=this.cache,i=t.length,s=ma(e,i);Pe(n,s)||(r.uniform1iv(this.addr,s),Ie(n,s));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||lu,s[o])}function Xp(r,t,e){const n=this.cache,i=t.length,s=ma(e,i);Pe(n,s)||(r.uniform1iv(this.addr,s),Ie(n,s));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||hu,s[o])}function Yp(r,t,e){const n=this.cache,i=t.length,s=ma(e,i);Pe(n,s)||(r.uniform1iv(this.addr,s),Ie(n,s));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||uu,s[o])}function qp(r,t,e){const n=this.cache,i=t.length,s=ma(e,i);Pe(n,s)||(r.uniform1iv(this.addr,s),Ie(n,s));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||cu,s[o])}function Zp(r){switch(r){case 5126:return Rp;case 35664:return Pp;case 35665:return Ip;case 35666:return Lp;case 35674:return Dp;case 35675:return Up;case 35676:return Np;case 5124:case 35670:return Fp;case 35667:case 35671:return Op;case 35668:case 35672:return Bp;case 35669:case 35673:return zp;case 5125:return kp;case 36294:return Vp;case 36295:return Hp;case 36296:return Gp;case 35678:case 36198:case 36298:case 36306:case 35682:return Wp;case 35679:case 36299:case 36307:return Xp;case 35680:case 36300:case 36308:case 36293:return Yp;case 36289:case 36303:case 36311:case 36292:return qp}}class Jp{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=Cp(e.type)}}class $p{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=Zp(e.type)}}class Kp{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(t,e[a.id],n)}}}const s1=/(\w+)(\])?(\[|\.)?/g;function Jc(r,t){r.seq.push(t),r.map[t.id]=t}function jp(r,t,e){const n=r.name,i=n.length;for(s1.lastIndex=0;;){const s=s1.exec(n),o=s1.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){Jc(e,c===void 0?new Jp(a,r,t):new $p(a,r,t));break}else{let u=e.map[a];u===void 0&&(u=new Kp(a),Jc(e,u)),e=u}}}class qr{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=t.getActiveUniform(e,i),o=t.getUniformLocation(e,s.name);jp(s,o,this)}}setValue(t,e,n,i){const s=this.map[e];s!==void 0&&s.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let s=0,o=e.length;s!==o;++s){const a=e[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function $c(r,t,e){const n=r.createShader(t);return r.shaderSource(n,e),r.compileShader(n),n}const Qp=37297;let t7=0;function e7(r,t){const e=r.split(`
`),n=[],i=Math.max(t-6,0),s=Math.min(t+6,e.length);for(let o=i;o<s;o++){const a=o+1;n.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return n.join(`
`)}const Kc=new Ht;function n7(r){Jt._getMatrix(Kc,Jt.workingColorSpace,r);const t=`mat3( ${Kc.elements.map(e=>e.toFixed(4))} )`;switch(Jt.getTransfer(r)){case ws:return[t,"LinearTransferOETF"];case ae:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[t,"LinearTransferOETF"]}}function jc(r,t,e){const n=r.getShaderParameter(t,r.COMPILE_STATUS),i=r.getShaderInfoLog(t).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return e.toUpperCase()+`

`+i+`

`+e7(r.getShaderSource(t),o)}else return i}function i7(r,t){const e=n7(t);return[`vec4 ${r}( vec4 value ) {`,`	return ${e[1]}( vec4( value.rgb * ${e[0]}, value.a ) );`,"}"].join(`
`)}function s7(r,t){let e;switch(t){case B2:e="Linear";break;case z2:e="Reinhard";break;case k2:e="Cineon";break;case V2:e="ACESFilmic";break;case G2:e="AgX";break;case W2:e="Neutral";break;case H2:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Br=new E;function r7(){Jt.getLuminanceCoefficients(Br);const r=Br.x.toFixed(4),t=Br.y.toFixed(4),e=Br.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function o7(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(rs).join(`
`)}function a7(r){const t=[];for(const e in r){const n=r[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join(`
`)}function l7(r,t){const e={},n=r.getProgramParameter(t,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(t,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),e[o]={type:s.type,location:r.getAttribLocation(t,o),locationSize:a}}return e}function rs(r){return r!==""}function Qc(r,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function t2(r,t){return r.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const c7=/^[ \t]*#include +<([\w\d./]+)>/gm;function T1(r){return r.replace(c7,u7)}const h7=new Map;function u7(r,t){let e=Xt[t];if(e===void 0){const n=h7.get(t);if(n!==void 0)e=Xt[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return T1(e)}const d7=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function e2(r){return r.replace(d7,f7)}function f7(r,t,e,n){let i="";for(let s=parseInt(t);s<parseInt(e);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function n2(r){let t=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?t+=`
#define HIGH_PRECISION`:r.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function p7(r){let t="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===R1?t="SHADOWMAP_TYPE_PCF":r.shadowMapType===_2?t="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===L0&&(t="SHADOWMAP_TYPE_VSM"),t}function m7(r){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case nn:case _n:t="ENVMAP_TYPE_CUBE";break;case zi:t="ENVMAP_TYPE_CUBE_UV";break}return t}function g7(r){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case _n:t="ENVMAP_MODE_REFRACTION";break}return t}function _7(r){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Fs:t="ENVMAP_BLENDING_MULTIPLY";break;case F2:t="ENVMAP_BLENDING_MIX";break;case O2:t="ENVMAP_BLENDING_ADD";break}return t}function x7(r){const t=r.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function y7(r,t,e,n){const i=r.getContext(),s=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=p7(e),c=m7(e),h=g7(e),u=_7(e),d=x7(e),f=o7(e),m=a7(s),_=i.createProgram();let g,p,v=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(g=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m].filter(rs).join(`
`),g.length>0&&(g+=`
`),p=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m].filter(rs).join(`
`),p.length>0&&(p+=`
`)):(g=[n2(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+h:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(rs).join(`
`),p=[n2(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,m,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+h:"",e.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",e.reverseDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Q0?"#define TONE_MAPPING":"",e.toneMapping!==Q0?Xt.tonemapping_pars_fragment:"",e.toneMapping!==Q0?s7("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Xt.colorspace_pars_fragment,i7("linearToOutputTexel",e.outputColorSpace),r7(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(rs).join(`
`)),o=T1(o),o=Qc(o,e),o=t2(o,e),a=T1(a),a=Qc(a,e),a=t2(a,e),o=e2(o),a=e2(a),e.isRawShaderMaterial!==!0&&(v=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,p=["#define varying in",e.glslVersion===g1?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===g1?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+p);const x=v+g+o,y=v+p+a,P=$c(i,i.VERTEX_SHADER,x),T=$c(i,i.FRAGMENT_SHADER,y);i.attachShader(_,P),i.attachShader(_,T),e.index0AttributeName!==void 0?i.bindAttribLocation(_,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(_,0,"position"),i.linkProgram(_);function R(L){if(r.debug.checkShaderErrors){const z=i.getProgramInfoLog(_).trim(),O=i.getShaderInfoLog(P).trim(),V=i.getShaderInfoLog(T).trim();let X=!0,G=!0;if(i.getProgramParameter(_,i.LINK_STATUS)===!1)if(X=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,_,P,T);else{const $=jc(i,P,"vertex"),H=jc(i,T,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(_,i.VALIDATE_STATUS)+`

Material Name: `+L.name+`
Material Type: `+L.type+`

Program Info Log: `+z+`
`+$+`
`+H)}else z!==""?console.warn("THREE.WebGLProgram: Program Info Log:",z):(O===""||V==="")&&(G=!1);G&&(L.diagnostics={runnable:X,programLog:z,vertexShader:{log:O,prefix:g},fragmentShader:{log:V,prefix:p}})}i.deleteShader(P),i.deleteShader(T),I=new qr(i,_),b=l7(i,_)}let I;this.getUniforms=function(){return I===void 0&&R(this),I};let b;this.getAttributes=function(){return b===void 0&&R(this),b};let M=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return M===!1&&(M=i.getProgramParameter(_,Qp)),M},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(_),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=t7++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=P,this.fragmentShader=T,this}let v7=0;class M7{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new S7(t),e.set(t,n)),n}}class S7{constructor(t){this.id=v7++,this.code=t,this.usedTimes=0}}function b7(r,t,e,n,i,s,o){const a=new Jo,l=new M7,c=new Set,h=[],u=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const m={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(b){return c.add(b),b===0?"uv":`uv${b}`}function g(b,M,L,z,O){const V=z.fog,X=O.geometry,G=b.isMeshStandardMaterial?z.environment:null,$=(b.isMeshStandardMaterial?e:t).get(b.envMap||G),H=$&&$.mapping===zi?$.image.height:null,nt=m[b.type];b.precision!==null&&(f=i.getMaxPrecision(b.precision),f!==b.precision&&console.warn("THREE.WebGLProgram.getParameters:",b.precision,"not supported, using",f,"instead."));const ht=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,xt=ht!==void 0?ht.length:0;let Nt=0;X.morphAttributes.position!==void 0&&(Nt=1),X.morphAttributes.normal!==void 0&&(Nt=2),X.morphAttributes.color!==void 0&&(Nt=3);let ee,q,ot,Tt;if(nt){const oe=S0[nt];ee=oe.vertexShader,q=oe.fragmentShader}else ee=b.vertexShader,q=b.fragmentShader,l.update(b),ot=l.getVertexShaderID(b),Tt=l.getFragmentShaderID(b);const at=r.getRenderTarget(),Pt=r.state.buffers.depth.getReversed(),Kt=O.isInstancedMesh===!0,Rt=O.isBatchedMesh===!0,ie=!!b.map,tt=!!b.matcap,Q=!!$,C=!!b.aoMap,Ct=!!b.lightMap,et=!!b.bumpMap,vt=!!b.normalMap,rt=!!b.displacementMap,Ut=!!b.emissiveMap,mt=!!b.metalnessMap,A=!!b.roughnessMap,S=b.anisotropy>0,F=b.clearcoat>0,Z=b.dispersion>0,j=b.iridescence>0,J=b.sheen>0,At=b.transmission>0,ut=S&&!!b.anisotropyMap,yt=F&&!!b.clearcoatMap,qt=F&&!!b.clearcoatNormalMap,st=F&&!!b.clearcoatRoughnessMap,bt=j&&!!b.iridescenceMap,Ft=j&&!!b.iridescenceThicknessMap,Ot=J&&!!b.sheenColorMap,wt=J&&!!b.sheenRoughnessMap,$t=!!b.specularMap,Yt=!!b.specularColorMap,ue=!!b.specularIntensityMap,D=At&&!!b.transmissionMap,ft=At&&!!b.thicknessMap,W=!!b.gradientMap,K=!!b.alphaMap,_t=b.alphaTest>0,gt=!!b.alphaHash,Wt=!!b.extensions;let _e=Q0;b.toneMapped&&(at===null||at.isXRRenderTarget===!0)&&(_e=r.toneMapping);const Oe={shaderID:nt,shaderType:b.type,shaderName:b.name,vertexShader:ee,fragmentShader:q,defines:b.defines,customVertexShaderID:ot,customFragmentShaderID:Tt,isRawShaderMaterial:b.isRawShaderMaterial===!0,glslVersion:b.glslVersion,precision:f,batching:Rt,batchingColor:Rt&&O._colorsTexture!==null,instancing:Kt,instancingColor:Kt&&O.instanceColor!==null,instancingMorph:Kt&&O.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:at===null?r.outputColorSpace:at.isXRRenderTarget===!0?at.texture.colorSpace:ii,alphaToCoverage:!!b.alphaToCoverage,map:ie,matcap:tt,envMap:Q,envMapMode:Q&&$.mapping,envMapCubeUVHeight:H,aoMap:C,lightMap:Ct,bumpMap:et,normalMap:vt,displacementMap:d&&rt,emissiveMap:Ut,normalMapObjectSpace:vt&&b.normalMapType===K2,normalMapTangentSpace:vt&&b.normalMapType===xn,metalnessMap:mt,roughnessMap:A,anisotropy:S,anisotropyMap:ut,clearcoat:F,clearcoatMap:yt,clearcoatNormalMap:qt,clearcoatRoughnessMap:st,dispersion:Z,iridescence:j,iridescenceMap:bt,iridescenceThicknessMap:Ft,sheen:J,sheenColorMap:Ot,sheenRoughnessMap:wt,specularMap:$t,specularColorMap:Yt,specularIntensityMap:ue,transmission:At,transmissionMap:D,thicknessMap:ft,gradientMap:W,opaque:b.transparent===!1&&b.blending===Jn&&b.alphaToCoverage===!1,alphaMap:K,alphaTest:_t,alphaHash:gt,combine:b.combine,mapUv:ie&&_(b.map.channel),aoMapUv:C&&_(b.aoMap.channel),lightMapUv:Ct&&_(b.lightMap.channel),bumpMapUv:et&&_(b.bumpMap.channel),normalMapUv:vt&&_(b.normalMap.channel),displacementMapUv:rt&&_(b.displacementMap.channel),emissiveMapUv:Ut&&_(b.emissiveMap.channel),metalnessMapUv:mt&&_(b.metalnessMap.channel),roughnessMapUv:A&&_(b.roughnessMap.channel),anisotropyMapUv:ut&&_(b.anisotropyMap.channel),clearcoatMapUv:yt&&_(b.clearcoatMap.channel),clearcoatNormalMapUv:qt&&_(b.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:st&&_(b.clearcoatRoughnessMap.channel),iridescenceMapUv:bt&&_(b.iridescenceMap.channel),iridescenceThicknessMapUv:Ft&&_(b.iridescenceThicknessMap.channel),sheenColorMapUv:Ot&&_(b.sheenColorMap.channel),sheenRoughnessMapUv:wt&&_(b.sheenRoughnessMap.channel),specularMapUv:$t&&_(b.specularMap.channel),specularColorMapUv:Yt&&_(b.specularColorMap.channel),specularIntensityMapUv:ue&&_(b.specularIntensityMap.channel),transmissionMapUv:D&&_(b.transmissionMap.channel),thicknessMapUv:ft&&_(b.thicknessMap.channel),alphaMapUv:K&&_(b.alphaMap.channel),vertexTangents:!!X.attributes.tangent&&(vt||S),vertexColors:b.vertexColors,vertexAlphas:b.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,pointsUvs:O.isPoints===!0&&!!X.attributes.uv&&(ie||K),fog:!!V,useFog:b.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:b.flatShading===!0,sizeAttenuation:b.sizeAttenuation===!0,logarithmicDepthBuffer:u,reverseDepthBuffer:Pt,skinning:O.isSkinnedMesh===!0,morphTargets:X.morphAttributes.position!==void 0,morphNormals:X.morphAttributes.normal!==void 0,morphColors:X.morphAttributes.color!==void 0,morphTargetsCount:xt,morphTextureStride:Nt,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numLightProbes:M.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:b.dithering,shadowMapEnabled:r.shadowMap.enabled&&L.length>0,shadowMapType:r.shadowMap.type,toneMapping:_e,decodeVideoTexture:ie&&b.map.isVideoTexture===!0&&Jt.getTransfer(b.map.colorSpace)===ae,decodeVideoTextureEmissive:Ut&&b.emissiveMap.isVideoTexture===!0&&Jt.getTransfer(b.emissiveMap.colorSpace)===ae,premultipliedAlpha:b.premultipliedAlpha,doubleSided:b.side===b0,flipSided:b.side===Ke,useDepthPacking:b.depthPacking>=0,depthPacking:b.depthPacking||0,index0AttributeName:b.index0AttributeName,extensionClipCullDistance:Wt&&b.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Wt&&b.extensions.multiDraw===!0||Rt)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:b.customProgramCacheKey()};return Oe.vertexUv1s=c.has(1),Oe.vertexUv2s=c.has(2),Oe.vertexUv3s=c.has(3),c.clear(),Oe}function p(b){const M=[];if(b.shaderID?M.push(b.shaderID):(M.push(b.customVertexShaderID),M.push(b.customFragmentShaderID)),b.defines!==void 0)for(const L in b.defines)M.push(L),M.push(b.defines[L]);return b.isRawShaderMaterial===!1&&(v(M,b),x(M,b),M.push(r.outputColorSpace)),M.push(b.customProgramCacheKey),M.join()}function v(b,M){b.push(M.precision),b.push(M.outputColorSpace),b.push(M.envMapMode),b.push(M.envMapCubeUVHeight),b.push(M.mapUv),b.push(M.alphaMapUv),b.push(M.lightMapUv),b.push(M.aoMapUv),b.push(M.bumpMapUv),b.push(M.normalMapUv),b.push(M.displacementMapUv),b.push(M.emissiveMapUv),b.push(M.metalnessMapUv),b.push(M.roughnessMapUv),b.push(M.anisotropyMapUv),b.push(M.clearcoatMapUv),b.push(M.clearcoatNormalMapUv),b.push(M.clearcoatRoughnessMapUv),b.push(M.iridescenceMapUv),b.push(M.iridescenceThicknessMapUv),b.push(M.sheenColorMapUv),b.push(M.sheenRoughnessMapUv),b.push(M.specularMapUv),b.push(M.specularColorMapUv),b.push(M.specularIntensityMapUv),b.push(M.transmissionMapUv),b.push(M.thicknessMapUv),b.push(M.combine),b.push(M.fogExp2),b.push(M.sizeAttenuation),b.push(M.morphTargetsCount),b.push(M.morphAttributeCount),b.push(M.numDirLights),b.push(M.numPointLights),b.push(M.numSpotLights),b.push(M.numSpotLightMaps),b.push(M.numHemiLights),b.push(M.numRectAreaLights),b.push(M.numDirLightShadows),b.push(M.numPointLightShadows),b.push(M.numSpotLightShadows),b.push(M.numSpotLightShadowsWithMaps),b.push(M.numLightProbes),b.push(M.shadowMapType),b.push(M.toneMapping),b.push(M.numClippingPlanes),b.push(M.numClipIntersection),b.push(M.depthPacking)}function x(b,M){a.disableAll(),M.supportsVertexTextures&&a.enable(0),M.instancing&&a.enable(1),M.instancingColor&&a.enable(2),M.instancingMorph&&a.enable(3),M.matcap&&a.enable(4),M.envMap&&a.enable(5),M.normalMapObjectSpace&&a.enable(6),M.normalMapTangentSpace&&a.enable(7),M.clearcoat&&a.enable(8),M.iridescence&&a.enable(9),M.alphaTest&&a.enable(10),M.vertexColors&&a.enable(11),M.vertexAlphas&&a.enable(12),M.vertexUv1s&&a.enable(13),M.vertexUv2s&&a.enable(14),M.vertexUv3s&&a.enable(15),M.vertexTangents&&a.enable(16),M.anisotropy&&a.enable(17),M.alphaHash&&a.enable(18),M.batching&&a.enable(19),M.dispersion&&a.enable(20),M.batchingColor&&a.enable(21),b.push(a.mask),a.disableAll(),M.fog&&a.enable(0),M.useFog&&a.enable(1),M.flatShading&&a.enable(2),M.logarithmicDepthBuffer&&a.enable(3),M.reverseDepthBuffer&&a.enable(4),M.skinning&&a.enable(5),M.morphTargets&&a.enable(6),M.morphNormals&&a.enable(7),M.morphColors&&a.enable(8),M.premultipliedAlpha&&a.enable(9),M.shadowMapEnabled&&a.enable(10),M.doubleSided&&a.enable(11),M.flipSided&&a.enable(12),M.useDepthPacking&&a.enable(13),M.dithering&&a.enable(14),M.transmission&&a.enable(15),M.sheen&&a.enable(16),M.opaque&&a.enable(17),M.pointsUvs&&a.enable(18),M.decodeVideoTexture&&a.enable(19),M.decodeVideoTextureEmissive&&a.enable(20),M.alphaToCoverage&&a.enable(21),b.push(a.mask)}function y(b){const M=m[b.type];let L;if(M){const z=S0[M];L=uh.clone(z.uniforms)}else L=b.uniforms;return L}function P(b,M){let L;for(let z=0,O=h.length;z<O;z++){const V=h[z];if(V.cacheKey===M){L=V,++L.usedTimes;break}}return L===void 0&&(L=new y7(r,M,b,s),h.push(L)),L}function T(b){if(--b.usedTimes===0){const M=h.indexOf(b);h[M]=h[h.length-1],h.pop(),b.destroy()}}function R(b){l.remove(b)}function I(){l.dispose()}return{getParameters:g,getProgramCacheKey:p,getUniforms:y,acquireProgram:P,releaseProgram:T,releaseShaderCache:R,programs:h,dispose:I}}function w7(){let r=new WeakMap;function t(o){return r.has(o)}function e(o){let a=r.get(o);return a===void 0&&(a={},r.set(o,a)),a}function n(o){r.delete(o)}function i(o,a,l){r.get(o)[a]=l}function s(){r=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:s}}function E7(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.material.id!==t.material.id?r.material.id-t.material.id:r.z!==t.z?r.z-t.z:r.id-t.id}function i2(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.z!==t.z?t.z-r.z:r.id-t.id}function s2(){const r=[];let t=0;const e=[],n=[],i=[];function s(){t=0,e.length=0,n.length=0,i.length=0}function o(u,d,f,m,_,g){let p=r[t];return p===void 0?(p={id:u.id,object:u,geometry:d,material:f,groupOrder:m,renderOrder:u.renderOrder,z:_,group:g},r[t]=p):(p.id=u.id,p.object=u,p.geometry=d,p.material=f,p.groupOrder=m,p.renderOrder=u.renderOrder,p.z=_,p.group=g),t++,p}function a(u,d,f,m,_,g){const p=o(u,d,f,m,_,g);f.transmission>0?n.push(p):f.transparent===!0?i.push(p):e.push(p)}function l(u,d,f,m,_,g){const p=o(u,d,f,m,_,g);f.transmission>0?n.unshift(p):f.transparent===!0?i.unshift(p):e.unshift(p)}function c(u,d){e.length>1&&e.sort(u||E7),n.length>1&&n.sort(d||i2),i.length>1&&i.sort(d||i2)}function h(){for(let u=t,d=r.length;u<d;u++){const f=r[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:h,sort:c}}function T7(){let r=new WeakMap;function t(n,i){const s=r.get(n);let o;return s===void 0?(o=new s2,r.set(n,[o])):i>=s.length?(o=new s2,s.push(o)):o=s[i],o}function e(){r=new WeakMap}return{get:t,dispose:e}}function A7(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new E,color:new dt};break;case"SpotLight":e={position:new E,direction:new E,color:new dt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new E,color:new dt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new E,skyColor:new dt,groundColor:new dt};break;case"RectAreaLight":e={color:new dt,position:new E,halfWidth:new E,halfHeight:new E};break}return r[t.id]=e,e}}}function C7(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Y,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[t.id]=e,e}}}let R7=0;function P7(r,t){return(t.castShadow?2:0)-(r.castShadow?2:0)+(t.map?1:0)-(r.map?1:0)}function I7(r){const t=new A7,e=C7(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new E);const i=new E,s=new Dt,o=new Dt;function a(c){let h=0,u=0,d=0;for(let b=0;b<9;b++)n.probe[b].set(0,0,0);let f=0,m=0,_=0,g=0,p=0,v=0,x=0,y=0,P=0,T=0,R=0;c.sort(P7);for(let b=0,M=c.length;b<M;b++){const L=c[b],z=L.color,O=L.intensity,V=L.distance,X=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)h+=z.r*O,u+=z.g*O,d+=z.b*O;else if(L.isLightProbe){for(let G=0;G<9;G++)n.probe[G].addScaledVector(L.sh.coefficients[G],O);R++}else if(L.isDirectionalLight){const G=t.get(L);if(G.color.copy(L.color).multiplyScalar(L.intensity),L.castShadow){const $=L.shadow,H=e.get(L);H.shadowIntensity=$.intensity,H.shadowBias=$.bias,H.shadowNormalBias=$.normalBias,H.shadowRadius=$.radius,H.shadowMapSize=$.mapSize,n.directionalShadow[f]=H,n.directionalShadowMap[f]=X,n.directionalShadowMatrix[f]=L.shadow.matrix,v++}n.directional[f]=G,f++}else if(L.isSpotLight){const G=t.get(L);G.position.setFromMatrixPosition(L.matrixWorld),G.color.copy(z).multiplyScalar(O),G.distance=V,G.coneCos=Math.cos(L.angle),G.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),G.decay=L.decay,n.spot[_]=G;const $=L.shadow;if(L.map&&(n.spotLightMap[P]=L.map,P++,$.updateMatrices(L),L.castShadow&&T++),n.spotLightMatrix[_]=$.matrix,L.castShadow){const H=e.get(L);H.shadowIntensity=$.intensity,H.shadowBias=$.bias,H.shadowNormalBias=$.normalBias,H.shadowRadius=$.radius,H.shadowMapSize=$.mapSize,n.spotShadow[_]=H,n.spotShadowMap[_]=X,y++}_++}else if(L.isRectAreaLight){const G=t.get(L);G.color.copy(z).multiplyScalar(O),G.halfWidth.set(L.width*.5,0,0),G.halfHeight.set(0,L.height*.5,0),n.rectArea[g]=G,g++}else if(L.isPointLight){const G=t.get(L);if(G.color.copy(L.color).multiplyScalar(L.intensity),G.distance=L.distance,G.decay=L.decay,L.castShadow){const $=L.shadow,H=e.get(L);H.shadowIntensity=$.intensity,H.shadowBias=$.bias,H.shadowNormalBias=$.normalBias,H.shadowRadius=$.radius,H.shadowMapSize=$.mapSize,H.shadowCameraNear=$.camera.near,H.shadowCameraFar=$.camera.far,n.pointShadow[m]=H,n.pointShadowMap[m]=X,n.pointShadowMatrix[m]=L.shadow.matrix,x++}n.point[m]=G,m++}else if(L.isHemisphereLight){const G=t.get(L);G.skyColor.copy(L.color).multiplyScalar(O),G.groundColor.copy(L.groundColor).multiplyScalar(O),n.hemi[p]=G,p++}}g>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=ct.LTC_FLOAT_1,n.rectAreaLTC2=ct.LTC_FLOAT_2):(n.rectAreaLTC1=ct.LTC_HALF_1,n.rectAreaLTC2=ct.LTC_HALF_2)),n.ambient[0]=h,n.ambient[1]=u,n.ambient[2]=d;const I=n.hash;(I.directionalLength!==f||I.pointLength!==m||I.spotLength!==_||I.rectAreaLength!==g||I.hemiLength!==p||I.numDirectionalShadows!==v||I.numPointShadows!==x||I.numSpotShadows!==y||I.numSpotMaps!==P||I.numLightProbes!==R)&&(n.directional.length=f,n.spot.length=_,n.rectArea.length=g,n.point.length=m,n.hemi.length=p,n.directionalShadow.length=v,n.directionalShadowMap.length=v,n.pointShadow.length=x,n.pointShadowMap.length=x,n.spotShadow.length=y,n.spotShadowMap.length=y,n.directionalShadowMatrix.length=v,n.pointShadowMatrix.length=x,n.spotLightMatrix.length=y+P-T,n.spotLightMap.length=P,n.numSpotLightShadowsWithMaps=T,n.numLightProbes=R,I.directionalLength=f,I.pointLength=m,I.spotLength=_,I.rectAreaLength=g,I.hemiLength=p,I.numDirectionalShadows=v,I.numPointShadows=x,I.numSpotShadows=y,I.numSpotMaps=P,I.numLightProbes=R,n.version=R7++)}function l(c,h){let u=0,d=0,f=0,m=0,_=0;const g=h.matrixWorldInverse;for(let p=0,v=c.length;p<v;p++){const x=c[p];if(x.isDirectionalLight){const y=n.directional[u];y.direction.setFromMatrixPosition(x.matrixWorld),i.setFromMatrixPosition(x.target.matrixWorld),y.direction.sub(i),y.direction.transformDirection(g),u++}else if(x.isSpotLight){const y=n.spot[f];y.position.setFromMatrixPosition(x.matrixWorld),y.position.applyMatrix4(g),y.direction.setFromMatrixPosition(x.matrixWorld),i.setFromMatrixPosition(x.target.matrixWorld),y.direction.sub(i),y.direction.transformDirection(g),f++}else if(x.isRectAreaLight){const y=n.rectArea[m];y.position.setFromMatrixPosition(x.matrixWorld),y.position.applyMatrix4(g),o.identity(),s.copy(x.matrixWorld),s.premultiply(g),o.extractRotation(s),y.halfWidth.set(x.width*.5,0,0),y.halfHeight.set(0,x.height*.5,0),y.halfWidth.applyMatrix4(o),y.halfHeight.applyMatrix4(o),m++}else if(x.isPointLight){const y=n.point[d];y.position.setFromMatrixPosition(x.matrixWorld),y.position.applyMatrix4(g),d++}else if(x.isHemisphereLight){const y=n.hemi[_];y.direction.setFromMatrixPosition(x.matrixWorld),y.direction.transformDirection(g),_++}}}return{setup:a,setupView:l,state:n}}function r2(r){const t=new I7(r),e=[],n=[];function i(h){c.camera=h,e.length=0,n.length=0}function s(h){e.push(h)}function o(h){n.push(h)}function a(){t.setup(e)}function l(h){t.setupView(e,h)}const c={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function L7(r){let t=new WeakMap;function e(i,s=0){const o=t.get(i);let a;return o===void 0?(a=new r2(r),t.set(i,[a])):s>=o.length?(a=new r2(r),o.push(a)):a=o[s],a}function n(){t=new WeakMap}return{get:e,dispose:n}}const D7=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,U7=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function N7(r,t,e){let n=new ks;const i=new Y,s=new Y,o=new te,a=new il({depthPacking:$2}),l=new sl,c={},h=e.maxTextureSize,u={[en]:Ke,[Ke]:en,[b0]:b0},d=new T0({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Y},radius:{value:4}},vertexShader:D7,fragmentShader:U7}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const m=new Vt;m.setAttribute("position",new ce(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new lt(m,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=R1;let p=this.type;this.render=function(T,R,I){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||T.length===0)return;const b=r.getRenderTarget(),M=r.getActiveCubeFace(),L=r.getActiveMipmapLevel(),z=r.state;z.setBlending(j0),z.buffers.color.setClear(1,1,1,1),z.buffers.depth.setTest(!0),z.setScissorTest(!1);const O=p!==L0&&this.type===L0,V=p===L0&&this.type!==L0;for(let X=0,G=T.length;X<G;X++){const $=T[X],H=$.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",$,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;i.copy(H.mapSize);const nt=H.getFrameExtents();if(i.multiply(nt),s.copy(H.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(s.x=Math.floor(h/nt.x),i.x=s.x*nt.x,H.mapSize.x=s.x),i.y>h&&(s.y=Math.floor(h/nt.y),i.y=s.y*nt.y,H.mapSize.y=s.y)),H.map===null||O===!0||V===!0){const xt=this.type!==L0?{minFilter:Ne,magFilter:Ne}:{};H.map!==null&&H.map.dispose(),H.map=new O0(i.x,i.y,xt),H.map.texture.name=$.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const ht=H.getViewportCount();for(let xt=0;xt<ht;xt++){const Nt=H.getViewport(xt);o.set(s.x*Nt.x,s.y*Nt.y,s.x*Nt.z,s.y*Nt.w),z.viewport(o),H.updateMatrices($,xt),n=H.getFrustum(),y(R,I,H.camera,$,this.type)}H.isPointLightShadow!==!0&&this.type===L0&&v(H,I),H.needsUpdate=!1}p=this.type,g.needsUpdate=!1,r.setRenderTarget(b,M,L)};function v(T,R){const I=t.update(_);d.defines.VSM_SAMPLES!==T.blurSamples&&(d.defines.VSM_SAMPLES=T.blurSamples,f.defines.VSM_SAMPLES=T.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new O0(i.x,i.y)),d.uniforms.shadow_pass.value=T.map.texture,d.uniforms.resolution.value=T.mapSize,d.uniforms.radius.value=T.radius,r.setRenderTarget(T.mapPass),r.clear(),r.renderBufferDirect(R,null,I,d,_,null),f.uniforms.shadow_pass.value=T.mapPass.texture,f.uniforms.resolution.value=T.mapSize,f.uniforms.radius.value=T.radius,r.setRenderTarget(T.map),r.clear(),r.renderBufferDirect(R,null,I,f,_,null)}function x(T,R,I,b){let M=null;const L=I.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(L!==void 0)M=L;else if(M=I.isPointLight===!0?l:a,r.localClippingEnabled&&R.clipShadows===!0&&Array.isArray(R.clippingPlanes)&&R.clippingPlanes.length!==0||R.displacementMap&&R.displacementScale!==0||R.alphaMap&&R.alphaTest>0||R.map&&R.alphaTest>0){const z=M.uuid,O=R.uuid;let V=c[z];V===void 0&&(V={},c[z]=V);let X=V[O];X===void 0&&(X=M.clone(),V[O]=X,R.addEventListener("dispose",P)),M=X}if(M.visible=R.visible,M.wireframe=R.wireframe,b===L0?M.side=R.shadowSide!==null?R.shadowSide:R.side:M.side=R.shadowSide!==null?R.shadowSide:u[R.side],M.alphaMap=R.alphaMap,M.alphaTest=R.alphaTest,M.map=R.map,M.clipShadows=R.clipShadows,M.clippingPlanes=R.clippingPlanes,M.clipIntersection=R.clipIntersection,M.displacementMap=R.displacementMap,M.displacementScale=R.displacementScale,M.displacementBias=R.displacementBias,M.wireframeLinewidth=R.wireframeLinewidth,M.linewidth=R.linewidth,I.isPointLight===!0&&M.isMeshDistanceMaterial===!0){const z=r.properties.get(M);z.light=I}return M}function y(T,R,I,b,M){if(T.visible===!1)return;if(T.layers.test(R.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&M===L0)&&(!T.frustumCulled||n.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(I.matrixWorldInverse,T.matrixWorld);const O=t.update(T),V=T.material;if(Array.isArray(V)){const X=O.groups;for(let G=0,$=X.length;G<$;G++){const H=X[G],nt=V[H.materialIndex];if(nt&&nt.visible){const ht=x(T,nt,b,M);T.onBeforeShadow(r,T,R,I,O,ht,H),r.renderBufferDirect(I,null,O,ht,T,H),T.onAfterShadow(r,T,R,I,O,ht,H)}}}else if(V.visible){const X=x(T,V,b,M);T.onBeforeShadow(r,T,R,I,O,X,null),r.renderBufferDirect(I,null,O,X,T,null),T.onAfterShadow(r,T,R,I,O,X,null)}}const z=T.children;for(let O=0,V=z.length;O<V;O++)y(z[O],R,I,b,M)}function P(T){T.target.removeEventListener("dispose",P);for(const I in c){const b=c[I],M=T.target.uuid;M in b&&(b[M].dispose(),delete b[M])}}}const F7={[Qr]:to,[eo]:so,[no]:ro,[ti]:io,[to]:Qr,[so]:eo,[ro]:no,[io]:ti};function O7(r,t){function e(){let D=!1;const ft=new te;let W=null;const K=new te(0,0,0,0);return{setMask:function(_t){W!==_t&&!D&&(r.colorMask(_t,_t,_t,_t),W=_t)},setLocked:function(_t){D=_t},setClear:function(_t,gt,Wt,_e,Oe){Oe===!0&&(_t*=_e,gt*=_e,Wt*=_e),ft.set(_t,gt,Wt,_e),K.equals(ft)===!1&&(r.clearColor(_t,gt,Wt,_e),K.copy(ft))},reset:function(){D=!1,W=null,K.set(-1,0,0,0)}}}function n(){let D=!1,ft=!1,W=null,K=null,_t=null;return{setReversed:function(gt){if(ft!==gt){const Wt=t.get("EXT_clip_control");ft?Wt.clipControlEXT(Wt.LOWER_LEFT_EXT,Wt.ZERO_TO_ONE_EXT):Wt.clipControlEXT(Wt.LOWER_LEFT_EXT,Wt.NEGATIVE_ONE_TO_ONE_EXT);const _e=_t;_t=null,this.setClear(_e)}ft=gt},getReversed:function(){return ft},setTest:function(gt){gt?at(r.DEPTH_TEST):Pt(r.DEPTH_TEST)},setMask:function(gt){W!==gt&&!D&&(r.depthMask(gt),W=gt)},setFunc:function(gt){if(ft&&(gt=F7[gt]),K!==gt){switch(gt){case Qr:r.depthFunc(r.NEVER);break;case to:r.depthFunc(r.ALWAYS);break;case eo:r.depthFunc(r.LESS);break;case ti:r.depthFunc(r.LEQUAL);break;case no:r.depthFunc(r.EQUAL);break;case io:r.depthFunc(r.GEQUAL);break;case so:r.depthFunc(r.GREATER);break;case ro:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}K=gt}},setLocked:function(gt){D=gt},setClear:function(gt){_t!==gt&&(ft&&(gt=1-gt),r.clearDepth(gt),_t=gt)},reset:function(){D=!1,W=null,K=null,_t=null,ft=!1}}}function i(){let D=!1,ft=null,W=null,K=null,_t=null,gt=null,Wt=null,_e=null,Oe=null;return{setTest:function(oe){D||(oe?at(r.STENCIL_TEST):Pt(r.STENCIL_TEST))},setMask:function(oe){ft!==oe&&!D&&(r.stencilMask(oe),ft=oe)},setFunc:function(oe,g0,z0){(W!==oe||K!==g0||_t!==z0)&&(r.stencilFunc(oe,g0,z0),W=oe,K=g0,_t=z0)},setOp:function(oe,g0,z0){(gt!==oe||Wt!==g0||_e!==z0)&&(r.stencilOp(oe,g0,z0),gt=oe,Wt=g0,_e=z0)},setLocked:function(oe){D=oe},setClear:function(oe){Oe!==oe&&(r.clearStencil(oe),Oe=oe)},reset:function(){D=!1,ft=null,W=null,K=null,_t=null,gt=null,Wt=null,_e=null,Oe=null}}}const s=new e,o=new n,a=new i,l=new WeakMap,c=new WeakMap;let h={},u={},d=new WeakMap,f=[],m=null,_=!1,g=null,p=null,v=null,x=null,y=null,P=null,T=null,R=new dt(0,0,0),I=0,b=!1,M=null,L=null,z=null,O=null,V=null;const X=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let G=!1,$=0;const H=r.getParameter(r.VERSION);H.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(H)[1]),G=$>=1):H.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),G=$>=2);let nt=null,ht={};const xt=r.getParameter(r.SCISSOR_BOX),Nt=r.getParameter(r.VIEWPORT),ee=new te().fromArray(xt),q=new te().fromArray(Nt);function ot(D,ft,W,K){const _t=new Uint8Array(4),gt=r.createTexture();r.bindTexture(D,gt),r.texParameteri(D,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(D,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Wt=0;Wt<W;Wt++)D===r.TEXTURE_3D||D===r.TEXTURE_2D_ARRAY?r.texImage3D(ft,0,r.RGBA,1,1,K,0,r.RGBA,r.UNSIGNED_BYTE,_t):r.texImage2D(ft+Wt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,_t);return gt}const Tt={};Tt[r.TEXTURE_2D]=ot(r.TEXTURE_2D,r.TEXTURE_2D,1),Tt[r.TEXTURE_CUBE_MAP]=ot(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),Tt[r.TEXTURE_2D_ARRAY]=ot(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Tt[r.TEXTURE_3D]=ot(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),at(r.DEPTH_TEST),o.setFunc(ti),et(!1),vt(h1),at(r.CULL_FACE),C(j0);function at(D){h[D]!==!0&&(r.enable(D),h[D]=!0)}function Pt(D){h[D]!==!1&&(r.disable(D),h[D]=!1)}function Kt(D,ft){return u[D]!==ft?(r.bindFramebuffer(D,ft),u[D]=ft,D===r.DRAW_FRAMEBUFFER&&(u[r.FRAMEBUFFER]=ft),D===r.FRAMEBUFFER&&(u[r.DRAW_FRAMEBUFFER]=ft),!0):!1}function Rt(D,ft){let W=f,K=!1;if(D){W=d.get(ft),W===void 0&&(W=[],d.set(ft,W));const _t=D.textures;if(W.length!==_t.length||W[0]!==r.COLOR_ATTACHMENT0){for(let gt=0,Wt=_t.length;gt<Wt;gt++)W[gt]=r.COLOR_ATTACHMENT0+gt;W.length=_t.length,K=!0}}else W[0]!==r.BACK&&(W[0]=r.BACK,K=!0);K&&r.drawBuffers(W)}function ie(D){return m!==D?(r.useProgram(D),m=D,!0):!1}const tt={[mn]:r.FUNC_ADD,[y2]:r.FUNC_SUBTRACT,[v2]:r.FUNC_REVERSE_SUBTRACT};tt[M2]=r.MIN,tt[S2]=r.MAX;const Q={[b2]:r.ZERO,[w2]:r.ONE,[E2]:r.SRC_COLOR,[Kr]:r.SRC_ALPHA,[I2]:r.SRC_ALPHA_SATURATE,[R2]:r.DST_COLOR,[A2]:r.DST_ALPHA,[T2]:r.ONE_MINUS_SRC_COLOR,[jr]:r.ONE_MINUS_SRC_ALPHA,[P2]:r.ONE_MINUS_DST_COLOR,[C2]:r.ONE_MINUS_DST_ALPHA,[L2]:r.CONSTANT_COLOR,[D2]:r.ONE_MINUS_CONSTANT_COLOR,[U2]:r.CONSTANT_ALPHA,[N2]:r.ONE_MINUS_CONSTANT_ALPHA};function C(D,ft,W,K,_t,gt,Wt,_e,Oe,oe){if(D===j0){_===!0&&(Pt(r.BLEND),_=!1);return}if(_===!1&&(at(r.BLEND),_=!0),D!==x2){if(D!==g||oe!==b){if((p!==mn||y!==mn)&&(r.blendEquation(r.FUNC_ADD),p=mn,y=mn),oe)switch(D){case Jn:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case u1:r.blendFunc(r.ONE,r.ONE);break;case d1:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case f1:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}else switch(D){case Jn:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case u1:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case d1:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case f1:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",D);break}v=null,x=null,P=null,T=null,R.set(0,0,0),I=0,g=D,b=oe}return}_t=_t||ft,gt=gt||W,Wt=Wt||K,(ft!==p||_t!==y)&&(r.blendEquationSeparate(tt[ft],tt[_t]),p=ft,y=_t),(W!==v||K!==x||gt!==P||Wt!==T)&&(r.blendFuncSeparate(Q[W],Q[K],Q[gt],Q[Wt]),v=W,x=K,P=gt,T=Wt),(_e.equals(R)===!1||Oe!==I)&&(r.blendColor(_e.r,_e.g,_e.b,Oe),R.copy(_e),I=Oe),g=D,b=!1}function Ct(D,ft){D.side===b0?Pt(r.CULL_FACE):at(r.CULL_FACE);let W=D.side===Ke;ft&&(W=!W),et(W),D.blending===Jn&&D.transparent===!1?C(j0):C(D.blending,D.blendEquation,D.blendSrc,D.blendDst,D.blendEquationAlpha,D.blendSrcAlpha,D.blendDstAlpha,D.blendColor,D.blendAlpha,D.premultipliedAlpha),o.setFunc(D.depthFunc),o.setTest(D.depthTest),o.setMask(D.depthWrite),s.setMask(D.colorWrite);const K=D.stencilWrite;a.setTest(K),K&&(a.setMask(D.stencilWriteMask),a.setFunc(D.stencilFunc,D.stencilRef,D.stencilFuncMask),a.setOp(D.stencilFail,D.stencilZFail,D.stencilZPass)),Ut(D.polygonOffset,D.polygonOffsetFactor,D.polygonOffsetUnits),D.alphaToCoverage===!0?at(r.SAMPLE_ALPHA_TO_COVERAGE):Pt(r.SAMPLE_ALPHA_TO_COVERAGE)}function et(D){M!==D&&(D?r.frontFace(r.CW):r.frontFace(r.CCW),M=D)}function vt(D){D!==m2?(at(r.CULL_FACE),D!==L&&(D===h1?r.cullFace(r.BACK):D===g2?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Pt(r.CULL_FACE),L=D}function rt(D){D!==z&&(G&&r.lineWidth(D),z=D)}function Ut(D,ft,W){D?(at(r.POLYGON_OFFSET_FILL),(O!==ft||V!==W)&&(r.polygonOffset(ft,W),O=ft,V=W)):Pt(r.POLYGON_OFFSET_FILL)}function mt(D){D?at(r.SCISSOR_TEST):Pt(r.SCISSOR_TEST)}function A(D){D===void 0&&(D=r.TEXTURE0+X-1),nt!==D&&(r.activeTexture(D),nt=D)}function S(D,ft,W){W===void 0&&(nt===null?W=r.TEXTURE0+X-1:W=nt);let K=ht[W];K===void 0&&(K={type:void 0,texture:void 0},ht[W]=K),(K.type!==D||K.texture!==ft)&&(nt!==W&&(r.activeTexture(W),nt=W),r.bindTexture(D,ft||Tt[D]),K.type=D,K.texture=ft)}function F(){const D=ht[nt];D!==void 0&&D.type!==void 0&&(r.bindTexture(D.type,null),D.type=void 0,D.texture=void 0)}function Z(){try{r.compressedTexImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function j(){try{r.compressedTexImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function J(){try{r.texSubImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function At(){try{r.texSubImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function ut(){try{r.compressedTexSubImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function yt(){try{r.compressedTexSubImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function qt(){try{r.texStorage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function st(){try{r.texStorage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function bt(){try{r.texImage2D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Ft(){try{r.texImage3D(...arguments)}catch(D){console.error("THREE.WebGLState:",D)}}function Ot(D){ee.equals(D)===!1&&(r.scissor(D.x,D.y,D.z,D.w),ee.copy(D))}function wt(D){q.equals(D)===!1&&(r.viewport(D.x,D.y,D.z,D.w),q.copy(D))}function $t(D,ft){let W=c.get(ft);W===void 0&&(W=new WeakMap,c.set(ft,W));let K=W.get(D);K===void 0&&(K=r.getUniformBlockIndex(ft,D.name),W.set(D,K))}function Yt(D,ft){const K=c.get(ft).get(D);l.get(ft)!==K&&(r.uniformBlockBinding(ft,K,D.__bindingPointIndex),l.set(ft,K))}function ue(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),o.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),h={},nt=null,ht={},u={},d=new WeakMap,f=[],m=null,_=!1,g=null,p=null,v=null,x=null,y=null,P=null,T=null,R=new dt(0,0,0),I=0,b=!1,M=null,L=null,z=null,O=null,V=null,ee.set(0,0,r.canvas.width,r.canvas.height),q.set(0,0,r.canvas.width,r.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:at,disable:Pt,bindFramebuffer:Kt,drawBuffers:Rt,useProgram:ie,setBlending:C,setMaterial:Ct,setFlipSided:et,setCullFace:vt,setLineWidth:rt,setPolygonOffset:Ut,setScissorTest:mt,activeTexture:A,bindTexture:S,unbindTexture:F,compressedTexImage2D:Z,compressedTexImage3D:j,texImage2D:bt,texImage3D:Ft,updateUBOMapping:$t,uniformBlockBinding:Yt,texStorage2D:qt,texStorage3D:st,texSubImage2D:J,texSubImage3D:At,compressedTexSubImage2D:ut,compressedTexSubImage3D:yt,scissor:Ot,viewport:wt,reset:ue}}function B7(r,t,e,n,i,s,o){const a=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new Y,h=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function m(A,S){return f?new OffscreenCanvas(A,S):As("canvas")}function _(A,S,F){let Z=1;const j=mt(A);if((j.width>F||j.height>F)&&(Z=F/Math.max(j.width,j.height)),Z<1)if(typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&A instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&A instanceof ImageBitmap||typeof VideoFrame<"u"&&A instanceof VideoFrame){const J=Math.floor(Z*j.width),At=Math.floor(Z*j.height);u===void 0&&(u=m(J,At));const ut=S?m(J,At):u;return ut.width=J,ut.height=At,ut.getContext("2d").drawImage(A,0,0,J,At),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+j.width+"x"+j.height+") to ("+J+"x"+At+")."),ut}else return"data"in A&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+j.width+"x"+j.height+")."),A;return A}function g(A){return A.generateMipmaps}function p(A){r.generateMipmap(A)}function v(A){return A.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:A.isWebGL3DRenderTarget?r.TEXTURE_3D:A.isWebGLArrayRenderTarget||A.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function x(A,S,F,Z,j=!1){if(A!==null){if(r[A]!==void 0)return r[A];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+A+"'")}let J=S;if(S===r.RED&&(F===r.FLOAT&&(J=r.R32F),F===r.HALF_FLOAT&&(J=r.R16F),F===r.UNSIGNED_BYTE&&(J=r.R8)),S===r.RED_INTEGER&&(F===r.UNSIGNED_BYTE&&(J=r.R8UI),F===r.UNSIGNED_SHORT&&(J=r.R16UI),F===r.UNSIGNED_INT&&(J=r.R32UI),F===r.BYTE&&(J=r.R8I),F===r.SHORT&&(J=r.R16I),F===r.INT&&(J=r.R32I)),S===r.RG&&(F===r.FLOAT&&(J=r.RG32F),F===r.HALF_FLOAT&&(J=r.RG16F),F===r.UNSIGNED_BYTE&&(J=r.RG8)),S===r.RG_INTEGER&&(F===r.UNSIGNED_BYTE&&(J=r.RG8UI),F===r.UNSIGNED_SHORT&&(J=r.RG16UI),F===r.UNSIGNED_INT&&(J=r.RG32UI),F===r.BYTE&&(J=r.RG8I),F===r.SHORT&&(J=r.RG16I),F===r.INT&&(J=r.RG32I)),S===r.RGB_INTEGER&&(F===r.UNSIGNED_BYTE&&(J=r.RGB8UI),F===r.UNSIGNED_SHORT&&(J=r.RGB16UI),F===r.UNSIGNED_INT&&(J=r.RGB32UI),F===r.BYTE&&(J=r.RGB8I),F===r.SHORT&&(J=r.RGB16I),F===r.INT&&(J=r.RGB32I)),S===r.RGBA_INTEGER&&(F===r.UNSIGNED_BYTE&&(J=r.RGBA8UI),F===r.UNSIGNED_SHORT&&(J=r.RGBA16UI),F===r.UNSIGNED_INT&&(J=r.RGBA32UI),F===r.BYTE&&(J=r.RGBA8I),F===r.SHORT&&(J=r.RGBA16I),F===r.INT&&(J=r.RGBA32I)),S===r.RGB&&F===r.UNSIGNED_INT_5_9_9_9_REV&&(J=r.RGB9_E5),S===r.RGBA){const At=j?ws:Jt.getTransfer(Z);F===r.FLOAT&&(J=r.RGBA32F),F===r.HALF_FLOAT&&(J=r.RGBA16F),F===r.UNSIGNED_BYTE&&(J=At===ae?r.SRGB8_ALPHA8:r.RGBA8),F===r.UNSIGNED_SHORT_4_4_4_4&&(J=r.RGBA4),F===r.UNSIGNED_SHORT_5_5_5_1&&(J=r.RGB5_A1)}return(J===r.R16F||J===r.R32F||J===r.RG16F||J===r.RG32F||J===r.RGBA16F||J===r.RGBA32F)&&t.get("EXT_color_buffer_float"),J}function y(A,S){let F;return A?S===null||S===sn||S===ei?F=r.DEPTH24_STENCIL8:S===r0?F=r.DEPTH32F_STENCIL8:S===Ni&&(F=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):S===null||S===sn||S===ei?F=r.DEPTH_COMPONENT24:S===r0?F=r.DEPTH_COMPONENT32F:S===Ni&&(F=r.DEPTH_COMPONENT16),F}function P(A,S){return g(A)===!0||A.isFramebufferTexture&&A.minFilter!==Ne&&A.minFilter!==Re?Math.log2(Math.max(S.width,S.height))+1:A.mipmaps!==void 0&&A.mipmaps.length>0?A.mipmaps.length:A.isCompressedTexture&&Array.isArray(A.image)?S.mipmaps.length:1}function T(A){const S=A.target;S.removeEventListener("dispose",T),I(S),S.isVideoTexture&&h.delete(S)}function R(A){const S=A.target;S.removeEventListener("dispose",R),M(S)}function I(A){const S=n.get(A);if(S.__webglInit===void 0)return;const F=A.source,Z=d.get(F);if(Z){const j=Z[S.__cacheKey];j.usedTimes--,j.usedTimes===0&&b(A),Object.keys(Z).length===0&&d.delete(F)}n.remove(A)}function b(A){const S=n.get(A);r.deleteTexture(S.__webglTexture);const F=A.source,Z=d.get(F);delete Z[S.__cacheKey],o.memory.textures--}function M(A){const S=n.get(A);if(A.depthTexture&&(A.depthTexture.dispose(),n.remove(A.depthTexture)),A.isWebGLCubeRenderTarget)for(let Z=0;Z<6;Z++){if(Array.isArray(S.__webglFramebuffer[Z]))for(let j=0;j<S.__webglFramebuffer[Z].length;j++)r.deleteFramebuffer(S.__webglFramebuffer[Z][j]);else r.deleteFramebuffer(S.__webglFramebuffer[Z]);S.__webglDepthbuffer&&r.deleteRenderbuffer(S.__webglDepthbuffer[Z])}else{if(Array.isArray(S.__webglFramebuffer))for(let Z=0;Z<S.__webglFramebuffer.length;Z++)r.deleteFramebuffer(S.__webglFramebuffer[Z]);else r.deleteFramebuffer(S.__webglFramebuffer);if(S.__webglDepthbuffer&&r.deleteRenderbuffer(S.__webglDepthbuffer),S.__webglMultisampledFramebuffer&&r.deleteFramebuffer(S.__webglMultisampledFramebuffer),S.__webglColorRenderbuffer)for(let Z=0;Z<S.__webglColorRenderbuffer.length;Z++)S.__webglColorRenderbuffer[Z]&&r.deleteRenderbuffer(S.__webglColorRenderbuffer[Z]);S.__webglDepthRenderbuffer&&r.deleteRenderbuffer(S.__webglDepthRenderbuffer)}const F=A.textures;for(let Z=0,j=F.length;Z<j;Z++){const J=n.get(F[Z]);J.__webglTexture&&(r.deleteTexture(J.__webglTexture),o.memory.textures--),n.remove(F[Z])}n.remove(A)}let L=0;function z(){L=0}function O(){const A=L;return A>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+A+" texture units while this GPU supports only "+i.maxTextures),L+=1,A}function V(A){const S=[];return S.push(A.wrapS),S.push(A.wrapT),S.push(A.wrapR||0),S.push(A.magFilter),S.push(A.minFilter),S.push(A.anisotropy),S.push(A.internalFormat),S.push(A.format),S.push(A.type),S.push(A.generateMipmaps),S.push(A.premultiplyAlpha),S.push(A.flipY),S.push(A.unpackAlignment),S.push(A.colorSpace),S.join()}function X(A,S){const F=n.get(A);if(A.isVideoTexture&&rt(A),A.isRenderTargetTexture===!1&&A.version>0&&F.__version!==A.version){const Z=A.image;if(Z===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Z.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{q(F,A,S);return}}e.bindTexture(r.TEXTURE_2D,F.__webglTexture,r.TEXTURE0+S)}function G(A,S){const F=n.get(A);if(A.version>0&&F.__version!==A.version){q(F,A,S);return}e.bindTexture(r.TEXTURE_2D_ARRAY,F.__webglTexture,r.TEXTURE0+S)}function $(A,S){const F=n.get(A);if(A.version>0&&F.__version!==A.version){q(F,A,S);return}e.bindTexture(r.TEXTURE_3D,F.__webglTexture,r.TEXTURE0+S)}function H(A,S){const F=n.get(A);if(A.version>0&&F.__version!==A.version){ot(F,A,S);return}e.bindTexture(r.TEXTURE_CUBE_MAP,F.__webglTexture,r.TEXTURE0+S)}const nt={[vs]:r.REPEAT,[m0]:r.CLAMP_TO_EDGE,[Ms]:r.MIRRORED_REPEAT},ht={[Ne]:r.NEAREST,[P1]:r.NEAREST_MIPMAP_NEAREST,[Ri]:r.NEAREST_MIPMAP_LINEAR,[Re]:r.LINEAR,[ls]:r.LINEAR_MIPMAP_NEAREST,[U0]:r.LINEAR_MIPMAP_LINEAR},xt={[j2]:r.NEVER,[sh]:r.ALWAYS,[Q2]:r.LESS,[V1]:r.LEQUAL,[th]:r.EQUAL,[ih]:r.GEQUAL,[eh]:r.GREATER,[nh]:r.NOTEQUAL};function Nt(A,S){if(S.type===r0&&t.has("OES_texture_float_linear")===!1&&(S.magFilter===Re||S.magFilter===ls||S.magFilter===Ri||S.magFilter===U0||S.minFilter===Re||S.minFilter===ls||S.minFilter===Ri||S.minFilter===U0)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(A,r.TEXTURE_WRAP_S,nt[S.wrapS]),r.texParameteri(A,r.TEXTURE_WRAP_T,nt[S.wrapT]),(A===r.TEXTURE_3D||A===r.TEXTURE_2D_ARRAY)&&r.texParameteri(A,r.TEXTURE_WRAP_R,nt[S.wrapR]),r.texParameteri(A,r.TEXTURE_MAG_FILTER,ht[S.magFilter]),r.texParameteri(A,r.TEXTURE_MIN_FILTER,ht[S.minFilter]),S.compareFunction&&(r.texParameteri(A,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(A,r.TEXTURE_COMPARE_FUNC,xt[S.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(S.magFilter===Ne||S.minFilter!==Ri&&S.minFilter!==U0||S.type===r0&&t.has("OES_texture_float_linear")===!1)return;if(S.anisotropy>1||n.get(S).__currentAnisotropy){const F=t.get("EXT_texture_filter_anisotropic");r.texParameterf(A,F.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(S.anisotropy,i.getMaxAnisotropy())),n.get(S).__currentAnisotropy=S.anisotropy}}}function ee(A,S){let F=!1;A.__webglInit===void 0&&(A.__webglInit=!0,S.addEventListener("dispose",T));const Z=S.source;let j=d.get(Z);j===void 0&&(j={},d.set(Z,j));const J=V(S);if(J!==A.__cacheKey){j[J]===void 0&&(j[J]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,F=!0),j[J].usedTimes++;const At=j[A.__cacheKey];At!==void 0&&(j[A.__cacheKey].usedTimes--,At.usedTimes===0&&b(S)),A.__cacheKey=J,A.__webglTexture=j[J].texture}return F}function q(A,S,F){let Z=r.TEXTURE_2D;(S.isDataArrayTexture||S.isCompressedArrayTexture)&&(Z=r.TEXTURE_2D_ARRAY),S.isData3DTexture&&(Z=r.TEXTURE_3D);const j=ee(A,S),J=S.source;e.bindTexture(Z,A.__webglTexture,r.TEXTURE0+F);const At=n.get(J);if(J.version!==At.__version||j===!0){e.activeTexture(r.TEXTURE0+F);const ut=Jt.getPrimaries(Jt.workingColorSpace),yt=S.colorSpace===q0?null:Jt.getPrimaries(S.colorSpace),qt=S.colorSpace===q0||ut===yt?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,S.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,S.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,qt);let st=_(S.image,!1,i.maxTextureSize);st=Ut(S,st);const bt=s.convert(S.format,S.colorSpace),Ft=s.convert(S.type);let Ot=x(S.internalFormat,bt,Ft,S.colorSpace,S.isVideoTexture);Nt(Z,S);let wt;const $t=S.mipmaps,Yt=S.isVideoTexture!==!0,ue=At.__version===void 0||j===!0,D=J.dataReady,ft=P(S,st);if(S.isDepthTexture)Ot=y(S.format===ni,S.type),ue&&(Yt?e.texStorage2D(r.TEXTURE_2D,1,Ot,st.width,st.height):e.texImage2D(r.TEXTURE_2D,0,Ot,st.width,st.height,0,bt,Ft,null));else if(S.isDataTexture)if($t.length>0){Yt&&ue&&e.texStorage2D(r.TEXTURE_2D,ft,Ot,$t[0].width,$t[0].height);for(let W=0,K=$t.length;W<K;W++)wt=$t[W],Yt?D&&e.texSubImage2D(r.TEXTURE_2D,W,0,0,wt.width,wt.height,bt,Ft,wt.data):e.texImage2D(r.TEXTURE_2D,W,Ot,wt.width,wt.height,0,bt,Ft,wt.data);S.generateMipmaps=!1}else Yt?(ue&&e.texStorage2D(r.TEXTURE_2D,ft,Ot,st.width,st.height),D&&e.texSubImage2D(r.TEXTURE_2D,0,0,0,st.width,st.height,bt,Ft,st.data)):e.texImage2D(r.TEXTURE_2D,0,Ot,st.width,st.height,0,bt,Ft,st.data);else if(S.isCompressedTexture)if(S.isCompressedArrayTexture){Yt&&ue&&e.texStorage3D(r.TEXTURE_2D_ARRAY,ft,Ot,$t[0].width,$t[0].height,st.depth);for(let W=0,K=$t.length;W<K;W++)if(wt=$t[W],S.format!==$e)if(bt!==null)if(Yt){if(D)if(S.layerUpdates.size>0){const _t=w1(wt.width,wt.height,S.format,S.type);for(const gt of S.layerUpdates){const Wt=wt.data.subarray(gt*_t/wt.data.BYTES_PER_ELEMENT,(gt+1)*_t/wt.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,W,0,0,gt,wt.width,wt.height,1,bt,Wt)}S.clearLayerUpdates()}else e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,W,0,0,0,wt.width,wt.height,st.depth,bt,wt.data)}else e.compressedTexImage3D(r.TEXTURE_2D_ARRAY,W,Ot,wt.width,wt.height,st.depth,0,wt.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else Yt?D&&e.texSubImage3D(r.TEXTURE_2D_ARRAY,W,0,0,0,wt.width,wt.height,st.depth,bt,Ft,wt.data):e.texImage3D(r.TEXTURE_2D_ARRAY,W,Ot,wt.width,wt.height,st.depth,0,bt,Ft,wt.data)}else{Yt&&ue&&e.texStorage2D(r.TEXTURE_2D,ft,Ot,$t[0].width,$t[0].height);for(let W=0,K=$t.length;W<K;W++)wt=$t[W],S.format!==$e?bt!==null?Yt?D&&e.compressedTexSubImage2D(r.TEXTURE_2D,W,0,0,wt.width,wt.height,bt,wt.data):e.compressedTexImage2D(r.TEXTURE_2D,W,Ot,wt.width,wt.height,0,wt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Yt?D&&e.texSubImage2D(r.TEXTURE_2D,W,0,0,wt.width,wt.height,bt,Ft,wt.data):e.texImage2D(r.TEXTURE_2D,W,Ot,wt.width,wt.height,0,bt,Ft,wt.data)}else if(S.isDataArrayTexture)if(Yt){if(ue&&e.texStorage3D(r.TEXTURE_2D_ARRAY,ft,Ot,st.width,st.height,st.depth),D)if(S.layerUpdates.size>0){const W=w1(st.width,st.height,S.format,S.type);for(const K of S.layerUpdates){const _t=st.data.subarray(K*W/st.data.BYTES_PER_ELEMENT,(K+1)*W/st.data.BYTES_PER_ELEMENT);e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,K,st.width,st.height,1,bt,Ft,_t)}S.clearLayerUpdates()}else e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,st.width,st.height,st.depth,bt,Ft,st.data)}else e.texImage3D(r.TEXTURE_2D_ARRAY,0,Ot,st.width,st.height,st.depth,0,bt,Ft,st.data);else if(S.isData3DTexture)Yt?(ue&&e.texStorage3D(r.TEXTURE_3D,ft,Ot,st.width,st.height,st.depth),D&&e.texSubImage3D(r.TEXTURE_3D,0,0,0,0,st.width,st.height,st.depth,bt,Ft,st.data)):e.texImage3D(r.TEXTURE_3D,0,Ot,st.width,st.height,st.depth,0,bt,Ft,st.data);else if(S.isFramebufferTexture){if(ue)if(Yt)e.texStorage2D(r.TEXTURE_2D,ft,Ot,st.width,st.height);else{let W=st.width,K=st.height;for(let _t=0;_t<ft;_t++)e.texImage2D(r.TEXTURE_2D,_t,Ot,W,K,0,bt,Ft,null),W>>=1,K>>=1}}else if($t.length>0){if(Yt&&ue){const W=mt($t[0]);e.texStorage2D(r.TEXTURE_2D,ft,Ot,W.width,W.height)}for(let W=0,K=$t.length;W<K;W++)wt=$t[W],Yt?D&&e.texSubImage2D(r.TEXTURE_2D,W,0,0,bt,Ft,wt):e.texImage2D(r.TEXTURE_2D,W,Ot,bt,Ft,wt);S.generateMipmaps=!1}else if(Yt){if(ue){const W=mt(st);e.texStorage2D(r.TEXTURE_2D,ft,Ot,W.width,W.height)}D&&e.texSubImage2D(r.TEXTURE_2D,0,0,0,bt,Ft,st)}else e.texImage2D(r.TEXTURE_2D,0,Ot,bt,Ft,st);g(S)&&p(Z),At.__version=J.version,S.onUpdate&&S.onUpdate(S)}A.__version=S.version}function ot(A,S,F){if(S.image.length!==6)return;const Z=ee(A,S),j=S.source;e.bindTexture(r.TEXTURE_CUBE_MAP,A.__webglTexture,r.TEXTURE0+F);const J=n.get(j);if(j.version!==J.__version||Z===!0){e.activeTexture(r.TEXTURE0+F);const At=Jt.getPrimaries(Jt.workingColorSpace),ut=S.colorSpace===q0?null:Jt.getPrimaries(S.colorSpace),yt=S.colorSpace===q0||At===ut?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,S.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,S.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,S.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,yt);const qt=S.isCompressedTexture||S.image[0].isCompressedTexture,st=S.image[0]&&S.image[0].isDataTexture,bt=[];for(let K=0;K<6;K++)!qt&&!st?bt[K]=_(S.image[K],!0,i.maxCubemapSize):bt[K]=st?S.image[K].image:S.image[K],bt[K]=Ut(S,bt[K]);const Ft=bt[0],Ot=s.convert(S.format,S.colorSpace),wt=s.convert(S.type),$t=x(S.internalFormat,Ot,wt,S.colorSpace),Yt=S.isVideoTexture!==!0,ue=J.__version===void 0||Z===!0,D=j.dataReady;let ft=P(S,Ft);Nt(r.TEXTURE_CUBE_MAP,S);let W;if(qt){Yt&&ue&&e.texStorage2D(r.TEXTURE_CUBE_MAP,ft,$t,Ft.width,Ft.height);for(let K=0;K<6;K++){W=bt[K].mipmaps;for(let _t=0;_t<W.length;_t++){const gt=W[_t];S.format!==$e?Ot!==null?Yt?D&&e.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t,0,0,gt.width,gt.height,Ot,gt.data):e.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t,$t,gt.width,gt.height,0,gt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Yt?D&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t,0,0,gt.width,gt.height,Ot,wt,gt.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t,$t,gt.width,gt.height,0,Ot,wt,gt.data)}}}else{if(W=S.mipmaps,Yt&&ue){W.length>0&&ft++;const K=mt(bt[0]);e.texStorage2D(r.TEXTURE_CUBE_MAP,ft,$t,K.width,K.height)}for(let K=0;K<6;K++)if(st){Yt?D&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,bt[K].width,bt[K].height,Ot,wt,bt[K].data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,$t,bt[K].width,bt[K].height,0,Ot,wt,bt[K].data);for(let _t=0;_t<W.length;_t++){const Wt=W[_t].image[K].image;Yt?D&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t+1,0,0,Wt.width,Wt.height,Ot,wt,Wt.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t+1,$t,Wt.width,Wt.height,0,Ot,wt,Wt.data)}}else{Yt?D&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,0,0,Ot,wt,bt[K]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,0,$t,Ot,wt,bt[K]);for(let _t=0;_t<W.length;_t++){const gt=W[_t];Yt?D&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t+1,0,0,Ot,wt,gt.image[K]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+K,_t+1,$t,Ot,wt,gt.image[K])}}}g(S)&&p(r.TEXTURE_CUBE_MAP),J.__version=j.version,S.onUpdate&&S.onUpdate(S)}A.__version=S.version}function Tt(A,S,F,Z,j,J){const At=s.convert(F.format,F.colorSpace),ut=s.convert(F.type),yt=x(F.internalFormat,At,ut,F.colorSpace),qt=n.get(S),st=n.get(F);if(st.__renderTarget=S,!qt.__hasExternalTextures){const bt=Math.max(1,S.width>>J),Ft=Math.max(1,S.height>>J);j===r.TEXTURE_3D||j===r.TEXTURE_2D_ARRAY?e.texImage3D(j,J,yt,bt,Ft,S.depth,0,At,ut,null):e.texImage2D(j,J,yt,bt,Ft,0,At,ut,null)}e.bindFramebuffer(r.FRAMEBUFFER,A),vt(S)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Z,j,st.__webglTexture,0,et(S)):(j===r.TEXTURE_2D||j>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&j<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Z,j,st.__webglTexture,J),e.bindFramebuffer(r.FRAMEBUFFER,null)}function at(A,S,F){if(r.bindRenderbuffer(r.RENDERBUFFER,A),S.depthBuffer){const Z=S.depthTexture,j=Z&&Z.isDepthTexture?Z.type:null,J=y(S.stencilBuffer,j),At=S.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,ut=et(S);vt(S)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ut,J,S.width,S.height):F?r.renderbufferStorageMultisample(r.RENDERBUFFER,ut,J,S.width,S.height):r.renderbufferStorage(r.RENDERBUFFER,J,S.width,S.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,At,r.RENDERBUFFER,A)}else{const Z=S.textures;for(let j=0;j<Z.length;j++){const J=Z[j],At=s.convert(J.format,J.colorSpace),ut=s.convert(J.type),yt=x(J.internalFormat,At,ut,J.colorSpace),qt=et(S);F&&vt(S)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,qt,yt,S.width,S.height):vt(S)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,qt,yt,S.width,S.height):r.renderbufferStorage(r.RENDERBUFFER,yt,S.width,S.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Pt(A,S){if(S&&S.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(r.FRAMEBUFFER,A),!(S.depthTexture&&S.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Z=n.get(S.depthTexture);Z.__renderTarget=S,(!Z.__webglTexture||S.depthTexture.image.width!==S.width||S.depthTexture.image.height!==S.height)&&(S.depthTexture.image.width=S.width,S.depthTexture.image.height=S.height,S.depthTexture.needsUpdate=!0),X(S.depthTexture,0);const j=Z.__webglTexture,J=et(S);if(S.depthTexture.format===$n)vt(S)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,j,0,J):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,j,0);else if(S.depthTexture.format===ni)vt(S)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,j,0,J):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,j,0);else throw new Error("Unknown depthTexture format")}function Kt(A){const S=n.get(A),F=A.isWebGLCubeRenderTarget===!0;if(S.__boundDepthTexture!==A.depthTexture){const Z=A.depthTexture;if(S.__depthDisposeCallback&&S.__depthDisposeCallback(),Z){const j=()=>{delete S.__boundDepthTexture,delete S.__depthDisposeCallback,Z.removeEventListener("dispose",j)};Z.addEventListener("dispose",j),S.__depthDisposeCallback=j}S.__boundDepthTexture=Z}if(A.depthTexture&&!S.__autoAllocateDepthBuffer){if(F)throw new Error("target.depthTexture not supported in Cube render targets");Pt(S.__webglFramebuffer,A)}else if(F){S.__webglDepthbuffer=[];for(let Z=0;Z<6;Z++)if(e.bindFramebuffer(r.FRAMEBUFFER,S.__webglFramebuffer[Z]),S.__webglDepthbuffer[Z]===void 0)S.__webglDepthbuffer[Z]=r.createRenderbuffer(),at(S.__webglDepthbuffer[Z],A,!1);else{const j=A.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,J=S.__webglDepthbuffer[Z];r.bindRenderbuffer(r.RENDERBUFFER,J),r.framebufferRenderbuffer(r.FRAMEBUFFER,j,r.RENDERBUFFER,J)}}else if(e.bindFramebuffer(r.FRAMEBUFFER,S.__webglFramebuffer),S.__webglDepthbuffer===void 0)S.__webglDepthbuffer=r.createRenderbuffer(),at(S.__webglDepthbuffer,A,!1);else{const Z=A.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,j=S.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,j),r.framebufferRenderbuffer(r.FRAMEBUFFER,Z,r.RENDERBUFFER,j)}e.bindFramebuffer(r.FRAMEBUFFER,null)}function Rt(A,S,F){const Z=n.get(A);S!==void 0&&Tt(Z.__webglFramebuffer,A,A.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),F!==void 0&&Kt(A)}function ie(A){const S=A.texture,F=n.get(A),Z=n.get(S);A.addEventListener("dispose",R);const j=A.textures,J=A.isWebGLCubeRenderTarget===!0,At=j.length>1;if(At||(Z.__webglTexture===void 0&&(Z.__webglTexture=r.createTexture()),Z.__version=S.version,o.memory.textures++),J){F.__webglFramebuffer=[];for(let ut=0;ut<6;ut++)if(S.mipmaps&&S.mipmaps.length>0){F.__webglFramebuffer[ut]=[];for(let yt=0;yt<S.mipmaps.length;yt++)F.__webglFramebuffer[ut][yt]=r.createFramebuffer()}else F.__webglFramebuffer[ut]=r.createFramebuffer()}else{if(S.mipmaps&&S.mipmaps.length>0){F.__webglFramebuffer=[];for(let ut=0;ut<S.mipmaps.length;ut++)F.__webglFramebuffer[ut]=r.createFramebuffer()}else F.__webglFramebuffer=r.createFramebuffer();if(At)for(let ut=0,yt=j.length;ut<yt;ut++){const qt=n.get(j[ut]);qt.__webglTexture===void 0&&(qt.__webglTexture=r.createTexture(),o.memory.textures++)}if(A.samples>0&&vt(A)===!1){F.__webglMultisampledFramebuffer=r.createFramebuffer(),F.__webglColorRenderbuffer=[],e.bindFramebuffer(r.FRAMEBUFFER,F.__webglMultisampledFramebuffer);for(let ut=0;ut<j.length;ut++){const yt=j[ut];F.__webglColorRenderbuffer[ut]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,F.__webglColorRenderbuffer[ut]);const qt=s.convert(yt.format,yt.colorSpace),st=s.convert(yt.type),bt=x(yt.internalFormat,qt,st,yt.colorSpace,A.isXRRenderTarget===!0),Ft=et(A);r.renderbufferStorageMultisample(r.RENDERBUFFER,Ft,bt,A.width,A.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ut,r.RENDERBUFFER,F.__webglColorRenderbuffer[ut])}r.bindRenderbuffer(r.RENDERBUFFER,null),A.depthBuffer&&(F.__webglDepthRenderbuffer=r.createRenderbuffer(),at(F.__webglDepthRenderbuffer,A,!0)),e.bindFramebuffer(r.FRAMEBUFFER,null)}}if(J){e.bindTexture(r.TEXTURE_CUBE_MAP,Z.__webglTexture),Nt(r.TEXTURE_CUBE_MAP,S);for(let ut=0;ut<6;ut++)if(S.mipmaps&&S.mipmaps.length>0)for(let yt=0;yt<S.mipmaps.length;yt++)Tt(F.__webglFramebuffer[ut][yt],A,S,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+ut,yt);else Tt(F.__webglFramebuffer[ut],A,S,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+ut,0);g(S)&&p(r.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(At){for(let ut=0,yt=j.length;ut<yt;ut++){const qt=j[ut],st=n.get(qt);e.bindTexture(r.TEXTURE_2D,st.__webglTexture),Nt(r.TEXTURE_2D,qt),Tt(F.__webglFramebuffer,A,qt,r.COLOR_ATTACHMENT0+ut,r.TEXTURE_2D,0),g(qt)&&p(r.TEXTURE_2D)}e.unbindTexture()}else{let ut=r.TEXTURE_2D;if((A.isWebGL3DRenderTarget||A.isWebGLArrayRenderTarget)&&(ut=A.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),e.bindTexture(ut,Z.__webglTexture),Nt(ut,S),S.mipmaps&&S.mipmaps.length>0)for(let yt=0;yt<S.mipmaps.length;yt++)Tt(F.__webglFramebuffer[yt],A,S,r.COLOR_ATTACHMENT0,ut,yt);else Tt(F.__webglFramebuffer,A,S,r.COLOR_ATTACHMENT0,ut,0);g(S)&&p(ut),e.unbindTexture()}A.depthBuffer&&Kt(A)}function tt(A){const S=A.textures;for(let F=0,Z=S.length;F<Z;F++){const j=S[F];if(g(j)){const J=v(A),At=n.get(j).__webglTexture;e.bindTexture(J,At),p(J),e.unbindTexture()}}}const Q=[],C=[];function Ct(A){if(A.samples>0){if(vt(A)===!1){const S=A.textures,F=A.width,Z=A.height;let j=r.COLOR_BUFFER_BIT;const J=A.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,At=n.get(A),ut=S.length>1;if(ut)for(let yt=0;yt<S.length;yt++)e.bindFramebuffer(r.FRAMEBUFFER,At.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+yt,r.RENDERBUFFER,null),e.bindFramebuffer(r.FRAMEBUFFER,At.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+yt,r.TEXTURE_2D,null,0);e.bindFramebuffer(r.READ_FRAMEBUFFER,At.__webglMultisampledFramebuffer),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,At.__webglFramebuffer);for(let yt=0;yt<S.length;yt++){if(A.resolveDepthBuffer&&(A.depthBuffer&&(j|=r.DEPTH_BUFFER_BIT),A.stencilBuffer&&A.resolveStencilBuffer&&(j|=r.STENCIL_BUFFER_BIT)),ut){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,At.__webglColorRenderbuffer[yt]);const qt=n.get(S[yt]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,qt,0)}r.blitFramebuffer(0,0,F,Z,0,0,F,Z,j,r.NEAREST),l===!0&&(Q.length=0,C.length=0,Q.push(r.COLOR_ATTACHMENT0+yt),A.depthBuffer&&A.resolveDepthBuffer===!1&&(Q.push(J),C.push(J),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,C)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Q))}if(e.bindFramebuffer(r.READ_FRAMEBUFFER,null),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),ut)for(let yt=0;yt<S.length;yt++){e.bindFramebuffer(r.FRAMEBUFFER,At.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+yt,r.RENDERBUFFER,At.__webglColorRenderbuffer[yt]);const qt=n.get(S[yt]).__webglTexture;e.bindFramebuffer(r.FRAMEBUFFER,At.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+yt,r.TEXTURE_2D,qt,0)}e.bindFramebuffer(r.DRAW_FRAMEBUFFER,At.__webglMultisampledFramebuffer)}else if(A.depthBuffer&&A.resolveDepthBuffer===!1&&l){const S=A.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[S])}}}function et(A){return Math.min(i.maxSamples,A.samples)}function vt(A){const S=n.get(A);return A.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&S.__useRenderToTexture!==!1}function rt(A){const S=o.render.frame;h.get(A)!==S&&(h.set(A,S),A.update())}function Ut(A,S){const F=A.colorSpace,Z=A.format,j=A.type;return A.isCompressedTexture===!0||A.isVideoTexture===!0||F!==ii&&F!==q0&&(Jt.getTransfer(F)===ae?(Z!==$e||j!==F0)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",F)),S}function mt(A){return typeof HTMLImageElement<"u"&&A instanceof HTMLImageElement?(c.width=A.naturalWidth||A.width,c.height=A.naturalHeight||A.height):typeof VideoFrame<"u"&&A instanceof VideoFrame?(c.width=A.displayWidth,c.height=A.displayHeight):(c.width=A.width,c.height=A.height),c}this.allocateTextureUnit=O,this.resetTextureUnits=z,this.setTexture2D=X,this.setTexture2DArray=G,this.setTexture3D=$,this.setTextureCube=H,this.rebindTextures=Rt,this.setupRenderTarget=ie,this.updateRenderTargetMipmap=tt,this.updateMultisampleRenderTarget=Ct,this.setupDepthRenderbuffer=Kt,this.setupFrameBufferTexture=Tt,this.useMultisampledRTT=vt}function du(r,t){function e(n,i=q0){let s;const o=Jt.getTransfer(i);if(n===F0)return r.UNSIGNED_BYTE;if(n===Vo)return r.UNSIGNED_SHORT_4_4_4_4;if(n===Ho)return r.UNSIGNED_SHORT_5_5_5_1;if(n===D1)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===I1)return r.BYTE;if(n===L1)return r.SHORT;if(n===Ni)return r.UNSIGNED_SHORT;if(n===ko)return r.INT;if(n===sn)return r.UNSIGNED_INT;if(n===r0)return r.FLOAT;if(n===ki)return r.HALF_FLOAT;if(n===U1)return r.ALPHA;if(n===N1)return r.RGB;if(n===$e)return r.RGBA;if(n===F1)return r.LUMINANCE;if(n===O1)return r.LUMINANCE_ALPHA;if(n===$n)return r.DEPTH_COMPONENT;if(n===ni)return r.DEPTH_STENCIL;if(n===Go)return r.RED;if(n===Os)return r.RED_INTEGER;if(n===B1)return r.RG;if(n===Wo)return r.RG_INTEGER;if(n===Xo)return r.RGBA_INTEGER;if(n===cs||n===hs||n===us||n===ds)if(o===ae)if(s=t.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===cs)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===hs)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===us)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===ds)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=t.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===cs)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===hs)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===us)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===ds)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===oo||n===ao||n===lo||n===co)if(s=t.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===oo)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===ao)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===lo)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===co)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===ho||n===uo||n===fo)if(s=t.get("WEBGL_compressed_texture_etc"),s!==null){if(n===ho||n===uo)return o===ae?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===fo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===po||n===mo||n===go||n===_o||n===xo||n===yo||n===vo||n===Mo||n===So||n===bo||n===wo||n===Eo||n===To||n===Ao)if(s=t.get("WEBGL_compressed_texture_astc"),s!==null){if(n===po)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===mo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===go)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===_o)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===xo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===yo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===vo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Mo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===So)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===bo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===wo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Eo)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===To)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Ao)return o===ae?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===fs||n===Co||n===Ro)if(s=t.get("EXT_texture_compression_bptc"),s!==null){if(n===fs)return o===ae?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Co)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Ro)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===z1||n===Po||n===Io||n===Lo)if(s=t.get("EXT_texture_compression_rgtc"),s!==null){if(n===fs)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Po)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===Io)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===Lo)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===ei?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:e}}const z7=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,k7=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class V7{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,n){if(this.texture===null){const i=new Me,s=t.properties.get(i);s.__webglTexture=e.texture,(e.depthNear!==n.depthNear||e.depthFar!==n.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new T0({vertexShader:z7,fragmentShader:k7,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new lt(new vn(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class H7 extends B0{constructor(t,e){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=1,c=null,h=null,u=null,d=null,f=null,m=null;const _=new V7,g=e.getContextAttributes();let p=null,v=null;const x=[],y=[],P=new Y;let T=null;const R=new De;R.viewport=new te;const I=new De;I.viewport=new te;const b=[R,I],M=new eu;let L=null,z=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(q){let ot=x[q];return ot===void 0&&(ot=new Yr,x[q]=ot),ot.getTargetRaySpace()},this.getControllerGrip=function(q){let ot=x[q];return ot===void 0&&(ot=new Yr,x[q]=ot),ot.getGripSpace()},this.getHand=function(q){let ot=x[q];return ot===void 0&&(ot=new Yr,x[q]=ot),ot.getHandSpace()};function O(q){const ot=y.indexOf(q.inputSource);if(ot===-1)return;const Tt=x[ot];Tt!==void 0&&(Tt.update(q.inputSource,q.frame,c||o),Tt.dispatchEvent({type:q.type,data:q.inputSource}))}function V(){i.removeEventListener("select",O),i.removeEventListener("selectstart",O),i.removeEventListener("selectend",O),i.removeEventListener("squeeze",O),i.removeEventListener("squeezestart",O),i.removeEventListener("squeezeend",O),i.removeEventListener("end",V),i.removeEventListener("inputsourceschange",X);for(let q=0;q<x.length;q++){const ot=y[q];ot!==null&&(y[q]=null,x[q].disconnect(ot))}L=null,z=null,_.reset(),t.setRenderTarget(p),f=null,d=null,u=null,i=null,v=null,ee.stop(),n.isPresenting=!1,t.setPixelRatio(T),t.setSize(P.width,P.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(q){s=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(q){a=q,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(q){c=q},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return m},this.getSession=function(){return i},this.setSession=async function(q){if(i=q,i!==null){if(p=t.getRenderTarget(),i.addEventListener("select",O),i.addEventListener("selectstart",O),i.addEventListener("selectend",O),i.addEventListener("squeeze",O),i.addEventListener("squeezestart",O),i.addEventListener("squeezeend",O),i.addEventListener("end",V),i.addEventListener("inputsourceschange",X),g.xrCompatible!==!0&&await e.makeXRCompatible(),T=t.getPixelRatio(),t.getSize(P),typeof XRWebGLBinding<"u"&&"createProjectionLayer"in XRWebGLBinding.prototype){let Tt=null,at=null,Pt=null;g.depth&&(Pt=g.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,Tt=g.stencil?ni:$n,at=g.stencil?ei:sn);const Kt={colorFormat:e.RGBA8,depthFormat:Pt,scaleFactor:s};u=new XRWebGLBinding(i,e),d=u.createProjectionLayer(Kt),i.updateRenderState({layers:[d]}),t.setPixelRatio(1),t.setSize(d.textureWidth,d.textureHeight,!1),v=new O0(d.textureWidth,d.textureHeight,{format:$e,type:F0,depthTexture:new Z1(d.textureWidth,d.textureHeight,at,void 0,void 0,void 0,void 0,void 0,void 0,Tt),stencilBuffer:g.stencil,colorSpace:t.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const Tt={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,e,Tt),i.updateRenderState({baseLayer:f}),t.setPixelRatio(1),t.setSize(f.framebufferWidth,f.framebufferHeight,!1),v=new O0(f.framebufferWidth,f.framebufferHeight,{format:$e,type:F0,colorSpace:t.outputColorSpace,stencilBuffer:g.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}v.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),ee.setContext(i),ee.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function X(q){for(let ot=0;ot<q.removed.length;ot++){const Tt=q.removed[ot],at=y.indexOf(Tt);at>=0&&(y[at]=null,x[at].disconnect(Tt))}for(let ot=0;ot<q.added.length;ot++){const Tt=q.added[ot];let at=y.indexOf(Tt);if(at===-1){for(let Kt=0;Kt<x.length;Kt++)if(Kt>=y.length){y.push(Tt),at=Kt;break}else if(y[Kt]===null){y[Kt]=Tt,at=Kt;break}if(at===-1)break}const Pt=x[at];Pt&&Pt.connect(Tt)}}const G=new E,$=new E;function H(q,ot,Tt){G.setFromMatrixPosition(ot.matrixWorld),$.setFromMatrixPosition(Tt.matrixWorld);const at=G.distanceTo($),Pt=ot.projectionMatrix.elements,Kt=Tt.projectionMatrix.elements,Rt=Pt[14]/(Pt[10]-1),ie=Pt[14]/(Pt[10]+1),tt=(Pt[9]+1)/Pt[5],Q=(Pt[9]-1)/Pt[5],C=(Pt[8]-1)/Pt[0],Ct=(Kt[8]+1)/Kt[0],et=Rt*C,vt=Rt*Ct,rt=at/(-C+Ct),Ut=rt*-C;if(ot.matrixWorld.decompose(q.position,q.quaternion,q.scale),q.translateX(Ut),q.translateZ(rt),q.matrixWorld.compose(q.position,q.quaternion,q.scale),q.matrixWorldInverse.copy(q.matrixWorld).invert(),Pt[10]===-1)q.projectionMatrix.copy(ot.projectionMatrix),q.projectionMatrixInverse.copy(ot.projectionMatrixInverse);else{const mt=Rt+rt,A=ie+rt,S=et-Ut,F=vt+(at-Ut),Z=tt*ie/A*mt,j=Q*ie/A*mt;q.projectionMatrix.makePerspective(S,F,Z,j,mt,A),q.projectionMatrixInverse.copy(q.projectionMatrix).invert()}}function nt(q,ot){ot===null?q.matrixWorld.copy(q.matrix):q.matrixWorld.multiplyMatrices(ot.matrixWorld,q.matrix),q.matrixWorldInverse.copy(q.matrixWorld).invert()}this.updateCamera=function(q){if(i===null)return;let ot=q.near,Tt=q.far;_.texture!==null&&(_.depthNear>0&&(ot=_.depthNear),_.depthFar>0&&(Tt=_.depthFar)),M.near=I.near=R.near=ot,M.far=I.far=R.far=Tt,(L!==M.near||z!==M.far)&&(i.updateRenderState({depthNear:M.near,depthFar:M.far}),L=M.near,z=M.far),R.layers.mask=q.layers.mask|2,I.layers.mask=q.layers.mask|4,M.layers.mask=R.layers.mask|I.layers.mask;const at=q.parent,Pt=M.cameras;nt(M,at);for(let Kt=0;Kt<Pt.length;Kt++)nt(Pt[Kt],at);Pt.length===2?H(M,R,I):M.projectionMatrix.copy(R.projectionMatrix),ht(q,M,at)};function ht(q,ot,Tt){Tt===null?q.matrix.copy(ot.matrixWorld):(q.matrix.copy(Tt.matrixWorld),q.matrix.invert(),q.matrix.multiply(ot.matrixWorld)),q.matrix.decompose(q.position,q.quaternion,q.scale),q.updateMatrixWorld(!0),q.projectionMatrix.copy(ot.projectionMatrix),q.projectionMatrixInverse.copy(ot.projectionMatrixInverse),q.isPerspectiveCamera&&(q.fov=Fi*2*Math.atan(1/q.projectionMatrix.elements[5]),q.zoom=1)}this.getCamera=function(){return M},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(q){l=q,d!==null&&(d.fixedFoveation=q),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=q)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(M)};let xt=null;function Nt(q,ot){if(h=ot.getViewerPose(c||o),m=ot,h!==null){const Tt=h.views;f!==null&&(t.setRenderTargetFramebuffer(v,f.framebuffer),t.setRenderTarget(v));let at=!1;Tt.length!==M.cameras.length&&(M.cameras.length=0,at=!0);for(let Rt=0;Rt<Tt.length;Rt++){const ie=Tt[Rt];let tt=null;if(f!==null)tt=f.getViewport(ie);else{const C=u.getViewSubImage(d,ie);tt=C.viewport,Rt===0&&(t.setRenderTargetTextures(v,C.colorTexture,d.ignoreDepthValues?void 0:C.depthStencilTexture),t.setRenderTarget(v))}let Q=b[Rt];Q===void 0&&(Q=new De,Q.layers.enable(Rt),Q.viewport=new te,b[Rt]=Q),Q.matrix.fromArray(ie.transform.matrix),Q.matrix.decompose(Q.position,Q.quaternion,Q.scale),Q.projectionMatrix.fromArray(ie.projectionMatrix),Q.projectionMatrixInverse.copy(Q.projectionMatrix).invert(),Q.viewport.set(tt.x,tt.y,tt.width,tt.height),Rt===0&&(M.matrix.copy(Q.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),at===!0&&M.cameras.push(Q)}const Pt=i.enabledFeatures;if(Pt&&Pt.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&u){const Rt=u.getDepthInformation(Tt[0]);Rt&&Rt.isValid&&Rt.texture&&_.init(t,Rt,i.renderState)}}for(let Tt=0;Tt<x.length;Tt++){const at=y[Tt],Pt=x[Tt];at!==null&&Pt!==void 0&&Pt.update(at,ot,c||o)}xt&&xt(q,ot),ot.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ot}),m=null}const ee=new au;ee.setAnimationLoop(Nt),this.setAnimationLoop=function(q){xt=q},this.dispose=function(){}}}const Fn=new Qe,G7=new Dt;function W7(r,t){function e(g,p){g.matrixAutoUpdate===!0&&g.updateMatrix(),p.value.copy(g.matrix)}function n(g,p){p.color.getRGB(g.fogColor.value,hh(r)),p.isFog?(g.fogNear.value=p.near,g.fogFar.value=p.far):p.isFogExp2&&(g.fogDensity.value=p.density)}function i(g,p,v,x,y){p.isMeshBasicMaterial||p.isMeshLambertMaterial?s(g,p):p.isMeshToonMaterial?(s(g,p),u(g,p)):p.isMeshPhongMaterial?(s(g,p),h(g,p)):p.isMeshStandardMaterial?(s(g,p),d(g,p),p.isMeshPhysicalMaterial&&f(g,p,y)):p.isMeshMatcapMaterial?(s(g,p),m(g,p)):p.isMeshDepthMaterial?s(g,p):p.isMeshDistanceMaterial?(s(g,p),_(g,p)):p.isMeshNormalMaterial?s(g,p):p.isLineBasicMaterial?(o(g,p),p.isLineDashedMaterial&&a(g,p)):p.isPointsMaterial?l(g,p,v,x):p.isSpriteMaterial?c(g,p):p.isShadowMaterial?(g.color.value.copy(p.color),g.opacity.value=p.opacity):p.isShaderMaterial&&(p.uniformsNeedUpdate=!1)}function s(g,p){g.opacity.value=p.opacity,p.color&&g.diffuse.value.copy(p.color),p.emissive&&g.emissive.value.copy(p.emissive).multiplyScalar(p.emissiveIntensity),p.map&&(g.map.value=p.map,e(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,e(p.alphaMap,g.alphaMapTransform)),p.bumpMap&&(g.bumpMap.value=p.bumpMap,e(p.bumpMap,g.bumpMapTransform),g.bumpScale.value=p.bumpScale,p.side===Ke&&(g.bumpScale.value*=-1)),p.normalMap&&(g.normalMap.value=p.normalMap,e(p.normalMap,g.normalMapTransform),g.normalScale.value.copy(p.normalScale),p.side===Ke&&g.normalScale.value.negate()),p.displacementMap&&(g.displacementMap.value=p.displacementMap,e(p.displacementMap,g.displacementMapTransform),g.displacementScale.value=p.displacementScale,g.displacementBias.value=p.displacementBias),p.emissiveMap&&(g.emissiveMap.value=p.emissiveMap,e(p.emissiveMap,g.emissiveMapTransform)),p.specularMap&&(g.specularMap.value=p.specularMap,e(p.specularMap,g.specularMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest);const v=t.get(p),x=v.envMap,y=v.envMapRotation;x&&(g.envMap.value=x,Fn.copy(y),Fn.x*=-1,Fn.y*=-1,Fn.z*=-1,x.isCubeTexture&&x.isRenderTargetTexture===!1&&(Fn.y*=-1,Fn.z*=-1),g.envMapRotation.value.setFromMatrix4(G7.makeRotationFromEuler(Fn)),g.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=p.reflectivity,g.ior.value=p.ior,g.refractionRatio.value=p.refractionRatio),p.lightMap&&(g.lightMap.value=p.lightMap,g.lightMapIntensity.value=p.lightMapIntensity,e(p.lightMap,g.lightMapTransform)),p.aoMap&&(g.aoMap.value=p.aoMap,g.aoMapIntensity.value=p.aoMapIntensity,e(p.aoMap,g.aoMapTransform))}function o(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,p.map&&(g.map.value=p.map,e(p.map,g.mapTransform))}function a(g,p){g.dashSize.value=p.dashSize,g.totalSize.value=p.dashSize+p.gapSize,g.scale.value=p.scale}function l(g,p,v,x){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.size.value=p.size*v,g.scale.value=x*.5,p.map&&(g.map.value=p.map,e(p.map,g.uvTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,e(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function c(g,p){g.diffuse.value.copy(p.color),g.opacity.value=p.opacity,g.rotation.value=p.rotation,p.map&&(g.map.value=p.map,e(p.map,g.mapTransform)),p.alphaMap&&(g.alphaMap.value=p.alphaMap,e(p.alphaMap,g.alphaMapTransform)),p.alphaTest>0&&(g.alphaTest.value=p.alphaTest)}function h(g,p){g.specular.value.copy(p.specular),g.shininess.value=Math.max(p.shininess,1e-4)}function u(g,p){p.gradientMap&&(g.gradientMap.value=p.gradientMap)}function d(g,p){g.metalness.value=p.metalness,p.metalnessMap&&(g.metalnessMap.value=p.metalnessMap,e(p.metalnessMap,g.metalnessMapTransform)),g.roughness.value=p.roughness,p.roughnessMap&&(g.roughnessMap.value=p.roughnessMap,e(p.roughnessMap,g.roughnessMapTransform)),p.envMap&&(g.envMapIntensity.value=p.envMapIntensity)}function f(g,p,v){g.ior.value=p.ior,p.sheen>0&&(g.sheenColor.value.copy(p.sheenColor).multiplyScalar(p.sheen),g.sheenRoughness.value=p.sheenRoughness,p.sheenColorMap&&(g.sheenColorMap.value=p.sheenColorMap,e(p.sheenColorMap,g.sheenColorMapTransform)),p.sheenRoughnessMap&&(g.sheenRoughnessMap.value=p.sheenRoughnessMap,e(p.sheenRoughnessMap,g.sheenRoughnessMapTransform))),p.clearcoat>0&&(g.clearcoat.value=p.clearcoat,g.clearcoatRoughness.value=p.clearcoatRoughness,p.clearcoatMap&&(g.clearcoatMap.value=p.clearcoatMap,e(p.clearcoatMap,g.clearcoatMapTransform)),p.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=p.clearcoatRoughnessMap,e(p.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),p.clearcoatNormalMap&&(g.clearcoatNormalMap.value=p.clearcoatNormalMap,e(p.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(p.clearcoatNormalScale),p.side===Ke&&g.clearcoatNormalScale.value.negate())),p.dispersion>0&&(g.dispersion.value=p.dispersion),p.iridescence>0&&(g.iridescence.value=p.iridescence,g.iridescenceIOR.value=p.iridescenceIOR,g.iridescenceThicknessMinimum.value=p.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=p.iridescenceThicknessRange[1],p.iridescenceMap&&(g.iridescenceMap.value=p.iridescenceMap,e(p.iridescenceMap,g.iridescenceMapTransform)),p.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=p.iridescenceThicknessMap,e(p.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),p.transmission>0&&(g.transmission.value=p.transmission,g.transmissionSamplerMap.value=v.texture,g.transmissionSamplerSize.value.set(v.width,v.height),p.transmissionMap&&(g.transmissionMap.value=p.transmissionMap,e(p.transmissionMap,g.transmissionMapTransform)),g.thickness.value=p.thickness,p.thicknessMap&&(g.thicknessMap.value=p.thicknessMap,e(p.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=p.attenuationDistance,g.attenuationColor.value.copy(p.attenuationColor)),p.anisotropy>0&&(g.anisotropyVector.value.set(p.anisotropy*Math.cos(p.anisotropyRotation),p.anisotropy*Math.sin(p.anisotropyRotation)),p.anisotropyMap&&(g.anisotropyMap.value=p.anisotropyMap,e(p.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=p.specularIntensity,g.specularColor.value.copy(p.specularColor),p.specularColorMap&&(g.specularColorMap.value=p.specularColorMap,e(p.specularColorMap,g.specularColorMapTransform)),p.specularIntensityMap&&(g.specularIntensityMap.value=p.specularIntensityMap,e(p.specularIntensityMap,g.specularIntensityMapTransform))}function m(g,p){p.matcap&&(g.matcap.value=p.matcap)}function _(g,p){const v=t.get(p).light;g.referencePosition.value.setFromMatrixPosition(v.matrixWorld),g.nearDistance.value=v.shadow.camera.near,g.farDistance.value=v.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function X7(r,t,e,n){let i={},s={},o=[];const a=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function l(v,x){const y=x.program;n.uniformBlockBinding(v,y)}function c(v,x){let y=i[v.id];y===void 0&&(m(v),y=h(v),i[v.id]=y,v.addEventListener("dispose",g));const P=x.program;n.updateUBOMapping(v,P);const T=t.render.frame;s[v.id]!==T&&(d(v),s[v.id]=T)}function h(v){const x=u();v.__bindingPointIndex=x;const y=r.createBuffer(),P=v.__size,T=v.usage;return r.bindBuffer(r.UNIFORM_BUFFER,y),r.bufferData(r.UNIFORM_BUFFER,P,T),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,x,y),y}function u(){for(let v=0;v<a;v++)if(o.indexOf(v)===-1)return o.push(v),v;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(v){const x=i[v.id],y=v.uniforms,P=v.__cache;r.bindBuffer(r.UNIFORM_BUFFER,x);for(let T=0,R=y.length;T<R;T++){const I=Array.isArray(y[T])?y[T]:[y[T]];for(let b=0,M=I.length;b<M;b++){const L=I[b];if(f(L,T,b,P)===!0){const z=L.__offset,O=Array.isArray(L.value)?L.value:[L.value];let V=0;for(let X=0;X<O.length;X++){const G=O[X],$=_(G);typeof G=="number"||typeof G=="boolean"?(L.__data[0]=G,r.bufferSubData(r.UNIFORM_BUFFER,z+V,L.__data)):G.isMatrix3?(L.__data[0]=G.elements[0],L.__data[1]=G.elements[1],L.__data[2]=G.elements[2],L.__data[3]=0,L.__data[4]=G.elements[3],L.__data[5]=G.elements[4],L.__data[6]=G.elements[5],L.__data[7]=0,L.__data[8]=G.elements[6],L.__data[9]=G.elements[7],L.__data[10]=G.elements[8],L.__data[11]=0):(G.toArray(L.__data,V),V+=$.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,z,L.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(v,x,y,P){const T=v.value,R=x+"_"+y;if(P[R]===void 0)return typeof T=="number"||typeof T=="boolean"?P[R]=T:P[R]=T.clone(),!0;{const I=P[R];if(typeof T=="number"||typeof T=="boolean"){if(I!==T)return P[R]=T,!0}else if(I.equals(T)===!1)return I.copy(T),!0}return!1}function m(v){const x=v.uniforms;let y=0;const P=16;for(let R=0,I=x.length;R<I;R++){const b=Array.isArray(x[R])?x[R]:[x[R]];for(let M=0,L=b.length;M<L;M++){const z=b[M],O=Array.isArray(z.value)?z.value:[z.value];for(let V=0,X=O.length;V<X;V++){const G=O[V],$=_(G),H=y%P,nt=H%$.boundary,ht=H+nt;y+=nt,ht!==0&&P-ht<$.storage&&(y+=P-ht),z.__data=new Float32Array($.storage/Float32Array.BYTES_PER_ELEMENT),z.__offset=y,y+=$.storage}}}const T=y%P;return T>0&&(y+=P-T),v.__size=y,v.__cache={},this}function _(v){const x={boundary:0,storage:0};return typeof v=="number"||typeof v=="boolean"?(x.boundary=4,x.storage=4):v.isVector2?(x.boundary=8,x.storage=8):v.isVector3||v.isColor?(x.boundary=16,x.storage=12):v.isVector4?(x.boundary=16,x.storage=16):v.isMatrix3?(x.boundary=48,x.storage=48):v.isMatrix4?(x.boundary=64,x.storage=64):v.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",v),x}function g(v){const x=v.target;x.removeEventListener("dispose",g);const y=o.indexOf(x.__bindingPointIndex);o.splice(y,1),r.deleteBuffer(i[x.id]),delete i[x.id],delete s[x.id]}function p(){for(const v in i)r.deleteBuffer(i[v]);o=[],i={},s={}}return{bind:l,update:c,dispose:p}}class fu{constructor(t={}){const{canvas:e=ah(),context:n=null,depth:i=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1,reverseDepthBuffer:d=!1}=t;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const m=new Uint32Array(4),_=new Int32Array(4);let g=null,p=null;const v=[],x=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=Ze,this.toneMapping=Q0,this.toneMappingExposure=1;const y=this;let P=!1,T=0,R=0,I=null,b=-1,M=null;const L=new te,z=new te;let O=null;const V=new dt(0);let X=0,G=e.width,$=e.height,H=1,nt=null,ht=null;const xt=new te(0,0,G,$),Nt=new te(0,0,G,$);let ee=!1;const q=new ks;let ot=!1,Tt=!1;this.transmissionResolutionScale=1;const at=new Dt,Pt=new Dt,Kt=new E,Rt=new te,ie={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let tt=!1;function Q(){return I===null?H:1}let C=n;function Ct(w,U){return e.getContext(w,U)}try{const w={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Bo}`),e.addEventListener("webglcontextlost",K,!1),e.addEventListener("webglcontextrestored",_t,!1),e.addEventListener("webglcontextcreationerror",gt,!1),C===null){const U="webgl2";if(C=Ct(U,w),C===null)throw Ct(U)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(w){throw console.error("THREE.WebGLRenderer: "+w.message),w}let et,vt,rt,Ut,mt,A,S,F,Z,j,J,At,ut,yt,qt,st,bt,Ft,Ot,wt,$t,Yt,ue,D;function ft(){et=new ip(C),et.init(),Yt=new du(C,et),vt=new $6(C,et,t,Yt),rt=new O7(C,et),vt.reverseDepthBuffer&&d&&rt.buffers.depth.setReversed(!0),Ut=new op(C),mt=new w7,A=new B7(C,et,rt,mt,vt,Yt,Ut),S=new j6(y),F=new np(y),Z=new df(C),ue=new Z6(C,Z),j=new sp(C,Z,Ut,ue),J=new lp(C,j,Z,Ut),Ot=new ap(C,vt,A),st=new K6(mt),At=new b7(y,S,F,et,vt,ue,st),ut=new W7(y,mt),yt=new T7,qt=new L7(et),Ft=new q6(y,S,F,rt,J,f,l),bt=new N7(y,J,vt),D=new X7(C,Ut,vt,rt),wt=new J6(C,et,Ut),$t=new rp(C,et,Ut),Ut.programs=At.programs,y.capabilities=vt,y.extensions=et,y.properties=mt,y.renderLists=yt,y.shadowMap=bt,y.state=rt,y.info=Ut}ft();const W=new H7(y,C);this.xr=W,this.getContext=function(){return C},this.getContextAttributes=function(){return C.getContextAttributes()},this.forceContextLoss=function(){const w=et.get("WEBGL_lose_context");w&&w.loseContext()},this.forceContextRestore=function(){const w=et.get("WEBGL_lose_context");w&&w.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(w){w!==void 0&&(H=w,this.setSize(G,$,!1))},this.getSize=function(w){return w.set(G,$)},this.setSize=function(w,U,B=!0){if(W.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}G=w,$=U,e.width=Math.floor(w*H),e.height=Math.floor(U*H),B===!0&&(e.style.width=w+"px",e.style.height=U+"px"),this.setViewport(0,0,w,U)},this.getDrawingBufferSize=function(w){return w.set(G*H,$*H).floor()},this.setDrawingBufferSize=function(w,U,B){G=w,$=U,H=B,e.width=Math.floor(w*B),e.height=Math.floor(U*B),this.setViewport(0,0,w,U)},this.getCurrentViewport=function(w){return w.copy(L)},this.getViewport=function(w){return w.copy(xt)},this.setViewport=function(w,U,B,k){w.isVector4?xt.set(w.x,w.y,w.z,w.w):xt.set(w,U,B,k),rt.viewport(L.copy(xt).multiplyScalar(H).round())},this.getScissor=function(w){return w.copy(Nt)},this.setScissor=function(w,U,B,k){w.isVector4?Nt.set(w.x,w.y,w.z,w.w):Nt.set(w,U,B,k),rt.scissor(z.copy(Nt).multiplyScalar(H).round())},this.getScissorTest=function(){return ee},this.setScissorTest=function(w){rt.setScissorTest(ee=w)},this.setOpaqueSort=function(w){nt=w},this.setTransparentSort=function(w){ht=w},this.getClearColor=function(w){return w.copy(Ft.getClearColor())},this.setClearColor=function(){Ft.setClearColor(...arguments)},this.getClearAlpha=function(){return Ft.getClearAlpha()},this.setClearAlpha=function(){Ft.setClearAlpha(...arguments)},this.clear=function(w=!0,U=!0,B=!0){let k=0;if(w){let N=!1;if(I!==null){const it=I.texture.format;N=it===Xo||it===Wo||it===Os}if(N){const it=I.texture.type,pt=it===F0||it===sn||it===Ni||it===ei||it===Vo||it===Ho,Mt=Ft.getClearColor(),Et=Ft.getClearAlpha(),Bt=Mt.r,zt=Mt.g,It=Mt.b;pt?(m[0]=Bt,m[1]=zt,m[2]=It,m[3]=Et,C.clearBufferuiv(C.COLOR,0,m)):(_[0]=Bt,_[1]=zt,_[2]=It,_[3]=Et,C.clearBufferiv(C.COLOR,0,_))}else k|=C.COLOR_BUFFER_BIT}U&&(k|=C.DEPTH_BUFFER_BIT),B&&(k|=C.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),C.clear(k)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",K,!1),e.removeEventListener("webglcontextrestored",_t,!1),e.removeEventListener("webglcontextcreationerror",gt,!1),Ft.dispose(),yt.dispose(),qt.dispose(),mt.dispose(),S.dispose(),F.dispose(),J.dispose(),ue.dispose(),D.dispose(),At.dispose(),W.dispose(),W.removeEventListener("sessionstart",Sl),W.removeEventListener("sessionend",bl),Sn.stop()};function K(w){w.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),P=!0}function _t(){console.log("THREE.WebGLRenderer: Context Restored."),P=!1;const w=Ut.autoReset,U=bt.enabled,B=bt.autoUpdate,k=bt.needsUpdate,N=bt.type;ft(),Ut.autoReset=w,bt.enabled=U,bt.autoUpdate=B,bt.needsUpdate=k,bt.type=N}function gt(w){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",w.statusMessage)}function Wt(w){const U=w.target;U.removeEventListener("dispose",Wt),_e(U)}function _e(w){Oe(w),mt.remove(w)}function Oe(w){const U=mt.get(w).programs;U!==void 0&&(U.forEach(function(B){At.releaseProgram(B)}),w.isShaderMaterial&&At.releaseShaderCache(w))}this.renderBufferDirect=function(w,U,B,k,N,it){U===null&&(U=ie);const pt=N.isMesh&&N.matrixWorld.determinant()<0,Mt=Au(w,U,B,k,N);rt.setMaterial(k,pt);let Et=B.index,Bt=1;if(k.wireframe===!0){if(Et=j.getWireframeAttribute(B),Et===void 0)return;Bt=2}const zt=B.drawRange,It=B.attributes.position;let jt=zt.start*Bt,se=(zt.start+zt.count)*Bt;it!==null&&(jt=Math.max(jt,it.start*Bt),se=Math.min(se,(it.start+it.count)*Bt)),Et!==null?(jt=Math.max(jt,0),se=Math.min(se,Et.count)):It!=null&&(jt=Math.max(jt,0),se=Math.min(se,It.count));const we=se-jt;if(we<0||we===1/0)return;ue.setup(N,k,Mt,B,Et);let xe,ne=wt;if(Et!==null&&(xe=Z.get(Et),ne=$t,ne.setIndex(xe)),N.isMesh)k.wireframe===!0?(rt.setLineWidth(k.wireframeLinewidth*Q()),ne.setMode(C.LINES)):ne.setMode(C.TRIANGLES);else if(N.isLine){let Lt=k.linewidth;Lt===void 0&&(Lt=1),rt.setLineWidth(Lt*Q()),N.isLineSegments?ne.setMode(C.LINES):N.isLineLoop?ne.setMode(C.LINE_LOOP):ne.setMode(C.LINE_STRIP)}else N.isPoints?ne.setMode(C.POINTS):N.isSprite&&ne.setMode(C.TRIANGLES);if(N.isBatchedMesh)if(N._multiDrawInstances!==null)zn("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),ne.renderMultiDrawInstances(N._multiDrawStarts,N._multiDrawCounts,N._multiDrawCount,N._multiDrawInstances);else if(et.get("WEBGL_multi_draw"))ne.renderMultiDraw(N._multiDrawStarts,N._multiDrawCounts,N._multiDrawCount);else{const Lt=N._multiDrawStarts,Ue=N._multiDrawCounts,re=N._multiDrawCount,_0=Et?Z.get(Et).bytesPerElement:1,ci=mt.get(k).currentProgram.getUniforms();for(let a0=0;a0<re;a0++)ci.setValue(C,"_gl_DrawID",a0),ne.render(Lt[a0]/_0,Ue[a0])}else if(N.isInstancedMesh)ne.renderInstances(jt,we,N.count);else if(B.isInstancedBufferGeometry){const Lt=B._maxInstanceCount!==void 0?B._maxInstanceCount:1/0,Ue=Math.min(B.instanceCount,Lt);ne.renderInstances(jt,we,Ue)}else ne.render(jt,we)};function oe(w,U,B){w.transparent===!0&&w.side===b0&&w.forceSinglePass===!1?(w.side=Ke,w.needsUpdate=!0,qs(w,U,B),w.side=en,w.needsUpdate=!0,qs(w,U,B),w.side=b0):qs(w,U,B)}this.compile=function(w,U,B=null){B===null&&(B=w),p=qt.get(B),p.init(U),x.push(p),B.traverseVisible(function(N){N.isLight&&N.layers.test(U.layers)&&(p.pushLight(N),N.castShadow&&p.pushShadow(N))}),w!==B&&w.traverseVisible(function(N){N.isLight&&N.layers.test(U.layers)&&(p.pushLight(N),N.castShadow&&p.pushShadow(N))}),p.setupLights();const k=new Set;return w.traverse(function(N){if(!(N.isMesh||N.isPoints||N.isLine||N.isSprite))return;const it=N.material;if(it)if(Array.isArray(it))for(let pt=0;pt<it.length;pt++){const Mt=it[pt];oe(Mt,B,N),k.add(Mt)}else oe(it,B,N),k.add(it)}),p=x.pop(),k},this.compileAsync=function(w,U,B=null){const k=this.compile(w,U,B);return new Promise(N=>{function it(){if(k.forEach(function(pt){mt.get(pt).currentProgram.isReady()&&k.delete(pt)}),k.size===0){N(w);return}setTimeout(it,10)}et.get("KHR_parallel_shader_compile")!==null?it():setTimeout(it,10)})};let g0=null;function z0(w){g0&&g0(w)}function Sl(){Sn.stop()}function bl(){Sn.start()}const Sn=new au;Sn.setAnimationLoop(z0),typeof self<"u"&&Sn.setContext(self),this.setAnimationLoop=function(w){g0=w,W.setAnimationLoop(w),w===null?Sn.stop():Sn.start()},W.addEventListener("sessionstart",Sl),W.addEventListener("sessionend",bl),this.render=function(w,U){if(U!==void 0&&U.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(P===!0)return;if(w.matrixWorldAutoUpdate===!0&&w.updateMatrixWorld(),U.parent===null&&U.matrixWorldAutoUpdate===!0&&U.updateMatrixWorld(),W.enabled===!0&&W.isPresenting===!0&&(W.cameraAutoUpdate===!0&&W.updateCamera(U),U=W.getCamera()),w.isScene===!0&&w.onBeforeRender(y,w,U,I),p=qt.get(w,x.length),p.init(U),x.push(p),Pt.multiplyMatrices(U.projectionMatrix,U.matrixWorldInverse),q.setFromProjectionMatrix(Pt),Tt=this.localClippingEnabled,ot=st.init(this.clippingPlanes,Tt),g=yt.get(w,v.length),g.init(),v.push(g),W.enabled===!0&&W.isPresenting===!0){const it=y.xr.getDepthSensingMesh();it!==null&&ga(it,U,-1/0,y.sortObjects)}ga(w,U,0,y.sortObjects),g.finish(),y.sortObjects===!0&&g.sort(nt,ht),tt=W.enabled===!1||W.isPresenting===!1||W.hasDepthSensing()===!1,tt&&Ft.addToRenderList(g,w),this.info.render.frame++,ot===!0&&st.beginShadows();const B=p.state.shadowsArray;bt.render(B,w,U),ot===!0&&st.endShadows(),this.info.autoReset===!0&&this.info.reset();const k=g.opaque,N=g.transmissive;if(p.setupLights(),U.isArrayCamera){const it=U.cameras;if(N.length>0)for(let pt=0,Mt=it.length;pt<Mt;pt++){const Et=it[pt];El(k,N,w,Et)}tt&&Ft.render(w);for(let pt=0,Mt=it.length;pt<Mt;pt++){const Et=it[pt];wl(g,w,Et,Et.viewport)}}else N.length>0&&El(k,N,w,U),tt&&Ft.render(w),wl(g,w,U);I!==null&&R===0&&(A.updateMultisampleRenderTarget(I),A.updateRenderTargetMipmap(I)),w.isScene===!0&&w.onAfterRender(y,w,U),ue.resetDefaultState(),b=-1,M=null,x.pop(),x.length>0?(p=x[x.length-1],ot===!0&&st.setGlobalState(y.clippingPlanes,p.state.camera)):p=null,v.pop(),v.length>0?g=v[v.length-1]:g=null};function ga(w,U,B,k){if(w.visible===!1)return;if(w.layers.test(U.layers)){if(w.isGroup)B=w.renderOrder;else if(w.isLOD)w.autoUpdate===!0&&w.update(U);else if(w.isLight)p.pushLight(w),w.castShadow&&p.pushShadow(w);else if(w.isSprite){if(!w.frustumCulled||q.intersectsSprite(w)){k&&Rt.setFromMatrixPosition(w.matrixWorld).applyMatrix4(Pt);const pt=J.update(w),Mt=w.material;Mt.visible&&g.push(w,pt,Mt,B,Rt.z,null)}}else if((w.isMesh||w.isLine||w.isPoints)&&(!w.frustumCulled||q.intersectsObject(w))){const pt=J.update(w),Mt=w.material;if(k&&(w.boundingSphere!==void 0?(w.boundingSphere===null&&w.computeBoundingSphere(),Rt.copy(w.boundingSphere.center)):(pt.boundingSphere===null&&pt.computeBoundingSphere(),Rt.copy(pt.boundingSphere.center)),Rt.applyMatrix4(w.matrixWorld).applyMatrix4(Pt)),Array.isArray(Mt)){const Et=pt.groups;for(let Bt=0,zt=Et.length;Bt<zt;Bt++){const It=Et[Bt],jt=Mt[It.materialIndex];jt&&jt.visible&&g.push(w,pt,jt,B,Rt.z,It)}}else Mt.visible&&g.push(w,pt,Mt,B,Rt.z,null)}}const it=w.children;for(let pt=0,Mt=it.length;pt<Mt;pt++)ga(it[pt],U,B,k)}function wl(w,U,B,k){const N=w.opaque,it=w.transmissive,pt=w.transparent;p.setupLightsView(B),ot===!0&&st.setGlobalState(y.clippingPlanes,B),k&&rt.viewport(L.copy(k)),N.length>0&&Ys(N,U,B),it.length>0&&Ys(it,U,B),pt.length>0&&Ys(pt,U,B),rt.buffers.depth.setTest(!0),rt.buffers.depth.setMask(!0),rt.buffers.color.setMask(!0),rt.setPolygonOffset(!1)}function El(w,U,B,k){if((B.isScene===!0?B.overrideMaterial:null)!==null)return;p.state.transmissionRenderTarget[k.id]===void 0&&(p.state.transmissionRenderTarget[k.id]=new O0(1,1,{generateMipmaps:!0,type:et.has("EXT_color_buffer_half_float")||et.has("EXT_color_buffer_float")?ki:F0,minFilter:U0,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Jt.workingColorSpace}));const it=p.state.transmissionRenderTarget[k.id],pt=k.viewport||L;it.setSize(pt.z*y.transmissionResolutionScale,pt.w*y.transmissionResolutionScale);const Mt=y.getRenderTarget();y.setRenderTarget(it),y.getClearColor(V),X=y.getClearAlpha(),X<1&&y.setClearColor(16777215,.5),y.clear(),tt&&Ft.render(B);const Et=y.toneMapping;y.toneMapping=Q0;const Bt=k.viewport;if(k.viewport!==void 0&&(k.viewport=void 0),p.setupLightsView(k),ot===!0&&st.setGlobalState(y.clippingPlanes,k),Ys(w,B,k),A.updateMultisampleRenderTarget(it),A.updateRenderTargetMipmap(it),et.has("WEBGL_multisampled_render_to_texture")===!1){let zt=!1;for(let It=0,jt=U.length;It<jt;It++){const se=U[It],we=se.object,xe=se.geometry,ne=se.material,Lt=se.group;if(ne.side===b0&&we.layers.test(k.layers)){const Ue=ne.side;ne.side=Ke,ne.needsUpdate=!0,Tl(we,B,k,xe,ne,Lt),ne.side=Ue,ne.needsUpdate=!0,zt=!0}}zt===!0&&(A.updateMultisampleRenderTarget(it),A.updateRenderTargetMipmap(it))}y.setRenderTarget(Mt),y.setClearColor(V,X),Bt!==void 0&&(k.viewport=Bt),y.toneMapping=Et}function Ys(w,U,B){const k=U.isScene===!0?U.overrideMaterial:null;for(let N=0,it=w.length;N<it;N++){const pt=w[N],Mt=pt.object,Et=pt.geometry,Bt=k===null?pt.material:k,zt=pt.group;Mt.layers.test(B.layers)&&Tl(Mt,U,B,Et,Bt,zt)}}function Tl(w,U,B,k,N,it){w.onBeforeRender(y,U,B,k,N,it),w.modelViewMatrix.multiplyMatrices(B.matrixWorldInverse,w.matrixWorld),w.normalMatrix.getNormalMatrix(w.modelViewMatrix),N.onBeforeRender(y,U,B,k,w,it),N.transparent===!0&&N.side===b0&&N.forceSinglePass===!1?(N.side=Ke,N.needsUpdate=!0,y.renderBufferDirect(B,U,k,N,w,it),N.side=en,N.needsUpdate=!0,y.renderBufferDirect(B,U,k,N,w,it),N.side=b0):y.renderBufferDirect(B,U,k,N,w,it),w.onAfterRender(y,U,B,k,N,it)}function qs(w,U,B){U.isScene!==!0&&(U=ie);const k=mt.get(w),N=p.state.lights,it=p.state.shadowsArray,pt=N.state.version,Mt=At.getParameters(w,N.state,it,U,B),Et=At.getProgramCacheKey(Mt);let Bt=k.programs;k.environment=w.isMeshStandardMaterial?U.environment:null,k.fog=U.fog,k.envMap=(w.isMeshStandardMaterial?F:S).get(w.envMap||k.environment),k.envMapRotation=k.environment!==null&&w.envMap===null?U.environmentRotation:w.envMapRotation,Bt===void 0&&(w.addEventListener("dispose",Wt),Bt=new Map,k.programs=Bt);let zt=Bt.get(Et);if(zt!==void 0){if(k.currentProgram===zt&&k.lightsStateVersion===pt)return Cl(w,Mt),zt}else Mt.uniforms=At.getUniforms(w),w.onBeforeCompile(Mt,y),zt=At.acquireProgram(Mt,Et),Bt.set(Et,zt),k.uniforms=Mt.uniforms;const It=k.uniforms;return(!w.isShaderMaterial&&!w.isRawShaderMaterial||w.clipping===!0)&&(It.clippingPlanes=st.uniform),Cl(w,Mt),k.needsLights=Ru(w),k.lightsStateVersion=pt,k.needsLights&&(It.ambientLightColor.value=N.state.ambient,It.lightProbe.value=N.state.probe,It.directionalLights.value=N.state.directional,It.directionalLightShadows.value=N.state.directionalShadow,It.spotLights.value=N.state.spot,It.spotLightShadows.value=N.state.spotShadow,It.rectAreaLights.value=N.state.rectArea,It.ltc_1.value=N.state.rectAreaLTC1,It.ltc_2.value=N.state.rectAreaLTC2,It.pointLights.value=N.state.point,It.pointLightShadows.value=N.state.pointShadow,It.hemisphereLights.value=N.state.hemi,It.directionalShadowMap.value=N.state.directionalShadowMap,It.directionalShadowMatrix.value=N.state.directionalShadowMatrix,It.spotShadowMap.value=N.state.spotShadowMap,It.spotLightMatrix.value=N.state.spotLightMatrix,It.spotLightMap.value=N.state.spotLightMap,It.pointShadowMap.value=N.state.pointShadowMap,It.pointShadowMatrix.value=N.state.pointShadowMatrix),k.currentProgram=zt,k.uniformsList=null,zt}function Al(w){if(w.uniformsList===null){const U=w.currentProgram.getUniforms();w.uniformsList=qr.seqWithValue(U.seq,w.uniforms)}return w.uniformsList}function Cl(w,U){const B=mt.get(w);B.outputColorSpace=U.outputColorSpace,B.batching=U.batching,B.batchingColor=U.batchingColor,B.instancing=U.instancing,B.instancingColor=U.instancingColor,B.instancingMorph=U.instancingMorph,B.skinning=U.skinning,B.morphTargets=U.morphTargets,B.morphNormals=U.morphNormals,B.morphColors=U.morphColors,B.morphTargetsCount=U.morphTargetsCount,B.numClippingPlanes=U.numClippingPlanes,B.numIntersection=U.numClipIntersection,B.vertexAlphas=U.vertexAlphas,B.vertexTangents=U.vertexTangents,B.toneMapping=U.toneMapping}function Au(w,U,B,k,N){U.isScene!==!0&&(U=ie),A.resetTextureUnits();const it=U.fog,pt=k.isMeshStandardMaterial?U.environment:null,Mt=I===null?y.outputColorSpace:I.isXRRenderTarget===!0?I.texture.colorSpace:ii,Et=(k.isMeshStandardMaterial?F:S).get(k.envMap||pt),Bt=k.vertexColors===!0&&!!B.attributes.color&&B.attributes.color.itemSize===4,zt=!!B.attributes.tangent&&(!!k.normalMap||k.anisotropy>0),It=!!B.morphAttributes.position,jt=!!B.morphAttributes.normal,se=!!B.morphAttributes.color;let we=Q0;k.toneMapped&&(I===null||I.isXRRenderTarget===!0)&&(we=y.toneMapping);const xe=B.morphAttributes.position||B.morphAttributes.normal||B.morphAttributes.color,ne=xe!==void 0?xe.length:0,Lt=mt.get(k),Ue=p.state.lights;if(ot===!0&&(Tt===!0||w!==M)){const Xe=w===M&&k.id===b;st.setState(k,w,Xe)}let re=!1;k.version===Lt.__version?(Lt.needsLights&&Lt.lightsStateVersion!==Ue.state.version||Lt.outputColorSpace!==Mt||N.isBatchedMesh&&Lt.batching===!1||!N.isBatchedMesh&&Lt.batching===!0||N.isBatchedMesh&&Lt.batchingColor===!0&&N.colorTexture===null||N.isBatchedMesh&&Lt.batchingColor===!1&&N.colorTexture!==null||N.isInstancedMesh&&Lt.instancing===!1||!N.isInstancedMesh&&Lt.instancing===!0||N.isSkinnedMesh&&Lt.skinning===!1||!N.isSkinnedMesh&&Lt.skinning===!0||N.isInstancedMesh&&Lt.instancingColor===!0&&N.instanceColor===null||N.isInstancedMesh&&Lt.instancingColor===!1&&N.instanceColor!==null||N.isInstancedMesh&&Lt.instancingMorph===!0&&N.morphTexture===null||N.isInstancedMesh&&Lt.instancingMorph===!1&&N.morphTexture!==null||Lt.envMap!==Et||k.fog===!0&&Lt.fog!==it||Lt.numClippingPlanes!==void 0&&(Lt.numClippingPlanes!==st.numPlanes||Lt.numIntersection!==st.numIntersection)||Lt.vertexAlphas!==Bt||Lt.vertexTangents!==zt||Lt.morphTargets!==It||Lt.morphNormals!==jt||Lt.morphColors!==se||Lt.toneMapping!==we||Lt.morphTargetsCount!==ne)&&(re=!0):(re=!0,Lt.__version=k.version);let _0=Lt.currentProgram;re===!0&&(_0=qs(k,U,N));let ci=!1,a0=!1,Gi=!1;const pe=_0.getUniforms(),d0=Lt.uniforms;if(rt.useProgram(_0.program)&&(ci=!0,a0=!0,Gi=!0),k.id!==b&&(b=k.id,a0=!0),ci||M!==w){rt.buffers.depth.getReversed()?(at.copy(w.projectionMatrix),N3(at),F3(at),pe.setValue(C,"projectionMatrix",at)):pe.setValue(C,"projectionMatrix",w.projectionMatrix),pe.setValue(C,"viewMatrix",w.matrixWorldInverse);const t0=pe.map.cameraPosition;t0!==void 0&&t0.setValue(C,Kt.setFromMatrixPosition(w.matrixWorld)),vt.logarithmicDepthBuffer&&pe.setValue(C,"logDepthBufFC",2/(Math.log(w.far+1)/Math.LN2)),(k.isMeshPhongMaterial||k.isMeshToonMaterial||k.isMeshLambertMaterial||k.isMeshBasicMaterial||k.isMeshStandardMaterial||k.isShaderMaterial)&&pe.setValue(C,"isOrthographic",w.isOrthographicCamera===!0),M!==w&&(M=w,a0=!0,Gi=!0)}if(N.isSkinnedMesh){pe.setOptional(C,N,"bindMatrix"),pe.setOptional(C,N,"bindMatrixInverse");const Xe=N.skeleton;Xe&&(Xe.boneTexture===null&&Xe.computeBoneTexture(),pe.setValue(C,"boneTexture",Xe.boneTexture,A))}N.isBatchedMesh&&(pe.setOptional(C,N,"batchingTexture"),pe.setValue(C,"batchingTexture",N._matricesTexture,A),pe.setOptional(C,N,"batchingIdTexture"),pe.setValue(C,"batchingIdTexture",N._indirectTexture,A),pe.setOptional(C,N,"batchingColorTexture"),N._colorsTexture!==null&&pe.setValue(C,"batchingColorTexture",N._colorsTexture,A));const f0=B.morphAttributes;if((f0.position!==void 0||f0.normal!==void 0||f0.color!==void 0)&&Ot.update(N,B,_0),(a0||Lt.receiveShadow!==N.receiveShadow)&&(Lt.receiveShadow=N.receiveShadow,pe.setValue(C,"receiveShadow",N.receiveShadow)),k.isMeshGouraudMaterial&&k.envMap!==null&&(d0.envMap.value=Et,d0.flipEnvMap.value=Et.isCubeTexture&&Et.isRenderTargetTexture===!1?-1:1),k.isMeshStandardMaterial&&k.envMap===null&&U.environment!==null&&(d0.envMapIntensity.value=U.environmentIntensity),a0&&(pe.setValue(C,"toneMappingExposure",y.toneMappingExposure),Lt.needsLights&&Cu(d0,Gi),it&&k.fog===!0&&ut.refreshFogUniforms(d0,it),ut.refreshMaterialUniforms(d0,k,H,$,p.state.transmissionRenderTarget[w.id]),qr.upload(C,Al(Lt),d0,A)),k.isShaderMaterial&&k.uniformsNeedUpdate===!0&&(qr.upload(C,Al(Lt),d0,A),k.uniformsNeedUpdate=!1),k.isSpriteMaterial&&pe.setValue(C,"center",N.center),pe.setValue(C,"modelViewMatrix",N.modelViewMatrix),pe.setValue(C,"normalMatrix",N.normalMatrix),pe.setValue(C,"modelMatrix",N.matrixWorld),k.isShaderMaterial||k.isRawShaderMaterial){const Xe=k.uniformsGroups;for(let t0=0,_a=Xe.length;t0<_a;t0++){const bn=Xe[t0];D.update(bn,_0),D.bind(bn,_0)}}return _0}function Cu(w,U){w.ambientLightColor.needsUpdate=U,w.lightProbe.needsUpdate=U,w.directionalLights.needsUpdate=U,w.directionalLightShadows.needsUpdate=U,w.pointLights.needsUpdate=U,w.pointLightShadows.needsUpdate=U,w.spotLights.needsUpdate=U,w.spotLightShadows.needsUpdate=U,w.rectAreaLights.needsUpdate=U,w.hemisphereLights.needsUpdate=U}function Ru(w){return w.isMeshLambertMaterial||w.isMeshToonMaterial||w.isMeshPhongMaterial||w.isMeshStandardMaterial||w.isShadowMaterial||w.isShaderMaterial&&w.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return R},this.getRenderTarget=function(){return I},this.setRenderTargetTextures=function(w,U,B){mt.get(w.texture).__webglTexture=U,mt.get(w.depthTexture).__webglTexture=B;const k=mt.get(w);k.__hasExternalTextures=!0,k.__autoAllocateDepthBuffer=B===void 0,k.__autoAllocateDepthBuffer||et.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),k.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(w,U){const B=mt.get(w);B.__webglFramebuffer=U,B.__useDefaultFramebuffer=U===void 0};const Pu=C.createFramebuffer();this.setRenderTarget=function(w,U=0,B=0){I=w,T=U,R=B;let k=!0,N=null,it=!1,pt=!1;if(w){const Et=mt.get(w);if(Et.__useDefaultFramebuffer!==void 0)rt.bindFramebuffer(C.FRAMEBUFFER,null),k=!1;else if(Et.__webglFramebuffer===void 0)A.setupRenderTarget(w);else if(Et.__hasExternalTextures)A.rebindTextures(w,mt.get(w.texture).__webglTexture,mt.get(w.depthTexture).__webglTexture);else if(w.depthBuffer){const It=w.depthTexture;if(Et.__boundDepthTexture!==It){if(It!==null&&mt.has(It)&&(w.width!==It.image.width||w.height!==It.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");A.setupDepthRenderbuffer(w)}}const Bt=w.texture;(Bt.isData3DTexture||Bt.isDataArrayTexture||Bt.isCompressedArrayTexture)&&(pt=!0);const zt=mt.get(w).__webglFramebuffer;w.isWebGLCubeRenderTarget?(Array.isArray(zt[U])?N=zt[U][B]:N=zt[U],it=!0):w.samples>0&&A.useMultisampledRTT(w)===!1?N=mt.get(w).__webglMultisampledFramebuffer:Array.isArray(zt)?N=zt[B]:N=zt,L.copy(w.viewport),z.copy(w.scissor),O=w.scissorTest}else L.copy(xt).multiplyScalar(H).floor(),z.copy(Nt).multiplyScalar(H).floor(),O=ee;if(B!==0&&(N=Pu),rt.bindFramebuffer(C.FRAMEBUFFER,N)&&k&&rt.drawBuffers(w,N),rt.viewport(L),rt.scissor(z),rt.setScissorTest(O),it){const Et=mt.get(w.texture);C.framebufferTexture2D(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_CUBE_MAP_POSITIVE_X+U,Et.__webglTexture,B)}else if(pt){const Et=mt.get(w.texture),Bt=U;C.framebufferTextureLayer(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,Et.__webglTexture,B,Bt)}else if(w!==null&&B!==0){const Et=mt.get(w.texture);C.framebufferTexture2D(C.FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,Et.__webglTexture,B)}b=-1},this.readRenderTargetPixels=function(w,U,B,k,N,it,pt){if(!(w&&w.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Mt=mt.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&pt!==void 0&&(Mt=Mt[pt]),Mt){rt.bindFramebuffer(C.FRAMEBUFFER,Mt);try{const Et=w.texture,Bt=Et.format,zt=Et.type;if(!vt.textureFormatReadable(Bt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!vt.textureTypeReadable(zt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}U>=0&&U<=w.width-k&&B>=0&&B<=w.height-N&&C.readPixels(U,B,k,N,Yt.convert(Bt),Yt.convert(zt),it)}finally{const Et=I!==null?mt.get(I).__webglFramebuffer:null;rt.bindFramebuffer(C.FRAMEBUFFER,Et)}}},this.readRenderTargetPixelsAsync=async function(w,U,B,k,N,it,pt){if(!(w&&w.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Mt=mt.get(w).__webglFramebuffer;if(w.isWebGLCubeRenderTarget&&pt!==void 0&&(Mt=Mt[pt]),Mt){const Et=w.texture,Bt=Et.format,zt=Et.type;if(!vt.textureFormatReadable(Bt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!vt.textureTypeReadable(zt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(U>=0&&U<=w.width-k&&B>=0&&B<=w.height-N){rt.bindFramebuffer(C.FRAMEBUFFER,Mt);const It=C.createBuffer();C.bindBuffer(C.PIXEL_PACK_BUFFER,It),C.bufferData(C.PIXEL_PACK_BUFFER,it.byteLength,C.STREAM_READ),C.readPixels(U,B,k,N,Yt.convert(Bt),Yt.convert(zt),0);const jt=I!==null?mt.get(I).__webglFramebuffer:null;rt.bindFramebuffer(C.FRAMEBUFFER,jt);const se=C.fenceSync(C.SYNC_GPU_COMMANDS_COMPLETE,0);return C.flush(),await U3(C,se,4),C.bindBuffer(C.PIXEL_PACK_BUFFER,It),C.getBufferSubData(C.PIXEL_PACK_BUFFER,0,it),C.deleteBuffer(It),C.deleteSync(se),it}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")}},this.copyFramebufferToTexture=function(w,U=null,B=0){w.isTexture!==!0&&(zn("WebGLRenderer: copyFramebufferToTexture function signature has changed."),U=arguments[0]||null,w=arguments[1]);const k=Math.pow(2,-B),N=Math.floor(w.image.width*k),it=Math.floor(w.image.height*k),pt=U!==null?U.x:0,Mt=U!==null?U.y:0;A.setTexture2D(w,0),C.copyTexSubImage2D(C.TEXTURE_2D,B,0,0,pt,Mt,N,it),rt.unbindTexture()};const Iu=C.createFramebuffer(),Lu=C.createFramebuffer();this.copyTextureToTexture=function(w,U,B=null,k=null,N=0,it=null){w.isTexture!==!0&&(zn("WebGLRenderer: copyTextureToTexture function signature has changed."),k=arguments[0]||null,w=arguments[1],U=arguments[2],it=arguments[3]||0,B=null),it===null&&(N!==0?(zn("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),it=N,N=0):it=0);let pt,Mt,Et,Bt,zt,It,jt,se,we;const xe=w.isCompressedTexture?w.mipmaps[it]:w.image;if(B!==null)pt=B.max.x-B.min.x,Mt=B.max.y-B.min.y,Et=B.isBox3?B.max.z-B.min.z:1,Bt=B.min.x,zt=B.min.y,It=B.isBox3?B.min.z:0;else{const f0=Math.pow(2,-N);pt=Math.floor(xe.width*f0),Mt=Math.floor(xe.height*f0),w.isDataArrayTexture?Et=xe.depth:w.isData3DTexture?Et=Math.floor(xe.depth*f0):Et=1,Bt=0,zt=0,It=0}k!==null?(jt=k.x,se=k.y,we=k.z):(jt=0,se=0,we=0);const ne=Yt.convert(U.format),Lt=Yt.convert(U.type);let Ue;U.isData3DTexture?(A.setTexture3D(U,0),Ue=C.TEXTURE_3D):U.isDataArrayTexture||U.isCompressedArrayTexture?(A.setTexture2DArray(U,0),Ue=C.TEXTURE_2D_ARRAY):(A.setTexture2D(U,0),Ue=C.TEXTURE_2D),C.pixelStorei(C.UNPACK_FLIP_Y_WEBGL,U.flipY),C.pixelStorei(C.UNPACK_PREMULTIPLY_ALPHA_WEBGL,U.premultiplyAlpha),C.pixelStorei(C.UNPACK_ALIGNMENT,U.unpackAlignment);const re=C.getParameter(C.UNPACK_ROW_LENGTH),_0=C.getParameter(C.UNPACK_IMAGE_HEIGHT),ci=C.getParameter(C.UNPACK_SKIP_PIXELS),a0=C.getParameter(C.UNPACK_SKIP_ROWS),Gi=C.getParameter(C.UNPACK_SKIP_IMAGES);C.pixelStorei(C.UNPACK_ROW_LENGTH,xe.width),C.pixelStorei(C.UNPACK_IMAGE_HEIGHT,xe.height),C.pixelStorei(C.UNPACK_SKIP_PIXELS,Bt),C.pixelStorei(C.UNPACK_SKIP_ROWS,zt),C.pixelStorei(C.UNPACK_SKIP_IMAGES,It);const pe=w.isDataArrayTexture||w.isData3DTexture,d0=U.isDataArrayTexture||U.isData3DTexture;if(w.isDepthTexture){const f0=mt.get(w),Xe=mt.get(U),t0=mt.get(f0.__renderTarget),_a=mt.get(Xe.__renderTarget);rt.bindFramebuffer(C.READ_FRAMEBUFFER,t0.__webglFramebuffer),rt.bindFramebuffer(C.DRAW_FRAMEBUFFER,_a.__webglFramebuffer);for(let bn=0;bn<Et;bn++)pe&&(C.framebufferTextureLayer(C.READ_FRAMEBUFFER,C.COLOR_ATTACHMENT0,mt.get(w).__webglTexture,N,It+bn),C.framebufferTextureLayer(C.DRAW_FRAMEBUFFER,C.COLOR_ATTACHMENT0,mt.get(U).__webglTexture,it,we+bn)),C.blitFramebuffer(Bt,zt,pt,Mt,jt,se,pt,Mt,C.DEPTH_BUFFER_BIT,C.NEAREST);rt.bindFramebuffer(C.READ_FRAMEBUFFER,null),rt.bindFramebuffer(C.DRAW_FRAMEBUFFER,null)}else if(N!==0||w.isRenderTargetTexture||mt.has(w)){const f0=mt.get(w),Xe=mt.get(U);rt.bindFramebuffer(C.READ_FRAMEBUFFER,Iu),rt.bindFramebuffer(C.DRAW_FRAMEBUFFER,Lu);for(let t0=0;t0<Et;t0++)pe?C.framebufferTextureLayer(C.READ_FRAMEBUFFER,C.COLOR_ATTACHMENT0,f0.__webglTexture,N,It+t0):C.framebufferTexture2D(C.READ_FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,f0.__webglTexture,N),d0?C.framebufferTextureLayer(C.DRAW_FRAMEBUFFER,C.COLOR_ATTACHMENT0,Xe.__webglTexture,it,we+t0):C.framebufferTexture2D(C.DRAW_FRAMEBUFFER,C.COLOR_ATTACHMENT0,C.TEXTURE_2D,Xe.__webglTexture,it),N!==0?C.blitFramebuffer(Bt,zt,pt,Mt,jt,se,pt,Mt,C.COLOR_BUFFER_BIT,C.NEAREST):d0?C.copyTexSubImage3D(Ue,it,jt,se,we+t0,Bt,zt,pt,Mt):C.copyTexSubImage2D(Ue,it,jt,se,Bt,zt,pt,Mt);rt.bindFramebuffer(C.READ_FRAMEBUFFER,null),rt.bindFramebuffer(C.DRAW_FRAMEBUFFER,null)}else d0?w.isDataTexture||w.isData3DTexture?C.texSubImage3D(Ue,it,jt,se,we,pt,Mt,Et,ne,Lt,xe.data):U.isCompressedArrayTexture?C.compressedTexSubImage3D(Ue,it,jt,se,we,pt,Mt,Et,ne,xe.data):C.texSubImage3D(Ue,it,jt,se,we,pt,Mt,Et,ne,Lt,xe):w.isDataTexture?C.texSubImage2D(C.TEXTURE_2D,it,jt,se,pt,Mt,ne,Lt,xe.data):w.isCompressedTexture?C.compressedTexSubImage2D(C.TEXTURE_2D,it,jt,se,xe.width,xe.height,ne,xe.data):C.texSubImage2D(C.TEXTURE_2D,it,jt,se,pt,Mt,ne,Lt,xe);C.pixelStorei(C.UNPACK_ROW_LENGTH,re),C.pixelStorei(C.UNPACK_IMAGE_HEIGHT,_0),C.pixelStorei(C.UNPACK_SKIP_PIXELS,ci),C.pixelStorei(C.UNPACK_SKIP_ROWS,a0),C.pixelStorei(C.UNPACK_SKIP_IMAGES,Gi),it===0&&U.generateMipmaps&&C.generateMipmap(Ue),rt.unbindTexture()},this.copyTextureToTexture3D=function(w,U,B=null,k=null,N=0){return w.isTexture!==!0&&(zn("WebGLRenderer: copyTextureToTexture3D function signature has changed."),B=arguments[0]||null,k=arguments[1]||null,w=arguments[2],U=arguments[3],N=arguments[4]||0),zn('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(w,U,B,k,N)},this.initRenderTarget=function(w){mt.get(w).__webglFramebuffer===void 0&&A.setupRenderTarget(w)},this.initTexture=function(w){w.isCubeTexture?A.setTextureCube(w,0):w.isData3DTexture?A.setTexture3D(w,0):w.isDataArrayTexture||w.isCompressedArrayTexture?A.setTexture2DArray(w,0):A.setTexture2D(w,0),rt.unbindTexture()},this.resetState=function(){T=0,R=0,I=null,rt.reset(),ue.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return w0}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorspace=Jt._getDrawingBufferColorSpace(t),e.unpackColorSpace=Jt._getUnpackColorSpace()}}const Y7=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:V2,AddEquation:mn,AddOperation:O2,AdditiveAnimationBlendMode:k1,AdditiveBlending:u1,AgXToneMapping:G2,AlphaFormat:U1,AlwaysCompare:sh,AlwaysDepth:to,AlwaysStencilFunc:m1,AmbientLight:Jh,AnimationAction:su,AnimationClip:Us,AnimationLoader:o4,AnimationMixer:N4,AnimationObjectGroup:D4,AnimationUtils:n4,ArcCurve:bh,ArrayCamera:eu,ArrowHelper:sf,AttachedBindMode:p1,Audio:nu,AudioAnalyser:b4,AudioContext:dl,AudioListener:v4,AudioLoader:_4,AxesHelper:rf,BackSide:Ke,BasicDepthPacking:J2,BasicShadowMap:Fu,BatchedMesh:yh,Bone:Y1,BooleanKeyframeTrack:ai,Box2:G4,Box3:je,Box3Helper:ef,BoxGeometry:ve,BoxHelper:tf,BufferAttribute:ce,BufferGeometry:Vt,BufferGeometryLoader:tu,ByteType:I1,Cache:K0,Camera:$o,CameraHelper:Q4,CanvasTexture:Td,CapsuleGeometry:ia,CatmullRomCurve3:wh,CineonToneMapping:k2,CircleGeometry:sa,ClampToEdgeWrapping:m0,Clock:fl,Color:dt,ColorKeyframeTrack:al,ColorManagement:Jt,CompressedArrayTexture:wd,CompressedCubeTexture:Ed,CompressedTexture:ea,CompressedTextureLoader:a4,ConeGeometry:ra,ConstantAlphaFactor:U2,ConstantColorFactor:L2,Controls:xl,CubeCamera:dh,CubeReflectionMapping:nn,CubeRefractionMapping:_n,CubeTexture:zs,CubeTextureLoader:l4,CubeUVReflectionMapping:zi,CubicBezierCurve:$1,CubicBezierCurve3:Eh,CubicInterpolant:Gh,CullFaceBack:h1,CullFaceFront:g2,CullFaceFrontBack:Nu,CullFaceNone:m2,Curve:R0,CurvePath:Ah,CustomBlending:x2,CustomToneMapping:H2,CylinderGeometry:Te,Cylindrical:H4,Data3DTexture:Zo,DataArrayTexture:Bs,DataTexture:E0,DataTextureLoader:c4,DataUtils:K3,DecrementStencilOp:$u,DecrementWrapStencilOp:ju,DefaultLoadingManager:Yh,DepthFormat:$n,DepthStencilFormat:ni,DepthTexture:Z1,DetachedBindMode:X2,DirectionalLight:ul,DirectionalLightHelper:j4,DiscreteInterpolant:Wh,DodecahedronGeometry:oa,DoubleSide:b0,DstAlphaFactor:A2,DstColorFactor:R2,DynamicCopyUsage:f3,DynamicDrawUsage:a3,DynamicReadUsage:h3,EdgesGeometry:Ch,EllipseCurve:na,EqualCompare:th,EqualDepth:no,EqualStencilFunc:n3,EquirectangularReflectionMapping:xs,EquirectangularRefractionMapping:ys,Euler:Qe,EventDispatcher:B0,ExtrudeGeometry:la,FileLoader:rn,Float16BufferAttribute:sd,Float32BufferAttribute:St,FloatType:r0,Fog:jo,FogExp2:Ko,FramebufferTexture:bd,FrontSide:en,Frustum:ks,GLBufferAttribute:V4,GLSL1:m3,GLSL3:g1,GreaterCompare:eh,GreaterDepth:so,GreaterEqualCompare:ih,GreaterEqualDepth:io,GreaterEqualStencilFunc:o3,GreaterStencilFunc:s3,GridHelper:$4,Group:Yn,HalfFloatType:ki,HemisphereLight:cl,HemisphereLightHelper:J4,IcosahedronGeometry:Hs,ImageBitmapLoader:g4,ImageLoader:Ns,ImageUtils:lh,IncrementStencilOp:Ju,IncrementWrapStencilOp:Ku,InstancedBufferAttribute:Bi,InstancedBufferGeometry:Qh,InstancedInterleavedBuffer:k4,InstancedMesh:xh,Int16BufferAttribute:nd,Int32BufferAttribute:id,Int8BufferAttribute:Q3,IntType:ko,InterleavedBuffer:Qo,InterleavedBufferAttribute:si,Interpolant:Gs,InterpolateDiscrete:Ss,InterpolateLinear:Do,InterpolateSmooth:Xr,InvertStencilOp:Qu,KeepStencilOp:Bn,KeyframeTrack:P0,LOD:gh,LatheGeometry:Vs,Layers:Jo,LessCompare:Q2,LessDepth:eo,LessEqualCompare:V1,LessEqualDepth:ti,LessEqualStencilFunc:i3,LessStencilFunc:e3,Light:Mn,LightProbe:jh,Line:He,Line3:W4,LineBasicMaterial:Fe,LineCurve:K1,LineCurve3:Th,LineDashedMaterial:kh,LineLoop:vh,LineSegments:C0,LinearFilter:Re,LinearInterpolant:ol,LinearMipMapLinearFilter:ku,LinearMipMapNearestFilter:zu,LinearMipmapLinearFilter:U0,LinearMipmapNearestFilter:ls,LinearSRGBColorSpace:ii,LinearToneMapping:B2,LinearTransfer:ws,Loader:o0,LoaderUtils:M1,LoadingManager:ll,LoopOnce:Y2,LoopPingPong:Z2,LoopRepeat:q2,LuminanceAlphaFormat:O1,LuminanceFormat:F1,MOUSE:Zn,Material:We,MaterialLoader:pa,MathUtils:rh,Matrix2:_l,Matrix3:Ht,Matrix4:Dt,MaxEquation:S2,Mesh:lt,MeshBasicMaterial:A0,MeshDepthMaterial:il,MeshDistanceMaterial:sl,MeshLambertMaterial:Bh,MeshMatcapMaterial:zh,MeshNormalMaterial:Oh,MeshPhongMaterial:nl,MeshPhysicalMaterial:Nh,MeshStandardMaterial:el,MeshToonMaterial:Fh,MinEquation:M2,MirroredRepeatWrapping:Ms,MixOperation:F2,MultiplyBlending:f1,MultiplyOperation:Fs,NearestFilter:Ne,NearestMipMapLinearFilter:Bu,NearestMipMapNearestFilter:Ou,NearestMipmapLinearFilter:Ri,NearestMipmapNearestFilter:P1,NeutralToneMapping:W2,NeverCompare:j2,NeverDepth:Qr,NeverStencilFunc:t3,NoBlending:j0,NoColorSpace:q0,NoToneMapping:Q0,NormalAnimationBlendMode:Yo,NormalBlending:Jn,NotEqualCompare:nh,NotEqualDepth:ro,NotEqualStencilFunc:r3,NumberKeyframeTrack:Ls,Object3D:Zt,ObjectLoader:p4,ObjectSpaceNormalMap:K2,OctahedronGeometry:$0,OneFactor:w2,OneMinusConstantAlphaFactor:N2,OneMinusConstantColorFactor:D2,OneMinusDstAlphaFactor:C2,OneMinusDstColorFactor:P2,OneMinusSrcAlphaFactor:jr,OneMinusSrcColorFactor:T2,OrthographicCamera:Xs,PCFShadowMap:R1,PCFSoftShadowMap:_2,PMREMGenerator:E1,Path:Cs,PerspectiveCamera:De,Plane:Y0,PlaneGeometry:vn,PlaneHelper:nf,PointLight:Zh,PointLightHelper:q4,Points:Mh,PointsMaterial:q1,PolarGridHelper:K4,PolyhedronGeometry:yn,PositionalAudio:S4,PropertyBinding:Qt,PropertyMixer:iu,QuadraticBezierCurve:j1,QuadraticBezierCurve3:Q1,Quaternion:de,QuaternionKeyframeTrack:Ws,QuaternionLinearInterpolant:Xh,RED_GREEN_RGTC2_Format:Io,RED_RGTC1_Format:z1,REVISION:Bo,RGBADepthPacking:$2,RGBAFormat:$e,RGBAIntegerFormat:Xo,RGBA_ASTC_10x10_Format:Eo,RGBA_ASTC_10x5_Format:So,RGBA_ASTC_10x6_Format:bo,RGBA_ASTC_10x8_Format:wo,RGBA_ASTC_12x10_Format:To,RGBA_ASTC_12x12_Format:Ao,RGBA_ASTC_4x4_Format:po,RGBA_ASTC_5x4_Format:mo,RGBA_ASTC_5x5_Format:go,RGBA_ASTC_6x5_Format:_o,RGBA_ASTC_6x6_Format:xo,RGBA_ASTC_8x5_Format:yo,RGBA_ASTC_8x6_Format:vo,RGBA_ASTC_8x8_Format:Mo,RGBA_BPTC_Format:fs,RGBA_ETC2_EAC_Format:fo,RGBA_PVRTC_2BPPV1_Format:co,RGBA_PVRTC_4BPPV1_Format:lo,RGBA_S3TC_DXT1_Format:hs,RGBA_S3TC_DXT3_Format:us,RGBA_S3TC_DXT5_Format:ds,RGBDepthPacking:Xu,RGBFormat:N1,RGBIntegerFormat:Vu,RGB_BPTC_SIGNED_Format:Co,RGB_BPTC_UNSIGNED_Format:Ro,RGB_ETC1_Format:ho,RGB_ETC2_Format:uo,RGB_PVRTC_2BPPV1_Format:ao,RGB_PVRTC_4BPPV1_Format:oo,RGB_S3TC_DXT1_Format:cs,RGDepthPacking:Yu,RGFormat:B1,RGIntegerFormat:Wo,RawShaderMaterial:Uh,Ray:oi,Raycaster:ru,RectAreaLight:$h,RedFormat:Go,RedIntegerFormat:Os,ReinhardToneMapping:z2,RenderTarget:qo,RenderTarget3D:F4,RenderTargetArray:O4,RepeatWrapping:vs,ReplaceStencilOp:Zu,ReverseSubtractEquation:v2,RingGeometry:ca,SIGNED_RED_GREEN_RGTC2_Format:Lo,SIGNED_RED_RGTC1_Format:Po,SRGBColorSpace:Ze,SRGBTransfer:ae,Scene:Uo,ShaderChunk:Xt,ShaderLib:S0,ShaderMaterial:T0,ShadowMaterial:Dh,Shape:jn,ShapeGeometry:ha,ShapePath:of,ShapeUtils:N0,ShortType:L1,Skeleton:ta,SkeletonHelper:Y4,SkinnedMesh:_h,Source:gn,Sphere:Ge,SphereGeometry:Vi,Spherical:b1,SphericalHarmonics3:Kh,SplineCurve:tl,SpotLight:qh,SpotLightHelper:X4,Sprite:mh,SpriteMaterial:X1,SrcAlphaFactor:Kr,SrcAlphaSaturateFactor:I2,SrcColorFactor:E2,StaticCopyUsage:d3,StaticDrawUsage:Es,StaticReadUsage:c3,StereoCamera:x4,StreamCopyUsage:p3,StreamDrawUsage:l3,StreamReadUsage:u3,StringKeyframeTrack:li,SubtractEquation:y2,SubtractiveBlending:d1,TOUCH:Gn,TangentSpaceNormalMap:xn,TetrahedronGeometry:ua,Texture:Me,TextureLoader:h4,TextureUtils:uf,TimestampQuery:g3,TorusGeometry:J0,TorusKnotGeometry:da,Triangle:s0,TriangleFanDrawMode:Wu,TriangleStripDrawMode:Gu,TrianglesDrawMode:Hu,TubeGeometry:fa,UVMapping:zo,Uint16BufferAttribute:G1,Uint32BufferAttribute:W1,Uint8BufferAttribute:td,Uint8ClampedBufferAttribute:ed,Uniform:gl,UniformsGroup:z4,UniformsLib:ct,UniformsUtils:uh,UnsignedByteType:F0,UnsignedInt248Type:ei,UnsignedInt5999Type:D1,UnsignedIntType:sn,UnsignedShort4444Type:Vo,UnsignedShort5551Type:Ho,UnsignedShortType:Ni,VSMShadowMap:L0,Vector2:Y,Vector3:E,Vector4:te,VectorKeyframeTrack:Ds,VideoFrameTexture:Sd,VideoTexture:Sh,WebGL3DRenderTarget:V3,WebGLArrayRenderTarget:k3,WebGLCoordinateSystem:w0,WebGLCubeRenderTarget:fh,WebGLRenderTarget:O0,WebGLRenderer:fu,WebGLUtils:du,WebGPUCoordinateSystem:Ts,WebXRController:Yr,WireframeGeometry:Lh,WrapAroundEnding:bs,ZeroCurvatureEnding:Wn,ZeroFactor:b2,ZeroSlopeEnding:Xn,ZeroStencilOp:qu,createCanvasElement:ah},Symbol.toStringTag,{value:"Module"})),o2={type:"change"},vl={type:"start"},pu={type:"end"},zr=new oi,a2=new Y0,q7=Math.cos(70*rh.DEG2RAD),Ce=new E,n0=2*Math.PI,le={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},r1=1e-6;class Z7 extends xl{constructor(t,e=null){super(t,e),this.state=le.NONE,this.enabled=!0,this.target=new E,this.cursor=new E,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:Zn.ROTATE,MIDDLE:Zn.DOLLY,RIGHT:Zn.PAN},this.touches={ONE:Gn.ROTATE,TWO:Gn.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new E,this._lastQuaternion=new de,this._lastTargetPosition=new E,this._quat=new de().setFromUnitVectors(t.up,new E(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new b1,this._sphericalDelta=new b1,this._scale=1,this._panOffset=new E,this._rotateStart=new Y,this._rotateEnd=new Y,this._rotateDelta=new Y,this._panStart=new Y,this._panEnd=new Y,this._panDelta=new Y,this._dollyStart=new Y,this._dollyEnd=new Y,this._dollyDelta=new Y,this._dollyDirection=new E,this._mouse=new Y,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=$7.bind(this),this._onPointerDown=J7.bind(this),this._onPointerUp=K7.bind(this),this._onContextMenu=s8.bind(this),this._onMouseWheel=t8.bind(this),this._onKeyDown=e8.bind(this),this._onTouchStart=n8.bind(this),this._onTouchMove=i8.bind(this),this._onMouseDown=j7.bind(this),this._onMouseMove=Q7.bind(this),this._interceptControlDown=r8.bind(this),this._interceptControlUp=o8.bind(this),this.domElement!==null&&this.connect(),this.update()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(t){t.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=t}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(o2),this.update(),this.state=le.NONE}update(t=null){const e=this.object.position;Ce.copy(e).sub(this.target),Ce.applyQuaternion(this._quat),this._spherical.setFromVector3(Ce),this.autoRotate&&this.state===le.NONE&&this._rotateLeft(this._getAutoRotationAngle(t)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let n=this.minAzimuthAngle,i=this.maxAzimuthAngle;isFinite(n)&&isFinite(i)&&(n<-Math.PI?n+=n0:n>Math.PI&&(n-=n0),i<-Math.PI?i+=n0:i>Math.PI&&(i-=n0),n<=i?this._spherical.theta=Math.max(n,Math.min(i,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(n+i)/2?Math.max(n,this._spherical.theta):Math.min(i,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=o!=this._spherical.radius}if(Ce.setFromSpherical(this._spherical),Ce.applyQuaternion(this._quatInverse),e.copy(this.target).add(Ce),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Ce.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),s=!!l}else if(this.object.isOrthographicCamera){const a=new E(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=l!==this.object.zoom;const c=new E(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=Ce.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(zr.origin.copy(this.object.position),zr.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(zr.direction))<q7?this.object.lookAt(this.target):(a2.setFromNormalAndCoplanarPoint(this.object.up,this.target),zr.intersectPlane(a2,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>r1||8*(1-this._lastQuaternion.dot(this.object.quaternion))>r1||this._lastTargetPosition.distanceToSquared(this.target)>r1?(this.dispatchEvent(o2),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(t){return t!==null?n0/60*this.autoRotateSpeed*t:n0/60/60*this.autoRotateSpeed}_getZoomScale(t){const e=Math.abs(t*.01);return Math.pow(.95,this.zoomSpeed*e)}_rotateLeft(t){this._sphericalDelta.theta-=t}_rotateUp(t){this._sphericalDelta.phi-=t}_panLeft(t,e){Ce.setFromMatrixColumn(e,0),Ce.multiplyScalar(-t),this._panOffset.add(Ce)}_panUp(t,e){this.screenSpacePanning===!0?Ce.setFromMatrixColumn(e,1):(Ce.setFromMatrixColumn(e,0),Ce.crossVectors(this.object.up,Ce)),Ce.multiplyScalar(t),this._panOffset.add(Ce)}_pan(t,e){const n=this.domElement;if(this.object.isPerspectiveCamera){const i=this.object.position;Ce.copy(i).sub(this.target);let s=Ce.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*t*s/n.clientHeight,this.object.matrix),this._panUp(2*e*s/n.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(t*(this.object.right-this.object.left)/this.object.zoom/n.clientWidth,this.object.matrix),this._panUp(e*(this.object.top-this.object.bottom)/this.object.zoom/n.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(t){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=t:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(t,e){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const n=this.domElement.getBoundingClientRect(),i=t-n.left,s=e-n.top,o=n.width,a=n.height;this._mouse.x=i/o*2-1,this._mouse.y=-(s/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(t){return Math.max(this.minDistance,Math.min(this.maxDistance,t))}_handleMouseDownRotate(t){this._rotateStart.set(t.clientX,t.clientY)}_handleMouseDownDolly(t){this._updateZoomParameters(t.clientX,t.clientX),this._dollyStart.set(t.clientX,t.clientY)}_handleMouseDownPan(t){this._panStart.set(t.clientX,t.clientY)}_handleMouseMoveRotate(t){this._rotateEnd.set(t.clientX,t.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(n0*this._rotateDelta.x/e.clientHeight),this._rotateUp(n0*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(t){this._dollyEnd.set(t.clientX,t.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(t){this._panEnd.set(t.clientX,t.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(t){this._updateZoomParameters(t.clientX,t.clientY),t.deltaY<0?this._dollyIn(this._getZoomScale(t.deltaY)):t.deltaY>0&&this._dollyOut(this._getZoomScale(t.deltaY)),this.update()}_handleKeyDown(t){let e=!1;switch(t.code){case this.keys.UP:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(n0*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),e=!0;break;case this.keys.BOTTOM:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateUp(-n0*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),e=!0;break;case this.keys.LEFT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(n0*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),e=!0;break;case this.keys.RIGHT:t.ctrlKey||t.metaKey||t.shiftKey?this.enableRotate&&this._rotateLeft(-n0*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),e=!0;break}e&&(t.preventDefault(),this.update())}_handleTouchStartRotate(t){if(this._pointers.length===1)this._rotateStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._rotateStart.set(n,i)}}_handleTouchStartPan(t){if(this._pointers.length===1)this._panStart.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panStart.set(n,i)}}_handleTouchStartDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,s=Math.sqrt(n*n+i*i);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enablePan&&this._handleTouchStartPan(t)}_handleTouchStartDollyRotate(t){this.enableZoom&&this._handleTouchStartDolly(t),this.enableRotate&&this._handleTouchStartRotate(t)}_handleTouchMoveRotate(t){if(this._pointers.length==1)this._rotateEnd.set(t.pageX,t.pageY);else{const n=this._getSecondPointerPosition(t),i=.5*(t.pageX+n.x),s=.5*(t.pageY+n.y);this._rotateEnd.set(i,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const e=this.domElement;this._rotateLeft(n0*this._rotateDelta.x/e.clientHeight),this._rotateUp(n0*this._rotateDelta.y/e.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(t){if(this._pointers.length===1)this._panEnd.set(t.pageX,t.pageY);else{const e=this._getSecondPointerPosition(t),n=.5*(t.pageX+e.x),i=.5*(t.pageY+e.y);this._panEnd.set(n,i)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(t){const e=this._getSecondPointerPosition(t),n=t.pageX-e.x,i=t.pageY-e.y,s=Math.sqrt(n*n+i*i);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(t.pageX+e.x)*.5,a=(t.pageY+e.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enablePan&&this._handleTouchMovePan(t)}_handleTouchMoveDollyRotate(t){this.enableZoom&&this._handleTouchMoveDolly(t),this.enableRotate&&this._handleTouchMoveRotate(t)}_addPointer(t){this._pointers.push(t.pointerId)}_removePointer(t){delete this._pointerPositions[t.pointerId];for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId){this._pointers.splice(e,1);return}}_isTrackingPointer(t){for(let e=0;e<this._pointers.length;e++)if(this._pointers[e]==t.pointerId)return!0;return!1}_trackPointer(t){let e=this._pointerPositions[t.pointerId];e===void 0&&(e=new Y,this._pointerPositions[t.pointerId]=e),e.set(t.pageX,t.pageY)}_getSecondPointerPosition(t){const e=t.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[e]}_customWheelEvent(t){const e=t.deltaMode,n={clientX:t.clientX,clientY:t.clientY,deltaY:t.deltaY};switch(e){case 1:n.deltaY*=16;break;case 2:n.deltaY*=100;break}return t.ctrlKey&&!this._controlActive&&(n.deltaY*=10),n}}function J7(r){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(r)&&(this._addPointer(r),r.pointerType==="touch"?this._onTouchStart(r):this._onMouseDown(r)))}function $7(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchMove(r):this._onMouseMove(r))}function K7(r){switch(this._removePointer(r),this._pointers.length){case 0:this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(pu),this.state=le.NONE;break;case 1:const t=this._pointers[0],e=this._pointerPositions[t];this._onTouchStart({pointerId:t,pageX:e.x,pageY:e.y});break}}function j7(r){let t;switch(r.button){case 0:t=this.mouseButtons.LEFT;break;case 1:t=this.mouseButtons.MIDDLE;break;case 2:t=this.mouseButtons.RIGHT;break;default:t=-1}switch(t){case Zn.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(r),this.state=le.DOLLY;break;case Zn.ROTATE:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=le.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=le.ROTATE}break;case Zn.PAN:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=le.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=le.PAN}break;default:this.state=le.NONE}this.state!==le.NONE&&this.dispatchEvent(vl)}function Q7(r){switch(this.state){case le.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(r);break;case le.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(r);break;case le.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(r);break}}function t8(r){this.enabled===!1||this.enableZoom===!1||this.state!==le.NONE||(r.preventDefault(),this.dispatchEvent(vl),this._handleMouseWheel(this._customWheelEvent(r)),this.dispatchEvent(pu))}function e8(r){this.enabled!==!1&&this._handleKeyDown(r)}function n8(r){switch(this._trackPointer(r),this._pointers.length){case 1:switch(this.touches.ONE){case Gn.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(r),this.state=le.TOUCH_ROTATE;break;case Gn.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(r),this.state=le.TOUCH_PAN;break;default:this.state=le.NONE}break;case 2:switch(this.touches.TWO){case Gn.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(r),this.state=le.TOUCH_DOLLY_PAN;break;case Gn.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(r),this.state=le.TOUCH_DOLLY_ROTATE;break;default:this.state=le.NONE}break;default:this.state=le.NONE}this.state!==le.NONE&&this.dispatchEvent(vl)}function i8(r){switch(this._trackPointer(r),this.state){case le.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(r),this.update();break;case le.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(r),this.update();break;case le.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(r),this.update();break;case le.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(r),this.update();break;default:this.state=le.NONE}}function s8(r){this.enabled!==!1&&r.preventDefault()}function r8(r){r.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function o8(r){r.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}const On=new ru,Ve=new E,fn=new E,me=new de,l2={X:new E(1,0,0),Y:new E(0,1,0),Z:new E(0,0,1)},o1={type:"change"},c2={type:"mouseDown",mode:null},h2={type:"mouseUp",mode:null},u2={type:"objectChange"};class a8 extends xl{constructor(t,e=null){super(void 0,e);const n=new f8(this);this._root=n;const i=new p8;this._gizmo=i,n.add(i);const s=new m8;this._plane=s,n.add(s);const o=this;function a(x,y){let P=y;Object.defineProperty(o,x,{get:function(){return P!==void 0?P:y},set:function(T){P!==T&&(P=T,s[x]=T,i[x]=T,o.dispatchEvent({type:x+"-changed",value:T}),o.dispatchEvent(o1))}}),o[x]=y,s[x]=y,i[x]=y}a("camera",t),a("object",void 0),a("enabled",!0),a("axis",null),a("mode","translate"),a("translationSnap",null),a("rotationSnap",null),a("scaleSnap",null),a("space","world"),a("size",1),a("dragging",!1),a("showX",!0),a("showY",!0),a("showZ",!0),a("minX",-1/0),a("maxX",1/0),a("minY",-1/0),a("maxY",1/0),a("minZ",-1/0),a("maxZ",1/0);const l=new E,c=new E,h=new de,u=new de,d=new E,f=new de,m=new E,_=new E,g=new E,p=0,v=new E;a("worldPosition",l),a("worldPositionStart",c),a("worldQuaternion",h),a("worldQuaternionStart",u),a("cameraPosition",d),a("cameraQuaternion",f),a("pointStart",m),a("pointEnd",_),a("rotationAxis",g),a("rotationAngle",p),a("eye",v),this._offset=new E,this._startNorm=new E,this._endNorm=new E,this._cameraScale=new E,this._parentPosition=new E,this._parentQuaternion=new de,this._parentQuaternionInv=new de,this._parentScale=new E,this._worldScaleStart=new E,this._worldQuaternionInv=new de,this._worldScale=new E,this._positionStart=new E,this._quaternionStart=new de,this._scaleStart=new E,this._getPointer=l8.bind(this),this._onPointerDown=h8.bind(this),this._onPointerHover=c8.bind(this),this._onPointerMove=u8.bind(this),this._onPointerUp=d8.bind(this),e!==null&&this.connect()}connect(){this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointermove",this._onPointerHover),this.domElement.addEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerHover),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.style.touchAction="auto"}getHelper(){return this._root}pointerHover(t){if(this.object===void 0||this.dragging===!0)return;t!==null&&On.setFromCamera(t,this.camera);const e=a1(this._gizmo.picker[this.mode],On);e?this.axis=e.object.name:this.axis=null}pointerDown(t){if(!(this.object===void 0||this.dragging===!0||t!=null&&t.button!==0)&&this.axis!==null){t!==null&&On.setFromCamera(t,this.camera);const e=a1(this._plane,On,!0);e&&(this.object.updateMatrixWorld(),this.object.parent.updateMatrixWorld(),this._positionStart.copy(this.object.position),this._quaternionStart.copy(this.object.quaternion),this._scaleStart.copy(this.object.scale),this.object.matrixWorld.decompose(this.worldPositionStart,this.worldQuaternionStart,this._worldScaleStart),this.pointStart.copy(e.point).sub(this.worldPositionStart)),this.dragging=!0,c2.mode=this.mode,this.dispatchEvent(c2)}}pointerMove(t){const e=this.axis,n=this.mode,i=this.object;let s=this.space;if(n==="scale"?s="local":(e==="E"||e==="XYZE"||e==="XYZ")&&(s="world"),i===void 0||e===null||this.dragging===!1||t!==null&&t.button!==-1)return;t!==null&&On.setFromCamera(t,this.camera);const o=a1(this._plane,On,!0);if(o){if(this.pointEnd.copy(o.point).sub(this.worldPositionStart),n==="translate")this._offset.copy(this.pointEnd).sub(this.pointStart),s==="local"&&e!=="XYZ"&&this._offset.applyQuaternion(this._worldQuaternionInv),e.indexOf("X")===-1&&(this._offset.x=0),e.indexOf("Y")===-1&&(this._offset.y=0),e.indexOf("Z")===-1&&(this._offset.z=0),s==="local"&&e!=="XYZ"?this._offset.applyQuaternion(this._quaternionStart).divide(this._parentScale):this._offset.applyQuaternion(this._parentQuaternionInv).divide(this._parentScale),i.position.copy(this._offset).add(this._positionStart),this.translationSnap&&(s==="local"&&(i.position.applyQuaternion(me.copy(this._quaternionStart).invert()),e.search("X")!==-1&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),e.search("Y")!==-1&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),e.search("Z")!==-1&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.position.applyQuaternion(this._quaternionStart)),s==="world"&&(i.parent&&i.position.add(Ve.setFromMatrixPosition(i.parent.matrixWorld)),e.search("X")!==-1&&(i.position.x=Math.round(i.position.x/this.translationSnap)*this.translationSnap),e.search("Y")!==-1&&(i.position.y=Math.round(i.position.y/this.translationSnap)*this.translationSnap),e.search("Z")!==-1&&(i.position.z=Math.round(i.position.z/this.translationSnap)*this.translationSnap),i.parent&&i.position.sub(Ve.setFromMatrixPosition(i.parent.matrixWorld)))),i.position.x=Math.max(this.minX,Math.min(this.maxX,i.position.x)),i.position.y=Math.max(this.minY,Math.min(this.maxY,i.position.y)),i.position.z=Math.max(this.minZ,Math.min(this.maxZ,i.position.z));else if(n==="scale"){if(e.search("XYZ")!==-1){let a=this.pointEnd.length()/this.pointStart.length();this.pointEnd.dot(this.pointStart)<0&&(a*=-1),fn.set(a,a,a)}else Ve.copy(this.pointStart),fn.copy(this.pointEnd),Ve.applyQuaternion(this._worldQuaternionInv),fn.applyQuaternion(this._worldQuaternionInv),fn.divide(Ve),e.search("X")===-1&&(fn.x=1),e.search("Y")===-1&&(fn.y=1),e.search("Z")===-1&&(fn.z=1);i.scale.copy(this._scaleStart).multiply(fn),this.scaleSnap&&(e.search("X")!==-1&&(i.scale.x=Math.round(i.scale.x/this.scaleSnap)*this.scaleSnap||this.scaleSnap),e.search("Y")!==-1&&(i.scale.y=Math.round(i.scale.y/this.scaleSnap)*this.scaleSnap||this.scaleSnap),e.search("Z")!==-1&&(i.scale.z=Math.round(i.scale.z/this.scaleSnap)*this.scaleSnap||this.scaleSnap))}else if(n==="rotate"){this._offset.copy(this.pointEnd).sub(this.pointStart);const a=20/this.worldPosition.distanceTo(Ve.setFromMatrixPosition(this.camera.matrixWorld));let l=!1;e==="XYZE"?(this.rotationAxis.copy(this._offset).cross(this.eye).normalize(),this.rotationAngle=this._offset.dot(Ve.copy(this.rotationAxis).cross(this.eye))*a):(e==="X"||e==="Y"||e==="Z")&&(this.rotationAxis.copy(l2[e]),Ve.copy(l2[e]),s==="local"&&Ve.applyQuaternion(this.worldQuaternion),Ve.cross(this.eye),Ve.length()===0?l=!0:this.rotationAngle=this._offset.dot(Ve.normalize())*a),(e==="E"||l)&&(this.rotationAxis.copy(this.eye),this.rotationAngle=this.pointEnd.angleTo(this.pointStart),this._startNorm.copy(this.pointStart).normalize(),this._endNorm.copy(this.pointEnd).normalize(),this.rotationAngle*=this._endNorm.cross(this._startNorm).dot(this.eye)<0?1:-1),this.rotationSnap&&(this.rotationAngle=Math.round(this.rotationAngle/this.rotationSnap)*this.rotationSnap),s==="local"&&e!=="E"&&e!=="XYZE"?(i.quaternion.copy(this._quaternionStart),i.quaternion.multiply(me.setFromAxisAngle(this.rotationAxis,this.rotationAngle)).normalize()):(this.rotationAxis.applyQuaternion(this._parentQuaternionInv),i.quaternion.copy(me.setFromAxisAngle(this.rotationAxis,this.rotationAngle)),i.quaternion.multiply(this._quaternionStart).normalize())}this.dispatchEvent(o1),this.dispatchEvent(u2)}}pointerUp(t){t!==null&&t.button!==0||(this.dragging&&this.axis!==null&&(h2.mode=this.mode,this.dispatchEvent(h2)),this.dragging=!1,this.axis=null)}dispose(){this.disconnect(),this._root.dispose()}attach(t){return this.object=t,this._root.visible=!0,this}detach(){return this.object=void 0,this.axis=null,this._root.visible=!1,this}reset(){this.enabled&&this.dragging&&(this.object.position.copy(this._positionStart),this.object.quaternion.copy(this._quaternionStart),this.object.scale.copy(this._scaleStart),this.dispatchEvent(o1),this.dispatchEvent(u2),this.pointStart.copy(this.pointEnd))}getRaycaster(){return On}getMode(){return this.mode}setMode(t){this.mode=t}setTranslationSnap(t){this.translationSnap=t}setRotationSnap(t){this.rotationSnap=t}setScaleSnap(t){this.scaleSnap=t}setSize(t){this.size=t}setSpace(t){this.space=t}}function l8(r){if(this.domElement.ownerDocument.pointerLockElement)return{x:0,y:0,button:r.button};{const t=this.domElement.getBoundingClientRect();return{x:(r.clientX-t.left)/t.width*2-1,y:-(r.clientY-t.top)/t.height*2+1,button:r.button}}}function c8(r){if(this.enabled)switch(r.pointerType){case"mouse":case"pen":this.pointerHover(this._getPointer(r));break}}function h8(r){this.enabled&&(document.pointerLockElement||this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.pointerHover(this._getPointer(r)),this.pointerDown(this._getPointer(r)))}function u8(r){this.enabled&&this.pointerMove(this._getPointer(r))}function d8(r){this.enabled&&(this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.pointerUp(this._getPointer(r)))}function a1(r,t,e){const n=t.intersectObject(r,!0);for(let i=0;i<n.length;i++)if(n[i].object.visible||e)return n[i];return!1}const kr=new Qe,he=new E(0,1,0),d2=new E(0,0,0),f2=new Dt,Vr=new de,Zr=new de,I0=new E,p2=new Dt,os=new E(1,0,0),Vn=new E(0,1,0),as=new E(0,0,1),Hr=new E,ns=new E,is=new E;class f8 extends Zt{constructor(t){super(),this.isTransformControlsRoot=!0,this.controls=t,this.visible=!1}updateMatrixWorld(t){const e=this.controls;e.object!==void 0&&(e.object.updateMatrixWorld(),e.object.parent===null?console.error("TransformControls: The attached 3D object must be a part of the scene graph."):e.object.parent.matrixWorld.decompose(e._parentPosition,e._parentQuaternion,e._parentScale),e.object.matrixWorld.decompose(e.worldPosition,e.worldQuaternion,e._worldScale),e._parentQuaternionInv.copy(e._parentQuaternion).invert(),e._worldQuaternionInv.copy(e.worldQuaternion).invert()),e.camera.updateMatrixWorld(),e.camera.matrixWorld.decompose(e.cameraPosition,e.cameraQuaternion,e._cameraScale),e.camera.isOrthographicCamera?e.camera.getWorldDirection(e.eye).negate():e.eye.copy(e.cameraPosition).sub(e.worldPosition).normalize(),super.updateMatrixWorld(t)}dispose(){this.traverse(function(t){t.geometry&&t.geometry.dispose(),t.material&&t.material.dispose()})}}class p8 extends Zt{constructor(){super(),this.isTransformControlsGizmo=!0,this.type="TransformControlsGizmo";const t=new A0({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),e=new Fe({depthTest:!1,depthWrite:!1,fog:!1,toneMapped:!1,transparent:!0}),n=t.clone();n.opacity=.15;const i=e.clone();i.opacity=.5;const s=t.clone();s.color.setHex(16711680);const o=t.clone();o.color.setHex(65280);const a=t.clone();a.color.setHex(255);const l=t.clone();l.color.setHex(16711680),l.opacity=.5;const c=t.clone();c.color.setHex(65280),c.opacity=.5;const h=t.clone();h.color.setHex(255),h.opacity=.5;const u=t.clone();u.opacity=.25;const d=t.clone();d.color.setHex(16776960),d.opacity=.25,t.clone().color.setHex(16776960);const m=t.clone();m.color.setHex(7895160);const _=new Te(0,.04,.1,12);_.translate(0,.05,0);const g=new ve(.08,.08,.08);g.translate(0,.04,0);const p=new Vt;p.setAttribute("position",new St([0,0,0,1,0,0],3));const v=new Te(.0075,.0075,.5,3);v.translate(0,.25,0);function x(X,G){const $=new J0(X,.0075,3,64,G*Math.PI*2);return $.rotateY(Math.PI/2),$.rotateX(Math.PI/2),$}function y(){const X=new Vt;return X.setAttribute("position",new St([0,0,0,1,1,1],3)),X}const P={X:[[new lt(_,s),[.5,0,0],[0,0,-Math.PI/2]],[new lt(_,s),[-.5,0,0],[0,0,Math.PI/2]],[new lt(v,s),[0,0,0],[0,0,-Math.PI/2]]],Y:[[new lt(_,o),[0,.5,0]],[new lt(_,o),[0,-.5,0],[Math.PI,0,0]],[new lt(v,o)]],Z:[[new lt(_,a),[0,0,.5],[Math.PI/2,0,0]],[new lt(_,a),[0,0,-.5],[-Math.PI/2,0,0]],[new lt(v,a),null,[Math.PI/2,0,0]]],XYZ:[[new lt(new $0(.1,0),u.clone()),[0,0,0]]],XY:[[new lt(new ve(.15,.15,.01),h.clone()),[.15,.15,0]]],YZ:[[new lt(new ve(.15,.15,.01),l.clone()),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new lt(new ve(.15,.15,.01),c.clone()),[.15,0,.15],[-Math.PI/2,0,0]]]},T={X:[[new lt(new Te(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new lt(new Te(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new lt(new Te(.2,0,.6,4),n),[0,.3,0]],[new lt(new Te(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new lt(new Te(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new lt(new Te(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XYZ:[[new lt(new $0(.2,0),n)]],XY:[[new lt(new ve(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new lt(new ve(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new lt(new ve(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]]},R={START:[[new lt(new $0(.01,2),i),null,null,null,"helper"]],END:[[new lt(new $0(.01,2),i),null,null,null,"helper"]],DELTA:[[new He(y(),i),null,null,null,"helper"]],X:[[new He(p,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new He(p,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new He(p,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]},I={XYZE:[[new lt(x(.5,1),m),null,[0,Math.PI/2,0]]],X:[[new lt(x(.5,.5),s)]],Y:[[new lt(x(.5,.5),o),null,[0,0,-Math.PI/2]]],Z:[[new lt(x(.5,.5),a),null,[0,Math.PI/2,0]]],E:[[new lt(x(.75,1),d),null,[0,Math.PI/2,0]]]},b={AXIS:[[new He(p,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]]},M={XYZE:[[new lt(new Vi(.25,10,8),n)]],X:[[new lt(new J0(.5,.1,4,24),n),[0,0,0],[0,-Math.PI/2,-Math.PI/2]]],Y:[[new lt(new J0(.5,.1,4,24),n),[0,0,0],[Math.PI/2,0,0]]],Z:[[new lt(new J0(.5,.1,4,24),n),[0,0,0],[0,0,-Math.PI/2]]],E:[[new lt(new J0(.75,.1,2,24),n)]]},L={X:[[new lt(g,s),[.5,0,0],[0,0,-Math.PI/2]],[new lt(v,s),[0,0,0],[0,0,-Math.PI/2]],[new lt(g,s),[-.5,0,0],[0,0,Math.PI/2]]],Y:[[new lt(g,o),[0,.5,0]],[new lt(v,o)],[new lt(g,o),[0,-.5,0],[0,0,Math.PI]]],Z:[[new lt(g,a),[0,0,.5],[Math.PI/2,0,0]],[new lt(v,a),[0,0,0],[Math.PI/2,0,0]],[new lt(g,a),[0,0,-.5],[-Math.PI/2,0,0]]],XY:[[new lt(new ve(.15,.15,.01),h),[.15,.15,0]]],YZ:[[new lt(new ve(.15,.15,.01),l),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new lt(new ve(.15,.15,.01),c),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new lt(new ve(.1,.1,.1),u.clone())]]},z={X:[[new lt(new Te(.2,0,.6,4),n),[.3,0,0],[0,0,-Math.PI/2]],[new lt(new Te(.2,0,.6,4),n),[-.3,0,0],[0,0,Math.PI/2]]],Y:[[new lt(new Te(.2,0,.6,4),n),[0,.3,0]],[new lt(new Te(.2,0,.6,4),n),[0,-.3,0],[0,0,Math.PI]]],Z:[[new lt(new Te(.2,0,.6,4),n),[0,0,.3],[Math.PI/2,0,0]],[new lt(new Te(.2,0,.6,4),n),[0,0,-.3],[-Math.PI/2,0,0]]],XY:[[new lt(new ve(.2,.2,.01),n),[.15,.15,0]]],YZ:[[new lt(new ve(.2,.2,.01),n),[0,.15,.15],[0,Math.PI/2,0]]],XZ:[[new lt(new ve(.2,.2,.01),n),[.15,0,.15],[-Math.PI/2,0,0]]],XYZ:[[new lt(new ve(.2,.2,.2),n),[0,0,0]]]},O={X:[[new He(p,i.clone()),[-1e3,0,0],null,[1e6,1,1],"helper"]],Y:[[new He(p,i.clone()),[0,-1e3,0],[0,0,Math.PI/2],[1e6,1,1],"helper"]],Z:[[new He(p,i.clone()),[0,0,-1e3],[0,-Math.PI/2,0],[1e6,1,1],"helper"]]};function V(X){const G=new Zt;for(const $ in X)for(let H=X[$].length;H--;){const nt=X[$][H][0].clone(),ht=X[$][H][1],xt=X[$][H][2],Nt=X[$][H][3],ee=X[$][H][4];nt.name=$,nt.tag=ee,ht&&nt.position.set(ht[0],ht[1],ht[2]),xt&&nt.rotation.set(xt[0],xt[1],xt[2]),Nt&&nt.scale.set(Nt[0],Nt[1],Nt[2]),nt.updateMatrix();const q=nt.geometry.clone();q.applyMatrix4(nt.matrix),nt.geometry=q,nt.renderOrder=1/0,nt.position.set(0,0,0),nt.rotation.set(0,0,0),nt.scale.set(1,1,1),G.add(nt)}return G}this.gizmo={},this.picker={},this.helper={},this.add(this.gizmo.translate=V(P)),this.add(this.gizmo.rotate=V(I)),this.add(this.gizmo.scale=V(L)),this.add(this.picker.translate=V(T)),this.add(this.picker.rotate=V(M)),this.add(this.picker.scale=V(z)),this.add(this.helper.translate=V(R)),this.add(this.helper.rotate=V(b)),this.add(this.helper.scale=V(O)),this.picker.translate.visible=!1,this.picker.rotate.visible=!1,this.picker.scale.visible=!1}updateMatrixWorld(t){const n=(this.mode==="scale"?"local":this.space)==="local"?this.worldQuaternion:Zr;this.gizmo.translate.visible=this.mode==="translate",this.gizmo.rotate.visible=this.mode==="rotate",this.gizmo.scale.visible=this.mode==="scale",this.helper.translate.visible=this.mode==="translate",this.helper.rotate.visible=this.mode==="rotate",this.helper.scale.visible=this.mode==="scale";let i=[];i=i.concat(this.picker[this.mode].children),i=i.concat(this.gizmo[this.mode].children),i=i.concat(this.helper[this.mode].children);for(let s=0;s<i.length;s++){const o=i[s];o.visible=!0,o.rotation.set(0,0,0),o.position.copy(this.worldPosition);let a;if(this.camera.isOrthographicCamera?a=(this.camera.top-this.camera.bottom)/this.camera.zoom:a=this.worldPosition.distanceTo(this.cameraPosition)*Math.min(1.9*Math.tan(Math.PI*this.camera.fov/360)/this.camera.zoom,7),o.scale.set(1,1,1).multiplyScalar(a*this.size/4),o.tag==="helper"){o.visible=!1,o.name==="AXIS"?(o.visible=!!this.axis,this.axis==="X"&&(me.setFromEuler(kr.set(0,0,0)),o.quaternion.copy(n).multiply(me),Math.abs(he.copy(os).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Y"&&(me.setFromEuler(kr.set(0,0,Math.PI/2)),o.quaternion.copy(n).multiply(me),Math.abs(he.copy(Vn).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="Z"&&(me.setFromEuler(kr.set(0,Math.PI/2,0)),o.quaternion.copy(n).multiply(me),Math.abs(he.copy(as).applyQuaternion(n).dot(this.eye))>.9&&(o.visible=!1)),this.axis==="XYZE"&&(me.setFromEuler(kr.set(0,Math.PI/2,0)),he.copy(this.rotationAxis),o.quaternion.setFromRotationMatrix(f2.lookAt(d2,he,Vn)),o.quaternion.multiply(me),o.visible=this.dragging),this.axis==="E"&&(o.visible=!1)):o.name==="START"?(o.position.copy(this.worldPositionStart),o.visible=this.dragging):o.name==="END"?(o.position.copy(this.worldPosition),o.visible=this.dragging):o.name==="DELTA"?(o.position.copy(this.worldPositionStart),o.quaternion.copy(this.worldQuaternionStart),Ve.set(1e-10,1e-10,1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1),Ve.applyQuaternion(this.worldQuaternionStart.clone().invert()),o.scale.copy(Ve),o.visible=this.dragging):(o.quaternion.copy(n),this.dragging?o.position.copy(this.worldPositionStart):o.position.copy(this.worldPosition),this.axis&&(o.visible=this.axis.search(o.name)!==-1));continue}o.quaternion.copy(n),this.mode==="translate"||this.mode==="scale"?(o.name==="X"&&Math.abs(he.copy(os).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Y"&&Math.abs(he.copy(Vn).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="Z"&&Math.abs(he.copy(as).applyQuaternion(n).dot(this.eye))>.99&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XY"&&Math.abs(he.copy(as).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="YZ"&&Math.abs(he.copy(os).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1),o.name==="XZ"&&Math.abs(he.copy(Vn).applyQuaternion(n).dot(this.eye))<.2&&(o.scale.set(1e-10,1e-10,1e-10),o.visible=!1)):this.mode==="rotate"&&(Vr.copy(n),he.copy(this.eye).applyQuaternion(me.copy(n).invert()),o.name.search("E")!==-1&&o.quaternion.setFromRotationMatrix(f2.lookAt(this.eye,d2,Vn)),o.name==="X"&&(me.setFromAxisAngle(os,Math.atan2(-he.y,he.z)),me.multiplyQuaternions(Vr,me),o.quaternion.copy(me)),o.name==="Y"&&(me.setFromAxisAngle(Vn,Math.atan2(he.x,he.z)),me.multiplyQuaternions(Vr,me),o.quaternion.copy(me)),o.name==="Z"&&(me.setFromAxisAngle(as,Math.atan2(he.y,he.x)),me.multiplyQuaternions(Vr,me),o.quaternion.copy(me))),o.visible=o.visible&&(o.name.indexOf("X")===-1||this.showX),o.visible=o.visible&&(o.name.indexOf("Y")===-1||this.showY),o.visible=o.visible&&(o.name.indexOf("Z")===-1||this.showZ),o.visible=o.visible&&(o.name.indexOf("E")===-1||this.showX&&this.showY&&this.showZ),o.material._color=o.material._color||o.material.color.clone(),o.material._opacity=o.material._opacity||o.material.opacity,o.material.color.copy(o.material._color),o.material.opacity=o.material._opacity,this.enabled&&this.axis&&(o.name===this.axis||this.axis.split("").some(function(l){return o.name===l}))&&(o.material.color.setHex(16776960),o.material.opacity=1)}super.updateMatrixWorld(t)}}class m8 extends lt{constructor(){super(new vn(1e5,1e5,2,2),new A0({visible:!1,wireframe:!0,side:b0,transparent:!0,opacity:.1,toneMapped:!1})),this.isTransformControlsPlane=!0,this.type="TransformControlsPlane"}updateMatrixWorld(t){let e=this.space;switch(this.position.copy(this.worldPosition),this.mode==="scale"&&(e="local"),Hr.copy(os).applyQuaternion(e==="local"?this.worldQuaternion:Zr),ns.copy(Vn).applyQuaternion(e==="local"?this.worldQuaternion:Zr),is.copy(as).applyQuaternion(e==="local"?this.worldQuaternion:Zr),he.copy(ns),this.mode){case"translate":case"scale":switch(this.axis){case"X":he.copy(this.eye).cross(Hr),I0.copy(Hr).cross(he);break;case"Y":he.copy(this.eye).cross(ns),I0.copy(ns).cross(he);break;case"Z":he.copy(this.eye).cross(is),I0.copy(is).cross(he);break;case"XY":I0.copy(is);break;case"YZ":I0.copy(Hr);break;case"XZ":he.copy(is),I0.copy(ns);break;case"XYZ":case"E":I0.set(0,0,0);break}break;case"rotate":default:I0.set(0,0,0)}I0.length()===0?this.quaternion.copy(this.cameraQuaternion):(p2.lookAt(Ve.set(0,0,0),I0,he),this.quaternion.setFromRotationMatrix(p2)),super.updateMatrixWorld(t)}}class g8 extends C0{constructor(t=10,e=10,n=1,i=4473924,s=8947848){const o=new dt(i),a=new dt(s),l=t/2,c=e/2,h=t*n/2,u=e*n/2,d=[],f=[];let m=0;for(let p=0;p<=t;p++){const v=-h+p*n;d.push(v,0,-u,v,0,u);const x=p===l?o:a;x.toArray(f,m),m+=3,x.toArray(f,m),m+=3}for(let p=0;p<=e;p++){const v=-u+p*n;d.push(-h,0,v,h,0,v);const x=p===c?o:a;x.toArray(f,m),m+=3,x.toArray(f,m),m+=3}const _=new Vt;_.setAttribute("position",new St(d,3)),_.setAttribute("color",new St(f,3));const g=new Fe({vertexColors:!0,toneMapped:!1});super(_,g)}dispose(){this.geometry.dispose(),this.material.dispose()}}class _8{constructor(){Se(this,"camera");Se(this,"scene");Se(this,"geometries");Se(this,"defaultMaterial");Se(this,"ground");Se(this,"unitSphere");Se(this,"selectedInstance");Se(this,"instances");Se(this,"quadScene");Se(this,"quadCamera");Se(this,"quadTexture");Se(this,"MakeImageQuad",()=>{const i=new Uint8Array(1048576);for(let c=0;c<262144;c++){const h=c*4,u=c%512,d=Math.floor(c/512),f=(Math.floor(u/100)+Math.floor(d/100))%2===0?255:50;i[h]=f,i[h+1]=f,i[h+2]=f/2,i[h+3]=255}const s=new E0(i,512,512);s.needsUpdate=!0;const o=new A0({map:s}),a=new vn(1,1),l=new lt(a,o);return l.scale.set(.8,.8,.8),this.quadTexture=s,l});Se(this,"GetInstanceById",t=>{for(let e=0;e<this.instances.children.length;e++)if(this.instances.children[e].id==t)return this.instances.children[e];return null});Se(this,"GetGeometryById",t=>{for(let e=0;e<this.geometries.length;e++)if(this.geometries[e].id==t)return this.geometries[e];return null});Se(this,"addShadowedLight",(t,e,n,i,s,o)=>{const a=new ul(i,s);a.position.set(t,e,n),o.add(a),a.castShadow=!0;const l=400;a.shadow.camera.left=-400,a.shadow.camera.right=l,a.shadow.camera.top=l,a.shadow.camera.bottom=-400,a.shadow.camera.near=1,a.shadow.camera.far=400,a.shadow.bias=-.002});const e=window.innerWidth/window.innerHeight,n=1,i=2e3;this.camera=new De(50,e,n,i),this.camera.up.set(0,0,1),this.camera.position.set(0,-400,150),this.camera.lookAt(200,125,0),this.scene=new Uo,this.scene.background=new dt(3355443),this.ground=new g8(40,20,10,6710886,4473924),this.ground.setRotationFromEuler(new Qe(1.5708,0,0)),this.ground.receiveShadow=!0,this.scene.add(this.ground),this.scene.add(new cl(3355443,1118481)),this.addShadowedLight(0,10,100,14540253,1.35,this.scene),this.addShadowedLight(200,0,100,13421772,1,this.scene);const s=15658734;this.defaultMaterial=new nl({color:s,specular:s}),this.unitSphere=new lt(new Hs(1,50),this.defaultMaterial),this.unitSphere.scale.set(30,30,30),this.scene.add(this.unitSphere),this.selectedInstance=[],this.geometries=[],this.instances=new Yn,this.scene.add(this.instances),this.quadScene=new Uo;const o=this.MakeImageQuad();this.quadScene.add(o),this.quadCamera=new Xs(-e,e),this.quadCamera.position.set(.2,.5,5)}}class x8{constructor(t,e,n){Se(this,"size");Se(this,"data");this.size=[t,e,n],this.data=new Float32Array(t*e*n)}_getIndex(t,e,n){return t+this.size[0]*(e+this.size[1]*n)}Get(t,e,n){const i=this._getIndex(t,e,n);return this.data[i]}Set(t,e,n,i){const s=this._getIndex(t,e,n);this.data[s]=i}TrilinearInterp(t,e=0){let n=Math.floor(t.x),i=Math.floor(t.y),s=Math.floor(t.z);if(n>=this.size[0]||i>=this.size[1]||s>=this.size[2])return e;n==this.size[0]-1&&n--,i==this.size[1]-1&&i--,s==this.size[2]-1&&s--;const o=n+1-t.x,a=i+1-t.y,l=s+1-t.z,c=o*this.Get(n,i,s)+(1-o)*this.Get(n+1,i,s),h=o*this.Get(n,i+1,s)+(1-o)*this.Get(n+1,i+1,s),u=o*this.Get(n,i,s+1)+(1-o)*this.Get(n+1,i,s+1),d=o*this.Get(n,i+1,s+1)+(1-o)*this.Get(n+1,i+1,s+1),f=a*c+(1-a)*h,m=a*u+(1-a)*d;return l*f+(1-l)*m}}var M0,y8=function(r,t,e,n){M0=r;var i=new M0.WebGLRenderTarget(1,1,{minFilter:M0.NearestFilter,magFilter:M0.NearestFilter,format:M0.RGBAFormat,encoding:M0.LinearEncoding}),s=new M0.Scene;s.onAfterRender=u;var o=new Uint8Array(4*i.width*i.height),a=new M0.Color(16777215),l=[],c=void 0,h=new M0.Color;this.pick=function(f,m,_){c=_;var g=t.domElement.width,p=t.domElement.height;n.setViewOffset(g,p,f,m,1,1);var v=t.getRenderTarget(),x=t.getClearAlpha();t.getClearColor(h),t.setRenderTarget(i),t.setClearColor(a),t.clear(),t.render(s,n),t.readRenderTargetPixels(i,0,0,i.width,i.height,o),t.setRenderTarget(v),t.setClearColor(h,x),n.clearViewOffset();var y=(o[0]<<24)+(o[1]<<16)+(o[2]<<8)+o[3];return y};function u(){var f=t.renderLists.get(e,0);f.opaque.forEach(d),f.transmissive.forEach(d),f.transparent.forEach(d)}function d(f){var m=f.object;if(!(c&&!c(m))){var _=m.id,g=f.material,p=f.geometry,v=0,x=f.object.pickingMaterial?f.object.pickingMaterial:l[v];if(!x){let y=M0.ShaderChunk.meshbasic_vert;x=new M0.ShaderMaterial({vertexShader:y,fragmentShader:`
          uniform vec4 objectId;
          void main() {
            gl_FragColor = objectId;
          }
        `,side:g.side}),x.uniforms={objectId:{value:[1,1,1,1]}},l[v]=x}x.uniforms.objectId.value=[(_>>24&255)/255,(_>>16&255)/255,(_>>8&255)/255,(_&255)/255],x.uniformsNeedUpdate=!0,t.renderBufferDirect(n,null,p,x,m,null)}}};class v8{parse(t){let e="",n=0;const i=new E,s=new dt,o=[];function a(h){let u=0;const d=h.geometry,f=d.getAttribute("position"),m=d.getIndex();if(e+="o "+h.name+`
`,h.material&&h.material.name&&(e+="usemtl "+h.material.name+`
`),f!==void 0)for(let _=0,g=f.count;_<g;_++,u++)i.fromBufferAttribute(f,_),i.applyMatrix4(h.matrixWorld),e+="v "+i.x+" "+i.y+" "+i.z+`
`;if(m!==null)for(let _=0,g=m.count;_<g;_+=3){for(let p=0;p<3;p++){const v=m.getX(_+p)+1;o[p]=n+v}e+="f "+o.join(" ")+`
`}else for(let _=0,g=f.count;_<g;_+=3){for(let p=0;p<3;p++){const v=_+p+1;o[p]=n+v}e+="f "+o.join(" ")+`
`}n+=u}function l(h){let u=0;const d=h.geometry,f=h.type,m=d.getAttribute("position");if(e+="o "+h.name+`
`,m!==void 0)for(let _=0,g=m.count;_<g;_++,u++)i.fromBufferAttribute(m,_),i.applyMatrix4(h.matrixWorld),e+="v "+i.x+" "+i.y+" "+i.z+`
`;if(f==="Line"){e+="l ";for(let _=1,g=m.count;_<=g;_++)e+=n+_+" ";e+=`
`}if(f==="LineSegments")for(let _=1,g=_+1,p=m.count;_<p;_+=2,g=_+1)e+="l "+(n+_)+" "+(n+g)+`
`;n+=u}function c(h){let u=0;const d=h.geometry,f=d.getAttribute("position"),m=d.getAttribute("color");if(e+="o "+h.name+`
`,f!==void 0){for(let _=0,g=f.count;_<g;_++,u++)i.fromBufferAttribute(f,_),i.applyMatrix4(h.matrixWorld),e+="v "+i.x+" "+i.y+" "+i.z,m!==void 0&&(s.fromBufferAttribute(m,_),Jt.fromWorkingColorSpace(s,Ze),e+=" "+s.r+" "+s.g+" "+s.b),e+=`
`;e+="p ";for(let _=1,g=f.count;_<=g;_++)e+=n+_+" ";e+=`
`}n+=u}return t.traverse(function(h){h.isMesh===!0&&a(h),h.isLine===!0&&l(h),h.isPoints===!0&&c(h)}),e}}class h0{constructor(t=0,e=0,n=0){Se(this,"x");Se(this,"y");Se(this,"z");this.x=t,this.y=e,this.z=n}get(t){if(t===0)return this.x;if(t===1)return this.y;if(t===2)return this.z}Set(t,e,n){this.x=t,this.y=e,this.z=n}setAt(t,e){t===0?this.x=e:t===1?this.y=e:t===2&&(this.z=e)}add(t){return new h0(this.x+t.x,this.y+t.y,this.z+t.z)}Mult(t){return new h0(this.x*t.x,this.y*t.y,this.z*t.z)}subtract(t){return new h0(this.x-t.x,this.y-t.y,this.z-t.z)}cross(t){return new h0(this.y*t.z-this.z*t.y,-this.x*t.z+this.z*t.x,this.x*t.y-this.y*t.x)}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}norm2(){return this.x*this.x+this.y*this.y+this.z*this.z}norm(){return Math.sqrt(this.norm2())}}function M8(r,t,e){const n=e.subtract(t),i=r.subtract(t);if(i.dot(n)<=0||n.norm()<1e-6)return i.norm();const s=r.subtract(e);return s.dot(n)>=0?s.norm():n.cross(i).norm()/n.norm()}function S8(r,t,e,n){const i=e.size,s=new h0;for(let o=0;o<i[0];o++)for(let a=0;a<i[1];a++)for(let l=0;l<i[2];l++){s.Set(o,a,l);const c=s.Mult(n),h=M8(c,r,t);h<e.Get(o,a,l)&&e.Set(o,a,l,h)}}function Ml(r,t,e,n,i){for(let s=0;s<r;s++){const o=new h0(t[s][0],t[s][1],t[s][2]),a=new h0(t[s][3],t[s][4],t[s][5]),l=o.Mult(i),c=a.Mult(i);S8(l,c,e,n)}}function b8(r,t,e){return e.data.fill(1e4),Ml(28,[[.25,.25,.25,0,0,0],[.25,.25,.25,.5,.5,0],[.25,.25,.25,.5,0,.5],[.25,.25,.25,0,.5,.5],[.75,.75,.25,1,1,0],[.75,.75,.25,.5,.5,0],[.75,.75,.25,1,.5,.5],[.75,.75,.25,.5,1,.5],[.25,.75,.75,.5,.5,1],[.25,.75,.75,0,1,1],[.25,.75,.75,0,.5,.5],[.25,.75,.75,.5,1,.5],[.75,.25,.75,1,0,1],[.75,.25,.75,.5,0,.5],[.75,.25,.75,1,.5,.5],[.75,.25,.75,.5,.5,1],[1,0,0,1.25,.25,.25],[1,0,0,.75,-.25,.25],[1,0,0,.75,.25,-.25],[0,1,0,-.25,.75,.25],[0,1,0,.25,1.25,.25],[0,1,0,.25,.75,-.25],[0,0,1,-.25,.25,.75],[0,0,1,.25,-.25,.75],[0,0,1,.25,.25,1.25],[1,1,1,1.25,.75,.75],[1,1,1,.75,1.25,.75],[1,1,1,.75,.75,1.25]],e,r,t),e}function w8(r,t,e){e.data.fill(1e4);const n=6.2831853,i=1.3,s=e.size,o=.32/i*t.x,a=1/(s[0]-1)*n,l=1/(s[1]-1)*n,c=1/(s[2]-1)*n;for(let h=0;h<s[2];h++){const u=h*c;for(let d=0;d<s[1];d++){const f=d*l;for(let m=0;m<s[0];m++){const _=m*a,g=Math.sin(_)*Math.cos(f)+Math.sin(f)*Math.cos(u)+Math.sin(u)*Math.cos(_);e.Set(m,d,h,o*Math.abs(g))}}}}function E8(r,t,e){e.data.fill(1e4);const n=32,i=Array.from({length:32},()=>Array(6)),s=8,o=14,a=[[.25,.25,.25],[.75,.25,.25],[.25,.75,.25],[.75,.75,.25],[.25,.25,.75],[.75,.25,.75],[.25,.75,.75],[.75,.75,.75]],l=[[0,0,0],[1,0,0],[0,1,0],[1,1,0],[0,0,1],[1,0,1],[0,1,1],[1,1,1],[.5,.5,0],[.5,.5,1],[.5,0,.5],[.5,1,.5],[0,.5,.5],[1,.5,.5]];let c=0;const h=.44,u=new h0,d=new h0;for(let f=0;f<s;f++)for(let m=0;m<o;m++)if(u.Set(a[f][0],a[f][1],a[f][2]),d.Set(l[m][0],l[m][1],l[m][2]),u.subtract(d).norm()<h&&c<n){for(let g=0;g<3;g++)i[c][g]=a[f][g],i[c][g+3]=l[m][g];c++}return Ml(n,i,e,r,t),e}function T8(r,t,e){return e.data.fill(1e4),Ml(20,[[0,0,0,1,1,0],[1,0,0,0,1,0],[0,0,1,1,1,1],[1,0,1,0,1,1],[0,0,0,1,0,1],[1,0,0,0,0,1],[0,1,0,1,1,1],[1,1,0,0,1,1],[0,0,0,0,1,1],[0,0,1,0,1,0],[1,0,0,1,1,1],[1,0,1,1,1,0],[.5,.5,0,.5,0,.5],[.5,.5,0,.5,1,.5],[.5,.5,0,0,.5,.5],[.5,.5,0,1,.5,.5],[.5,.5,1,.5,0,.5],[.5,.5,1,.5,1,.5],[.5,.5,1,0,.5,.5],[.5,.5,1,1,.5,.5]],e,r,t),e}const A8=[0,.009199,.0107,.01183,.01502,.01782,.0189,.01998,.02111,.02224,.02293,.0235,.02406,.02463,.0253,.02619,.02707,.02842,.03016,.03162,.03268,.03313,.03358,.03402,.03447,.03492,.0355,.0361,.0367,.0373,.03841,.03979,.04075,.04164,.04252,.04312,.04373,.04433,.04494,.04531,.04565,.04599,.04633,.04667,.04701,.04735,.04776,.04824,.04872,.04919,.04967,.05018,.05076,.05134,.05191,.05249,.05299,.05348,.05398,.05448,.05497,.05591,.05686,.05768,.05822,.05876,.0593,.05984,.0602,.06048,.06076,.06104,.06133,.06161,.06189,.06217,.06245,.06295,.06349,.06403,.06457,.06519,.06615,.0671,.06767,.06795,.06823,.06851,.06879,.06908,.06936,.06964,.06992,.07022,.07053,.07085,.07116,.07147,.07178,.07209,.0724,.07275,.07313,.0735,.07388,.07426,.07463,.07501,.07537,.07574,.0761,.07647,.07683,.0772,.07758,.07803,.07848,.07893,.07938,.07984,.08028,.08071,.08115,.08158,.08202,.08245,.08302,.08359,.08417,.08475,.08515,.0854,.08566,.08592,.08618,.08643,.08669,.08695,.08721,.08746,.08782,.0882,.08857,.08895,.08932,.08969,.09005,.09031,.09056,.09082,.09108,.09134,.0916,.09186,.09212,.09238,.09273,.09318,.09364,.09409,.09454,.09499,.09535,.09571,.09607,.09643,.09679,.09715,.09751,.09775,.09799,.09823,.09847,.09871,.09895,.09919,.09944,.09968,.09992,.1002,.1005,.1008,.1011,.1014,.1017,.1019,.1022,.1025,.103,.1035,.104,.1045,.105,.1054,.1057,.106,.1063,.1067,.107,.1073,.1077,.108,.1083,.1086,.109,.1093,.1096,.1099,.1103,.1106,.111,.1113,.1117,.112,.1124,.1126,.1128,.113,.1132,.1134,.1135,.1137,.1139,.1141,.1143,.1145,.1147,.1149,.1151,.1154,.1157,.116,.1163,.1166,.1169,.1172,.1175,.1179,.1184,.1188,.1192,.1196,.12,.1203,.1206,.1208,.1211,.1214,.1217,.1219,.1222,.1225,.1227,.123,.1232,.1235,.1237,.1239,.1242,.1244,.1247,.1249,.1252,.1255,.1257,.126,.1263,.1265,.1268,.1271,.1273,.1276,.1279,.1283,.1286,.1289,.1292,.1295,.1298,.1302,.1305,.1308,.1312,.1315,.1318,.1322,.1325,.1329,.1333,.1336,.134,.1344,.1348,.1351,.1353,.1354,.1356,.1358,.136,.1362,.1364,.1365,.1367,.1369,.1371,.1373,.1375,.1377,.138,.1382,.1385,.1387,.139,.1392,.1395,.1397,.14,.1403,.1405,.1408,.1411,.1414,.1416,.1419,.1422,.1425,.1428,.1431,.1434,.1437,.144,.1443,.1446,.1449,.1453,.1456,.1459,.1462,.1466,.1469,.1472,.1475,.1478,.1481,.1484,.1487,.149,.1492,.1495,.1498,.1501,.1503,.1505,.1507,.1509,.1512,.1514,.1516,.1518,.152,.1522,.1525,.1527,.153,.1533,.1536,.1539,.1542,.1545,.1548,.1551,.1554,.1557,.156,.1563,.1565,.1568,.1571,.1574,.1577,.1579,.1582,.1585,.1588,.159,.1593,.1596,.1599,.1601,.1604,.1606,.1609,.1611,.1614,.1616,.1619,.1621,.1623,.1626,.1628,.1631,.1633,.1635,.1638,.164,.1642,.1645,.1647,.1649,.1652,.1654,.1656,.1658,.1661,.1663,.1665,.1668,.167,.1672,.1675,.1678,.1681,.1684,.1687,.169,.1693,.1696,.1699,.1703,.1707,.171,.1714,.1718,.1722,.1725,.1728,.173,.1733,.1735,.1738,.174,.1742,.1745,.1747,.175,.1752,.1755,.1758,.176,.1763,.1766,.1768,.1771,.1774,.1776,.1778,.1781,.1783,.1785,.1788,.179,.1793,.1795,.1797,.18,.1802,.1804,.1806,.1807,.1809,.1811,.1813,.1815,.1817,.1819,.1821,.1823,.1825,.1829,.1832,.1836,.184,.1843,.1847,.185,.1854,.1857,.186,.1864,.1867,.1871,.1874,.1876,.1879,.1881,.1883,.1885,.1887,.1889,.1891,.1893,.1895,.1897,.1899,.1902,.1904,.1906,.1908,.191,.1913,.1915,.1917,.1919,.1921,.1923,.1926,.193,.1934,.1938,.1942,.1946,.195,.1953,.1957,.196,.1963,.1966,.1969,.1973,.1976,.1979,.1982,.1986,.1989,.1992,.1996,.1999,.2002,.2004,.2006,.2009,.2011,.2014,.2016,.2018,.2021,.2023,.2026,.2028,.203,.2032,.2034,.2036,.2039,.2041,.2043,.2045,.2047,.2049,.2052,.2054,.2056,.2059,.2061,.2064,.2066,.2069,.2071,.2073,.2076,.2079,.2082,.2085,.2088,.2091,.2095,.2098,.2101,.2103,.2105,.2108,.211,.2112,.2115,.2117,.2119,.2122,.2124,.2127,.213,.2134,.2137,.2141,.2144,.2148,.2151,.2154,.2157,.216,.2163,.2166,.2169,.2172,.2175,.2178,.218,.2182,.2185,.2187,.219,.2192,.2195,.2197,.22,.2203,.2207,.221,.2214,.2218,.2221,.2225,.2228,.2232,.2236,.2239,.2243,.2246,.225,.2252,.2254,.2255,.2257,.2259,.2261,.2263,.2264,.2266,.2268,.227,.2272,.2274,.2276,.2278,.2281,.2284,.2287,.229,.2292,.2295,.2298,.2301,.2303,.2306,.2309,.2311,.2314,.2317,.232,.2322,.2325,.2327,.233,.2332,.2335,.2337,.234,.2342,.2344,.2347,.2349,.2352,.2356,.2359,.2362,.2365,.2369,.2372,.2375,.2379,.2382,.2386,.2389,.2393,.2396,.24,.2403,.2406,.2409,.2412,.2415,.2419,.2422,.2425,.2427,.2429,.2432,.2434,.2436,.2438,.244,.2443,.2445,.2447,.2449,.2453,.2457,.2461,.2464,.2468,.2472,.2476,.2478,.2481,.2484,.2487,.2489,.2492,.2495,.2498,.25,.2503,.2506,.2508,.2511,.2513,.2516,.2518,.2521,.2523,.2526,.2528,.2531,.2534,.2536,.2539,.2542,.2544,.2547,.255,.2552,.2554,.2556,.2559,.2561,.2563,.2565,.2567,.257,.2572,.2574,.2577,.258,.2583,.2586,.2589,.2592,.2595,.2598,.2601,.2604,.2607,.2609,.2612,.2615,.2618,.2621,.2624,.2627,.263,.2633,.2637,.264,.2643,.2646,.265,.2653,.2657,.266,.2664,.2667,.2671,.2674,.2677,.2679,.2682,.2684,.2687,.2689,.2692,.2694,.2696,.2699,.2701,.2704,.2706,.2709,.2711,.2714,.2717,.2719,.2722,.2724,.2727,.2731,.2734,.2738,.2741,.2744,.2748,.2752,.2756,.2761,.2765,.277,.2775,.2777,.2779,.2781,.2783,.2785,.2787,.2789,.279,.2792,.2794,.2796,.2798,.28,.2804,.2807,.281,.2813,.2816,.2819,.2822,.2826,.2829,.2832,.2835,.2838,.2842,.2845,.2848,.2851,.2855,.2859,.2863,.2866,.287,.2874,.2877,.2881,.2884,.2887,.2891,.2894,.2897,.2901,.2905,.291,.2915,.292,.2924,.2927,.293,.2933,.2936,.2938,.2941,.2944,.2947,.2949,.2952,.2955,.2957,.296,.2963,.2965,.2968,.2971,.2973,.2976,.2981,.2985,.2989,.2993,.2998,.3002,.3005,.3009,.3012,.3016,.302,.3023,.3027,.303,.3034,.3038,.3041,.3045,.3048,.3052,.3055,.3059,.3062,.3066,.3069,.3072,.3076,.3079,.3083,.3087,.3091,.3094,.3098,.3102,.3107,.3112,.3116,.3121,.3126,.313,.3134,.3138,.3142,.3147,.3151,.3156,.3161,.3166,.3171,.3176,.3179,.3183,.3187,.3191,.3194,.3198,.3203,.3208,.3214,.3219,.3225,.3229,.3233,.3237,.324,.3244,.3248,.3253,.3259,.3266,.3272,.3278,.3285,.3292,.3298,.3304,.3308,.3313,.3317,.3322,.3327,.3332,.3338,.3343,.3348,.3355,.3361,.3368,.3375,.3381,.3388,.3394,.3401,.341,.3419,.3429,.344,.3451,.3457,.3464,.347,.3477,.3487,.3497,.3508,.3522,.3536,.3551,.3565,.3579,.3592,.3609,.3629,.3664,.3699,.3717,.3767,.3821,.405],C8=[0,.01817,.02348,.02757,.03087,.03359,.03615,.03855,.04089,.04316,.04538,.0474,.04943,.05124,.05296,.05469,.05638,.05806,.05975,.06136,.06297,.06458,.06614,.06768,.06922,.0707,.07212,.07353,.07495,.07652,.0781,.07968,.08093,.0821,.08328,.08445,.08561,.08677,.08793,.08909,.09025,.09144,.09263,.09382,.09501,.09594,.09687,.0978,.09873,.09966,.1007,.1018,.1029,.104,.1051,.106,.107,.1079,.1088,.1097,.1107,.1118,.1128,.1138,.1148,.1159,.1169,.1179,.1189,.1199,.1209,.1219,.1229,.1239,.1249,.1257,.1265,.1273,.1281,.1289,.1297,.1306,.1314,.1323,.1331,.134,.1348,.1357,.1365,.1373,.1381,.1388,.1396,.1404,.1412,.1419,.1426,.1434,.1441,.1449,.1457,.1465,.1473,.1481,.1489,.1497,.1505,.1512,.1519,.1526,.1533,.154,.1547,.1555,.1563,.1572,.1581,.1589,.1598,.1606,.1613,.162,.1628,.1635,.1642,.1649,.1657,.1665,.1673,.1681,.1689,.1697,.1704,.171,.1717,.1723,.1729,.1736,.1742,.1748,.1756,.1763,.1771,.1779,.1787,.1794,.1802,.1807,.1813,.1819,.1825,.183,.1836,.1842,.1848,.1854,.1862,.1869,.1876,.1883,.1891,.1898,.1904,.1911,.1917,.1923,.1929,.1936,.1942,.1948,.1954,.196,.1967,.1973,.1979,.1985,.1991,.1997,.2004,.2011,.2017,.2024,.2031,.2038,.2045,.2052,.2058,.2064,.2071,.2077,.2083,.209,.2096,.2102,.2109,.2116,.2123,.2129,.2136,.2143,.215,.2155,.2161,.2167,.2173,.2178,.2184,.219,.2196,.2201,.2208,.2214,.222,.2226,.2232,.2238,.2244,.225,.2256,.2261,.2267,.2272,.2278,.2283,.2289,.2294,.23,.2306,.2312,.2318,.2324,.2331,.2337,.2343,.2349,.2355,.236,.2366,.2371,.2377,.2382,.2388,.2393,.2399,.2405,.2411,.2417,.2423,.2429,.2435,.2442,.2448,.2454,.2459,.2465,.247,.2476,.2482,.2487,.2493,.2498,.2504,.251,.2516,.2521,.2527,.2533,.2539,.2545,.255,.2556,.2562,.2567,.2573,.2579,.2585,.259,.2596,.2602,.2608,.2613,.2619,.2625,.2631,.2637,.2642,.2648,.2654,.2659,.2665,.267,.2676,.2681,.2687,.2692,.2698,.2703,.2708,.2713,.2718,.2723,.2728,.2732,.2737,.2742,.2747,.2753,.2758,.2764,.277,.2776,.2781,.2787,.2793,.2799,.2804,.2809,.2814,.2819,.2824,.283,.2835,.284,.2845,.285,.2856,.2862,.2867,.2873,.2879,.2885,.2891,.2896,.2902,.2908,.2914,.2919,.2925,.2931,.2937,.2942,.2948,.2954,.2959,.2965,.297,.2976,.2981,.2987,.2992,.2998,.3003,.3009,.3014,.3019,.3025,.303,.3035,.304,.3046,.3051,.3056,.3062,.3067,.3072,.3078,.3083,.3088,.3093,.3099,.3104,.3109,.3114,.3119,.3124,.3129,.3134,.3139,.3144,.3149,.3154,.316,.3165,.317,.3176,.3181,.3186,.3192,.3197,.3202,.3208,.3213,.3218,.3223,.3229,.3234,.3239,.3244,.325,.3255,.326,.3265,.327,.3275,.328,.3285,.329,.3295,.33,.3306,.3311,.3317,.3322,.3327,.3333,.3338,.3343,.3349,.3354,.336,.3366,.3371,.3377,.3383,.3389,.3394,.34,.3405,.341,.3415,.342,.3425,.343,.3435,.344,.3445,.3451,.3456,.3462,.3468,.3474,.3479,.3485,.3491,.3497,.3502,.3507,.3512,.3517,.3522,.3526,.3531,.3536,.3541,.3546,.3551,.3556,.3561,.3566,.3571,.3576,.3581,.3586,.3591,.3596,.3601,.3606,.3611,.3617,.3622,.3627,.3633,.3638,.3643,.3648,.3654,.3659,.3665,.3671,.3676,.3682,.3687,.3693,.3698,.3704,.3709,.3714,.372,.3725,.373,.3736,.3741,.3746,.3751,.3756,.3761,.3766,.3771,.3776,.3781,.3786,.3791,.3796,.3801,.3808,.3814,.382,.3827,.3833,.384,.3846,.3852,.3856,.3861,.3866,.3871,.3875,.388,.3885,.3889,.3894,.3899,.3905,.3911,.3917,.3923,.3929,.3935,.3941,.3947,.3953,.3958,.3963,.3968,.3973,.3978,.3983,.3988,.3993,.3998,.4004,.401,.4015,.4021,.4027,.4032,.4038,.4044,.4049,.4054,.4059,.4064,.4069,.4074,.4079,.4084,.4089,.4094,.4099,.4104,.411,.4116,.4122,.4128,.4134,.414,.4146,.4151,.4156,.4161,.4166,.4171,.4176,.4181,.4186,.4191,.4196,.4202,.4207,.4213,.4219,.4224,.423,.4235,.4241,.4247,.4253,.4259,.4266,.4272,.4279,.4285,.4292,.4298,.4303,.4308,.4313,.4317,.4322,.4326,.4331,.4336,.434,.4345,.435,.4356,.4362,.4369,.4375,.4381,.4388,.4394,.44,.4405,.441,.4415,.442,.4424,.4429,.4434,.4439,.4444,.4448,.4454,.446,.4466,.4472,.4478,.4484,.449,.4496,.4502,.4507,.4512,.4518,.4523,.4529,.4534,.4539,.4545,.455,.4556,.4562,.4567,.4573,.4579,.4585,.4591,.4596,.4602,.4607,.4612,.4617,.4622,.4628,.4633,.4638,.4643,.4648,.4654,.466,.4666,.4671,.4677,.4683,.4689,.4695,.4701,.4707,.4713,.472,.4726,.4732,.4738,.4745,.4751,.4756,.4761,.4766,.4771,.4776,.4781,.4786,.4791,.4796,.4802,.4808,.4814,.482,.4825,.4831,.4837,.4843,.4849,.4854,.486,.4865,.487,.4875,.488,.4885,.489,.4896,.4901,.4906,.4912,.4917,.4923,.4929,.4934,.494,.4945,.4951,.4957,.4962,.4968,.4974,.4979,.4985,.4991,.4996,.5002,.5008,.5013,.5019,.5024,.503,.5036,.5041,.5047,.5052,.5058,.5064,.5069,.5075,.5081,.5086,.5092,.5098,.5103,.5109,.5114,.512,.5126,.5131,.5137,.5142,.5148,.5154,.516,.5166,.5172,.5178,.5184,.519,.5196,.5202,.5207,.5212,.5217,.5222,.5227,.5232,.5237,.5242,.5247,.5253,.5259,.5265,.5271,.5277,.5283,.5289,.5295,.5301,.5307,.5312,.5317,.5323,.5328,.5334,.5339,.5344,.535,.5356,.5361,.5367,.5373,.5379,.5385,.5391,.5397,.5402,.5408,.5414,.542,.5426,.5432,.5437,.5443,.5449,.5455,.546,.5466,.5472,.5478,.5483,.5489,.5495,.55,.5507,.5513,.5519,.5525,.5531,.5538,.5544,.555,.5556,.5562,.5568,.5575,.5581,.5587,.5593,.5599,.5606,.5612,.5619,.5625,.5632,.5638,.5645,.5651,.5657,.5662,.5667,.5673,.5678,.5683,.5688,.5694,.5699,.5706,.5714,.5721,.5728,.5736,.5743,.575,.5756,.5761,.5767,.5773,.5778,.5784,.5789,.5795,.5801,.5808,.5815,.5822,.5829,.5837,.5844,.5851,.5857,.5863,.587,.5876,.5883,.5889,.5896,.5902,.5909,.5916,.5922,.5929,.5936,.5943,.595,.5957,.5964,.5972,.5979,.5987,.5994,.6001,.6008,.6015,.6022,.6029,.6036,.6043,.605,.6058,.6066,.6074,.6083,.6091,.6099,.6106,.6113,.612,.6126,.6133,.614,.6146,.6154,.6162,.6171,.6179,.6187,.6196,.6203,.6211,.6218,.6226,.6233,.6241,.6248,.6257,.6266,.6275,.6285,.6294,.6302,.631,.6318,.6326,.6334,.6342,.635,.636,.6369,.6379,.6388,.6397,.6407,.6417,.6426,.6436,.6446,.6455,.6465,.6475,.6485,.6495,.6504,.6514,.6524,.6533,.6543,.6553,.6563,.6574,.6585,.6596,.6607,.6619,.6631,.6643,.6654,.6666,.6677,.6689,.67,.6713,.6727,.674,.6753,.6767,.6782,.6796,.681,.6824,.6838,.6852,.6868,.6884,.6899,.6919,.6939,.6958,.6977,.6996,.702,.7045,.707,.7095,.7126,.7159,.7192,.723,.7271,.7317,.7376,.7435,.7519,.7638,.805],R8=[0,.029,.03405,.03986,.04668,.05027,.05379,.05722,.06104,.06654,.06942,.07174,.07406,.07675,.07967,.08261,.08596,.08932,.09156,.09352,.09548,.09744,.09976,.1021,.1044,.1072,.1101,.1128,.1143,.1158,.1174,.1189,.1206,.1227,.1248,.1268,.1289,.131,.1331,.1351,.1365,.1379,.1394,.1408,.1422,.1439,.1456,.1472,.1489,.1507,.1526,.1544,.1563,.158,.1593,.1605,.1618,.1631,.1643,.1657,.1673,.1689,.1704,.172,.1736,.1754,.1771,.1788,.1803,.1814,.1825,.1836,.1847,.1858,.1868,.1881,.1896,.1911,.1925,.194,.1955,.1968,.1982,.1996,.2009,.2023,.2034,.2045,.2056,.2067,.2078,.2089,.21,.2112,.2124,.2137,.2149,.2161,.2174,.2188,.2203,.2217,.2232,.2246,.2257,.2267,.2277,.2287,.2296,.2306,.2316,.2326,.2338,.235,.2362,.2373,.2385,.2397,.241,.2423,.2436,.2449,.2462,.2475,.2484,.2493,.2502,.2511,.2521,.253,.2539,.2548,.2559,.257,.2581,.2592,.2603,.2614,.2625,.2637,.2648,.2659,.2671,.2682,.2693,.2703,.2712,.2721,.273,.2739,.2748,.2757,.2765,.2774,.2785,.2795,.2806,.2817,.2827,.2838,.2848,.2859,.287,.2881,.2892,.2903,.2914,.2925,.2934,.2943,.2952,.296,.2969,.2978,.2987,.2996,.3005,.3015,.3025,.3035,.3045,.3054,.3064,.3074,.3085,.3095,.3106,.3117,.3128,.3139,.3149,.3157,.3165,.3173,.318,.3188,.3196,.3203,.3211,.3219,.3227,.3237,.3246,.3256,.3265,.3275,.3285,.3294,.3304,.3314,.3324,.3334,.3344,.3354,.3365,.3375,.3383,.3391,.34,.3408,.3416,.3424,.3433,.3441,.3449,.3458,.3467,.3475,.3484,.3493,.3502,.351,.3519,.3528,.3538,.3549,.3559,.3569,.3579,.3589,.36,.3607,.3615,.3622,.363,.3637,.3645,.3653,.366,.3668,.3675,.3684,.3693,.3702,.3712,.3721,.373,.3739,.3748,.3757,.3766,.3775,.3784,.3793,.3803,.3812,.3821,.3829,.3837,.3844,.3852,.386,.3867,.3875,.3883,.389,.3898,.3906,.3915,.3924,.3932,.3941,.3949,.3958,.3966,.3975,.3984,.3993,.4002,.4011,.402,.403,.4039,.4048,.4056,.4063,.407,.4078,.4085,.4093,.41,.4107,.4115,.4122,.413,.4139,.4147,.4156,.4164,.4173,.4181,.419,.4198,.4207,.4217,.4226,.4236,.4245,.4255,.4264,.4274,.4281,.4288,.4295,.4302,.4309,.4316,.4323,.433,.4337,.4344,.4351,.436,.4368,.4377,.4386,.4394,.4403,.4411,.442,.4428,.4437,.4446,.4455,.4463,.4472,.4481,.449,.4498,.4506,.4513,.4519,.4526,.4533,.454,.4547,.4554,.4561,.4568,.4575,.4583,.4591,.46,.4608,.4616,.4625,.4633,.4642,.465,.4658,.4667,.4675,.4684,.4692,.4701,.4709,.4718,.4726,.4734,.4741,.4749,.4757,.4764,.4772,.478,.4787,.4795,.4803,.481,.4818,.4825,.4833,.4841,.4848,.4856,.4864,.4871,.488,.4889,.4899,.4908,.4918,.4927,.4936,.4946,.4954,.4961,.4967,.4974,.4981,.4988,.4994,.5001,.5008,.5015,.5021,.5029,.5037,.5045,.5053,.5061,.5069,.5078,.5086,.5094,.5102,.5111,.5119,.5128,.5136,.5145,.5153,.5162,.5171,.5178,.5185,.5192,.5199,.5206,.5213,.522,.5226,.5233,.524,.5247,.5255,.5264,.5273,.5281,.529,.5299,.5308,.5316,.5325,.5333,.5342,.535,.5358,.5366,.5375,.5383,.5391,.5399,.5407,.5414,.5421,.5428,.5436,.5443,.545,.5457,.5465,.5472,.5479,.5487,.5495,.5503,.5511,.5518,.5526,.5534,.5542,.555,.5558,.5567,.5576,.5585,.5593,.5602,.5611,.5619,.5628,.5635,.5642,.5649,.5656,.5664,.5671,.5678,.5685,.5692,.57,.5707,.5715,.5723,.5731,.5739,.5746,.5754,.5762,.577,.5778,.5787,.5796,.5805,.5814,.5823,.5832,.5841,.585,.5857,.5864,.5871,.5878,.5885,.5893,.59,.5907,.5914,.5921,.5928,.5937,.5945,.5953,.5962,.597,.5978,.5987,.5995,.6004,.6012,.6021,.6029,.6038,.6047,.6055,.6064,.6073,.608,.6088,.6096,.6103,.6111,.6118,.6126,.6133,.6141,.6148,.6156,.6165,.6173,.6181,.6189,.6197,.6206,.6214,.6222,.6231,.6239,.6248,.6256,.6265,.6273,.6282,.629,.6299,.6307,.6314,.6321,.6329,.6336,.6344,.6351,.6358,.6366,.6373,.6381,.639,.6398,.6407,.6415,.6424,.6432,.6441,.6449,.6458,.6466,.6474,.6483,.6491,.65,.6508,.6517,.6525,.6533,.6541,.6549,.6557,.6564,.6572,.658,.6588,.6596,.6604,.6612,.662,.6629,.6637,.6645,.6654,.6662,.667,.6679,.6688,.6696,.6705,.6714,.6723,.6731,.674,.6749,.6757,.6764,.6772,.678,.6787,.6795,.6803,.681,.6818,.6826,.6834,.6843,.6851,.686,.6868,.6877,.6885,.6894,.6902,.6911,.692,.6928,.6937,.6946,.6955,.6963,.6972,.698,.6987,.6995,.7002,.701,.7017,.7025,.7032,.704,.7047,.7055,.7064,.7073,.7081,.709,.7099,.7107,.7116,.7125,.7134,.7143,.7151,.716,.7169,.7178,.7187,.7196,.7204,.7212,.722,.7227,.7235,.7243,.7251,.7258,.7266,.7274,.7282,.729,.7299,.7307,.7315,.7324,.7332,.734,.7349,.7357,.7366,.7375,.7383,.7392,.7401,.741,.7419,.7427,.7435,.7443,.7451,.7458,.7466,.7474,.7482,.749,.7497,.7506,.7514,.7522,.7531,.7539,.7547,.7556,.7564,.7572,.7581,.7591,.76,.7609,.7619,.7628,.7637,.7647,.7655,.7662,.767,.7677,.7685,.7692,.77,.7707,.7715,.7722,.7731,.774,.7749,.7757,.7766,.7775,.7784,.7793,.7802,.781,.7819,.7827,.7835,.7844,.7852,.7861,.7869,.7878,.7886,.7894,.7902,.791,.7918,.7927,.7935,.7943,.7951,.796,.7969,.7977,.7986,.7995,.8003,.8012,.8021,.803,.8038,.8047,.8056,.8065,.8074,.8083,.8091,.81,.8109,.8117,.8125,.8133,.8142,.815,.8158,.8166,.8175,.8184,.8192,.8201,.821,.8219,.8228,.8237,.8245,.8255,.8265,.8275,.8285,.8295,.8304,.8314,.8324,.8333,.8341,.8349,.8357,.8365,.8373,.8381,.8389,.8397,.8406,.8416,.8426,.8437,.8447,.8457,.8467,.8477,.8487,.8496,.8505,.8515,.8524,.8534,.8543,.8552,.8561,.857,.8579,.8588,.8596,.8605,.8614,.8623,.8632,.8643,.8653,.8663,.8673,.8683,.8693,.8703,.8713,.8723,.8733,.8743,.8753,.8763,.8773,.8783,.8793,.8803,.8813,.8823,.8833,.8843,.8853,.8863,.8873,.8883,.8893,.8903,.8913,.8923,.8934,.8946,.8958,.897,.8982,.8993,.9004,.9014,.9024,.9034,.9044,.9054,.9063,.9073,.9084,.9096,.9107,.9119,.913,.9142,.9153,.9165,.9177,.9189,.9201,.9214,.9226,.9236,.9247,.9258,.9268,.9279,.929,.93,.9313,.9326,.9339,.9353,.9366,.9379,.9391,.9404,.9417,.943,.9443,.9455,.9468,.9481,.9493,.9506,.9519,.9532,.9545,.9558,.9572,.9585,.9598,.9613,.9628,.9644,.9659,.9674,.9688,.9702,.9716,.9729,.9743,.9758,.9773,.9789,.9804,.982,.9836,.9853,.987,.9887,.9904,.992,.9936,.9952,.9969,.9986,1,1.002,1.004,1.006,1.008,1.01,1.012,1.014,1.016,1.018,1.02,1.022,1.025,1.027,1.029,1.032,1.034,1.037,1.039,1.042,1.045,1.048,1.051,1.055,1.058,1.062,1.066,1.071,1.076,1.081,1.087,1.093,1.1,1.109,1.119,1.132,1.148,1.222],P8=[0,.03849,.04694,.05479,.06195,.0676,.07267,.0773,.08196,.08665,.09115,.0952,.09924,.1031,.1069,.1106,.1138,.117,.1201,.1234,.1267,.13,.133,.1359,.1389,.1419,.145,.148,.151,.1542,.1573,.1603,.1626,.165,.1673,.1697,.172,.1743,.1766,.1789,.1813,.1836,.1859,.1882,.1904,.1923,.1942,.1961,.1981,.2,.2022,.2044,.2067,.2089,.211,.2129,.2149,.2168,.2188,.2208,.2228,.2248,.2268,.2288,.2308,.2327,.2346,.2365,.2385,.2404,.2424,.2445,.2465,.2485,.2504,.2521,.2538,.2555,.2572,.2589,.2606,.2623,.264,.2658,.2675,.2692,.2708,.2724,.274,.2755,.2771,.2787,.2802,.2818,.2833,.2849,.2865,.288,.2896,.2912,.2928,.2945,.2961,.2978,.2994,.3009,.3023,.3037,.3051,.3065,.3079,.3093,.3109,.3125,.3141,.3157,.3174,.319,.3206,.3221,.3236,.3252,.3267,.3282,.3297,.3313,.3329,.3345,.3361,.3377,.3393,.3407,.342,.3433,.3445,.3458,.3471,.3484,.3497,.3511,.3526,.3541,.3556,.3572,.3587,.3601,.3613,.3625,.3637,.3648,.366,.3672,.3684,.3695,.3709,.3724,.3739,.3753,.3768,.3783,.3798,.3811,.3823,.3836,.3849,.3861,.3874,.3887,.3899,.3911,.3923,.3935,.3948,.396,.3972,.3984,.3996,.4009,.4023,.4036,.405,.4063,.4077,.4091,.4104,.4116,.4129,.4142,.4154,.4167,.4179,.4192,.4205,.4219,.4233,.4247,.4261,.4276,.429,.4303,.4314,.4325,.4337,.4348,.4359,.437,.4382,.4393,.4405,.4418,.4431,.4444,.4456,.4469,.4482,.4495,.4507,.4518,.4528,.4539,.455,.456,.4571,.4581,.4592,.4603,.4616,.4629,.4642,.4654,.4667,.468,.4693,.4705,.4715,.4726,.4737,.4748,.4759,.4769,.478,.4791,.4802,.4814,.4826,.4838,.485,.4863,.4875,.4887,.4899,.491,.4922,.4933,.4944,.4955,.4966,.4977,.4989,.5,.5012,.5024,.5036,.5048,.506,.5072,.5085,.5097,.5108,.512,.5131,.5142,.5154,.5165,.5176,.5188,.5199,.5211,.5222,.5234,.5245,.5257,.5268,.528,.5291,.5302,.5313,.5324,.5335,.5346,.5357,.5368,.5379,.539,.5401,.5411,.5421,.5431,.5441,.545,.546,.547,.548,.549,.55,.5512,.5523,.5535,.5546,.5558,.5569,.5581,.5592,.5603,.5613,.5623,.5633,.5644,.5654,.5664,.5674,.5684,.5694,.5705,.5717,.5729,.574,.5752,.5764,.5776,.5787,.5799,.581,.5822,.5833,.5844,.5855,.5866,.5878,.5889,.59,.5912,.5924,.5935,.5947,.5959,.5971,.5983,.5994,.6005,.6015,.6026,.6036,.6046,.6056,.6066,.6077,.6087,.6097,.6108,.6118,.6129,.614,.615,.6161,.6172,.6182,.6193,.6203,.6213,.6223,.6233,.6243,.6253,.6263,.6273,.6283,.6293,.6303,.6314,.6324,.6335,.6345,.6356,.6366,.6377,.6388,.6398,.6409,.6419,.643,.644,.6451,.6462,.6472,.6483,.6493,.6504,.6514,.6525,.6535,.6545,.6556,.6566,.6576,.6587,.6597,.6608,.6618,.6628,.6639,.6649,.6659,.667,.668,.6691,.6701,.6713,.6725,.6736,.6748,.676,.6772,.6783,.6795,.6806,.6816,.6825,.6835,.6845,.6855,.6865,.6875,.6885,.6894,.6905,.6917,.6928,.694,.6951,.6963,.6974,.6986,.6998,.7007,.7017,.7026,.7036,.7045,.7055,.7064,.7074,.7083,.7093,.7102,.7113,.7123,.7133,.7143,.7154,.7164,.7174,.7184,.7194,.7205,.7215,.7226,.7236,.7247,.7257,.7268,.7278,.7289,.7299,.731,.7321,.7332,.7343,.7354,.7365,.7376,.7387,.7398,.7408,.7419,.7429,.744,.745,.7461,.7471,.7482,.7492,.7502,.7513,.7523,.7533,.7543,.7553,.7563,.7573,.7583,.7593,.7604,.7616,.7628,.764,.7652,.7664,.7676,.7688,.77,.771,.7719,.7729,.7738,.7748,.7757,.7767,.7777,.7786,.7796,.7807,.7819,.7831,.7844,.7856,.7868,.7881,.7893,.7904,.7914,.7924,.7934,.7944,.7954,.7964,.7974,.7984,.7994,.8005,.8016,.8027,.8038,.8049,.806,.8071,.8083,.8094,.8104,.8114,.8124,.8134,.8144,.8154,.8164,.8174,.8183,.8193,.8204,.8216,.8227,.8239,.8251,.8262,.8274,.8286,.8297,.8308,.8318,.8327,.8337,.8347,.8357,.8367,.8377,.8387,.8397,.8408,.8419,.843,.8441,.8452,.8463,.8474,.8486,.8497,.8509,.8522,.8535,.8548,.8561,.8574,.8587,.8599,.8609,.8618,.8628,.8637,.8647,.8656,.8665,.8675,.8684,.8694,.8704,.8716,.8729,.8742,.8754,.8767,.8779,.8792,.8803,.8813,.8822,.8832,.8842,.8851,.8861,.8871,.888,.889,.89,.8911,.8923,.8935,.8947,.8958,.897,.8982,.8994,.9005,.9015,.9026,.9037,.9047,.9058,.9069,.9079,.909,.9101,.9112,.9124,.9135,.9147,.9158,.9169,.9181,.9192,.9204,.9214,.9224,.9235,.9245,.9256,.9266,.9276,.9287,.9297,.9309,.932,.9332,.9344,.9355,.9367,.9379,.939,.9402,.9415,.9427,.9439,.9451,.9464,.9476,.9488,.95,.9511,.9521,.9531,.9541,.9551,.9561,.9571,.9582,.9592,.9602,.9614,.9626,.9638,.965,.9661,.9673,.9685,.9697,.9707,.9717,.9727,.9737,.9748,.9758,.9768,.9778,.9788,.9798,.9809,.982,.9832,.9843,.9854,.9866,.9877,.9888,.99,.9911,.9922,.9933,.9945,.9956,.9967,.9978,.999,1,1.001,1.002,1.003,1.005,1.006,1.007,1.008,1.009,1.01,1.011,1.012,1.014,1.015,1.016,1.017,1.018,1.019,1.02,1.021,1.022,1.024,1.025,1.026,1.027,1.028,1.029,1.03,1.031,1.033,1.034,1.035,1.036,1.037,1.039,1.04,1.041,1.042,1.043,1.044,1.045,1.046,1.047,1.048,1.049,1.05,1.051,1.052,1.054,1.055,1.056,1.057,1.059,1.06,1.061,1.062,1.063,1.064,1.065,1.066,1.067,1.068,1.069,1.07,1.072,1.073,1.074,1.075,1.076,1.078,1.079,1.08,1.081,1.082,1.083,1.085,1.086,1.087,1.088,1.089,1.09,1.092,1.093,1.094,1.095,1.096,1.097,1.098,1.099,1.101,1.102,1.103,1.104,1.106,1.107,1.108,1.109,1.111,1.112,1.113,1.114,1.116,1.117,1.118,1.119,1.121,1.122,1.123,1.125,1.126,1.127,1.129,1.13,1.131,1.132,1.133,1.134,1.135,1.136,1.137,1.138,1.139,1.141,1.142,1.144,1.145,1.147,1.148,1.15,1.151,1.152,1.153,1.154,1.155,1.156,1.158,1.159,1.16,1.161,1.163,1.164,1.165,1.167,1.168,1.17,1.171,1.172,1.174,1.175,1.176,1.178,1.179,1.18,1.182,1.183,1.184,1.186,1.187,1.188,1.19,1.191,1.193,1.194,1.196,1.197,1.199,1.2,1.202,1.203,1.204,1.206,1.207,1.208,1.21,1.211,1.213,1.215,1.216,1.218,1.22,1.221,1.223,1.224,1.225,1.227,1.228,1.229,1.231,1.233,1.234,1.236,1.237,1.239,1.241,1.242,1.244,1.245,1.247,1.248,1.25,1.252,1.253,1.255,1.257,1.259,1.26,1.262,1.264,1.265,1.267,1.269,1.271,1.272,1.274,1.276,1.278,1.28,1.282,1.284,1.286,1.287,1.289,1.291,1.293,1.295,1.297,1.299,1.301,1.303,1.305,1.307,1.309,1.311,1.313,1.315,1.317,1.319,1.322,1.324,1.327,1.329,1.332,1.334,1.336,1.339,1.341,1.344,1.346,1.349,1.352,1.354,1.357,1.36,1.363,1.366,1.369,1.372,1.375,1.378,1.381,1.385,1.389,1.393,1.397,1.401,1.406,1.41,1.415,1.42,1.427,1.434,1.44,1.448,1.457,1.466,1.478,1.49,1.507,1.531,1.64],I8=[0,.04786,.05757,.06698,.07658,.08337,.08997,.09627,.1026,.109,.1145,.1189,.1234,.1286,.1344,.1392,.1429,.1466,.1503,.1549,.1595,.1637,.1673,.1709,.1744,.1779,.1814,.1848,.1883,.1918,.1953,.1988,.2019,.2048,.2077,.2106,.2137,.217,.2204,.2237,.2266,.2291,.2317,.2342,.2368,.2397,.2428,.2459,.249,.2516,.254,.2564,.2587,.2611,.2636,.2664,.2691,.2719,.2746,.277,.2793,.2816,.2839,.2863,.2886,.2909,.2932,.2956,.2979,.3002,.3026,.305,.3073,.3097,.3121,.3142,.3163,.3183,.3204,.3225,.3245,.3268,.3291,.3314,.3338,.3361,.3382,.3401,.342,.3439,.3457,.3476,.3495,.3516,.3539,.3562,.3584,.3607,.3628,.3646,.3664,.3682,.37,.3718,.3736,.3755,.3775,.3796,.3817,.3837,.3858,.3878,.3897,.3915,.3933,.3951,.397,.3988,.4006,.4024,.4042,.406,.4079,.4097,.4115,.4133,.4152,.417,.4189,.4208,.4226,.4245,.4262,.4279,.4295,.4312,.4328,.4345,.4362,.4379,.4398,.4417,.4436,.4455,.4474,.4493,.451,.4525,.4541,.4556,.4571,.4587,.4602,.4618,.4635,.4653,.4672,.469,.4708,.4727,.4745,.4761,.4777,.4792,.4807,.4823,.4838,.4853,.4869,.4885,.4902,.4918,.4935,.4952,.4969,.4985,.5002,.5018,.5034,.5051,.5067,.5083,.5099,.5115,.5131,.5146,.5162,.5177,.5192,.5208,.5223,.5238,.5254,.527,.5287,.5303,.5319,.5335,.5352,.5368,.5383,.5397,.5411,.5425,.544,.5454,.5468,.5482,.5496,.5512,.5529,.5545,.5561,.5578,.5594,.5611,.5627,.5641,.5654,.5668,.5682,.5696,.571,.5723,.5737,.5751,.5767,.5783,.5799,.5816,.5832,.5848,.5864,.5879,.5893,.5907,.592,.5934,.5948,.5961,.5975,.5989,.6003,.6018,.6033,.6048,.6063,.6078,.6093,.6108,.6123,.6137,.6151,.6165,.6179,.6194,.6208,.6222,.6236,.625,.6264,.6279,.6293,.6307,.6321,.6335,.6349,.6363,.6378,.6392,.6406,.6421,.6435,.6449,.6464,.6478,.6493,.6507,.652,.6534,.6548,.6561,.6575,.6589,.6602,.6616,.663,.6644,.6659,.6673,.6688,.6702,.6717,.6731,.6746,.6759,.6772,.6785,.6798,.681,.6823,.6836,.6849,.6862,.6875,.6889,.6904,.6919,.6934,.6949,.6964,.6979,.6993,.7007,.702,.7032,.7045,.7058,.707,.7083,.7096,.7109,.7121,.7135,.715,.7165,.7179,.7194,.7208,.7223,.7238,.7252,.7265,.7277,.729,.7303,.7315,.7328,.7341,.7353,.7366,.7379,.7393,.7407,.7421,.7436,.745,.7464,.7478,.7492,.7506,.7519,.7532,.7545,.7558,.7571,.7584,.7597,.761,.7623,.7636,.7649,.7662,.7675,.7688,.7702,.7715,.7728,.7741,.7754,.7768,.7782,.7796,.781,.7824,.7838,.7852,.7866,.7879,.7892,.7904,.7916,.7929,.7941,.7954,.7966,.7978,.7991,.8004,.8019,.8033,.8048,.8062,.8077,.8092,.8106,.8121,.8134,.8146,.8158,.817,.8182,.8194,.8206,.8218,.823,.8242,.8255,.827,.8285,.8299,.8314,.8328,.8343,.8358,.8372,.8385,.8397,.8409,.8421,.8433,.8445,.8457,.8469,.8481,.8493,.8506,.852,.8533,.8547,.8561,.8574,.8588,.8601,.8615,.8629,.8641,.8654,.8667,.868,.8693,.8706,.8719,.8732,.8745,.8758,.8771,.8785,.8798,.8811,.8824,.8837,.8851,.8864,.8877,.8891,.8904,.8918,.8931,.8944,.8958,.8971,.8985,.8998,.9011,.9024,.9036,.9048,.9061,.9073,.9086,.9098,.9111,.9123,.9137,.9151,.9165,.9179,.9193,.9207,.9221,.9235,.9249,.9261,.9274,.9286,.9298,.9311,.9323,.9336,.9348,.936,.9373,.9386,.9401,.9415,.9429,.9443,.9457,.9471,.9485,.9499,.9512,.9525,.9537,.955,.9562,.9575,.9588,.96,.9613,.9625,.9639,.9653,.9666,.968,.9694,.9707,.9721,.9735,.9748,.9761,.9774,.9787,.98,.9813,.9826,.9839,.9852,.9865,.9878,.9892,.9906,.9919,.9933,.9947,.9961,.9974,.9988,1,1.002,1.003,1.004,1.006,1.007,1.008,1.01,1.011,1.012,1.014,1.015,1.016,1.018,1.019,1.02,1.022,1.023,1.024,1.026,1.027,1.028,1.03,1.031,1.033,1.034,1.035,1.037,1.038,1.039,1.041,1.042,1.043,1.045,1.046,1.047,1.049,1.05,1.051,1.053,1.054,1.056,1.057,1.058,1.06,1.061,1.063,1.064,1.065,1.067,1.068,1.069,1.07,1.072,1.073,1.074,1.076,1.077,1.079,1.08,1.082,1.083,1.085,1.086,1.088,1.089,1.09,1.091,1.093,1.094,1.095,1.097,1.098,1.099,1.101,1.102,1.104,1.105,1.106,1.108,1.109,1.111,1.112,1.113,1.115,1.116,1.118,1.119,1.12,1.122,1.123,1.124,1.126,1.127,1.128,1.13,1.131,1.132,1.134,1.135,1.137,1.138,1.139,1.141,1.142,1.144,1.145,1.146,1.148,1.149,1.151,1.152,1.153,1.155,1.156,1.157,1.159,1.16,1.161,1.163,1.164,1.166,1.167,1.169,1.17,1.171,1.173,1.174,1.176,1.177,1.178,1.18,1.181,1.182,1.184,1.185,1.186,1.188,1.189,1.19,1.192,1.193,1.195,1.196,1.198,1.199,1.201,1.202,1.203,1.205,1.206,1.207,1.209,1.21,1.211,1.213,1.214,1.215,1.217,1.218,1.22,1.221,1.222,1.224,1.225,1.227,1.228,1.229,1.231,1.232,1.234,1.235,1.236,1.238,1.239,1.241,1.242,1.243,1.245,1.246,1.247,1.249,1.25,1.252,1.253,1.254,1.256,1.257,1.259,1.26,1.261,1.263,1.264,1.266,1.267,1.268,1.27,1.271,1.272,1.274,1.275,1.277,1.278,1.279,1.281,1.282,1.284,1.285,1.287,1.288,1.289,1.291,1.292,1.293,1.295,1.296,1.298,1.299,1.3,1.302,1.303,1.305,1.306,1.308,1.309,1.311,1.312,1.314,1.315,1.316,1.318,1.319,1.32,1.322,1.323,1.324,1.326,1.327,1.329,1.33,1.332,1.333,1.334,1.336,1.337,1.339,1.34,1.342,1.343,1.344,1.346,1.347,1.349,1.35,1.352,1.353,1.354,1.356,1.357,1.359,1.36,1.362,1.363,1.365,1.366,1.368,1.369,1.371,1.372,1.374,1.375,1.377,1.378,1.38,1.381,1.382,1.384,1.385,1.387,1.388,1.39,1.391,1.393,1.395,1.396,1.398,1.399,1.401,1.402,1.404,1.405,1.407,1.408,1.41,1.411,1.413,1.414,1.416,1.418,1.419,1.421,1.422,1.424,1.426,1.427,1.429,1.43,1.432,1.433,1.435,1.436,1.438,1.439,1.441,1.443,1.444,1.446,1.448,1.449,1.451,1.453,1.454,1.456,1.457,1.459,1.461,1.462,1.464,1.466,1.467,1.469,1.471,1.472,1.474,1.476,1.478,1.479,1.481,1.483,1.484,1.486,1.488,1.49,1.491,1.493,1.495,1.496,1.498,1.5,1.502,1.504,1.505,1.507,1.509,1.511,1.513,1.515,1.516,1.518,1.52,1.522,1.524,1.525,1.527,1.529,1.531,1.533,1.535,1.537,1.539,1.541,1.543,1.545,1.547,1.549,1.55,1.553,1.555,1.557,1.559,1.561,1.563,1.565,1.567,1.569,1.571,1.573,1.575,1.577,1.58,1.582,1.584,1.586,1.588,1.591,1.593,1.595,1.597,1.6,1.602,1.604,1.607,1.609,1.611,1.614,1.616,1.619,1.621,1.623,1.626,1.629,1.631,1.634,1.636,1.639,1.642,1.644,1.647,1.65,1.653,1.655,1.658,1.661,1.664,1.667,1.67,1.673,1.676,1.679,1.683,1.686,1.689,1.693,1.696,1.7,1.703,1.707,1.711,1.715,1.719,1.723,1.727,1.731,1.736,1.74,1.746,1.751,1.757,1.763,1.769,1.776,1.784,1.791,1.8,1.81,1.82,1.832,1.846,1.862,1.883,1.912,2.025],L8=[0,.05647,.0695,.08056,.09086,.09995,.1084,.116,.1232,.1299,.1365,.1427,.1488,.1547,.1604,.166,.1711,.1762,.1813,.1862,.1911,.1959,.2003,.2048,.2092,.2134,.2175,.2217,.2258,.2299,.234,.238,.2419,.2457,.2494,.2531,.2568,.2604,.264,.2676,.2711,.2746,.278,.2814,.2849,.2881,.2914,.2946,.2979,.3011,.3042,.3073,.3104,.3136,.3167,.3198,.3228,.3259,.329,.332,.3348,.3377,.3406,.3434,.3462,.349,.3518,.3546,.3573,.3601,.3629,.3657,.3685,.3713,.374,.3767,.3793,.3818,.3844,.387,.3896,.3921,.3947,.3972,.3997,.4023,.4048,.4074,.4099,.4125,.415,.4176,.4201,.4225,.4249,.4273,.4297,.432,.4344,.4368,.4391,.4415,.4438,.4461,.4485,.4508,.4532,.4556,.458,.4604,.4628,.4651,.4673,.4695,.4717,.4739,.4761,.4783,.4805,.4827,.4849,.4871,.4893,.4915,.4937,.4959,.4981,.5004,.5026,.5048,.507,.5092,.5113,.5133,.5154,.5175,.5195,.5216,.5236,.5257,.5278,.5299,.532,.534,.5361,.5382,.5403,.5424,.5444,.5465,.5486,.5506,.5527,.5548,.5568,.5587,.5607,.5627,.5646,.5666,.5686,.5705,.5725,.5745,.5764,.5784,.5804,.5823,.5843,.5863,.5883,.5902,.5922,.5942,.5962,.5982,.6001,.602,.6039,.6058,.6076,.6095,.6114,.6133,.6151,.617,.6189,.6208,.6227,.6246,.6264,.6283,.6302,.6321,.634,.6359,.6378,.6397,.6416,.6435,.6454,.6472,.649,.6508,.6525,.6543,.6561,.6579,.6597,.6615,.6634,.6652,.667,.6688,.6706,.6724,.6742,.676,.6779,.6797,.6815,.6834,.6852,.687,.6889,.6907,.6924,.6941,.6958,.6975,.6993,.701,.7027,.7044,.7062,.7079,.7097,.7115,.7132,.715,.7168,.7185,.7203,.7221,.7238,.7256,.7273,.7291,.7309,.7326,.7344,.7361,.7378,.7394,.7411,.7428,.7445,.7462,.7479,.7495,.7513,.753,.7547,.7565,.7582,.76,.7617,.7634,.7652,.7669,.7685,.7702,.7719,.7736,.7753,.777,.7787,.7803,.782,.7837,.7853,.787,.7886,.7903,.792,.7936,.7953,.797,.7987,.8004,.802,.8037,.8054,.8071,.8088,.8105,.8121,.8138,.8154,.817,.8187,.8203,.822,.8236,.8252,.8269,.8285,.8302,.8318,.8335,.8351,.8368,.8384,.8401,.8417,.8434,.845,.8466,.8483,.8499,.8516,.8532,.8548,.8565,.8581,.8597,.8614,.863,.8646,.8662,.8679,.8695,.8711,.8727,.8743,.8759,.8775,.8791,.8807,.8823,.8839,.8855,.8871,.8887,.8904,.892,.8936,.8953,.8969,.8985,.9002,.9018,.9034,.905,.9066,.9082,.9098,.9114,.913,.9146,.9162,.9178,.9194,.9209,.9225,.9241,.9257,.9272,.9288,.9304,.932,.9336,.9353,.9369,.9385,.9401,.9417,.9434,.945,.9466,.9481,.9497,.9513,.9529,.9545,.956,.9576,.9592,.9608,.9623,.9639,.9655,.9671,.9686,.9702,.9718,.9733,.9749,.9765,.9781,.9797,.9813,.9829,.9845,.9861,.9877,.9893,.9909,.9925,.9941,.9956,.9972,.9988,1,1.002,1.003,1.005,1.007,1.008,1.01,1.011,1.013,1.014,1.016,1.018,1.019,1.021,1.022,1.024,1.026,1.027,1.029,1.03,1.032,1.034,1.035,1.037,1.038,1.04,1.041,1.043,1.044,1.046,1.048,1.049,1.051,1.052,1.054,1.055,1.057,1.059,1.06,1.062,1.063,1.065,1.067,1.068,1.07,1.071,1.073,1.074,1.076,1.078,1.079,1.081,1.082,1.084,1.085,1.087,1.089,1.09,1.092,1.093,1.095,1.097,1.098,1.1,1.101,1.103,1.104,1.106,1.108,1.109,1.111,1.112,1.114,1.116,1.117,1.119,1.12,1.122,1.123,1.125,1.127,1.128,1.13,1.131,1.133,1.135,1.136,1.138,1.139,1.141,1.143,1.144,1.146,1.147,1.149,1.15,1.152,1.154,1.155,1.157,1.158,1.16,1.162,1.163,1.165,1.166,1.168,1.17,1.171,1.173,1.174,1.176,1.178,1.179,1.181,1.182,1.184,1.186,1.187,1.189,1.191,1.192,1.194,1.195,1.197,1.199,1.2,1.202,1.203,1.205,1.207,1.208,1.21,1.211,1.213,1.215,1.216,1.218,1.219,1.221,1.223,1.224,1.226,1.228,1.229,1.231,1.232,1.234,1.236,1.238,1.239,1.241,1.243,1.244,1.246,1.247,1.249,1.251,1.252,1.254,1.255,1.257,1.258,1.26,1.262,1.263,1.265,1.267,1.268,1.27,1.272,1.273,1.275,1.277,1.278,1.28,1.282,1.283,1.285,1.287,1.288,1.29,1.292,1.293,1.295,1.296,1.298,1.3,1.301,1.303,1.304,1.306,1.308,1.309,1.311,1.313,1.314,1.316,1.318,1.319,1.321,1.323,1.324,1.326,1.328,1.329,1.331,1.333,1.334,1.336,1.338,1.339,1.341,1.342,1.344,1.346,1.347,1.349,1.35,1.352,1.354,1.355,1.357,1.359,1.36,1.362,1.364,1.365,1.367,1.369,1.371,1.372,1.374,1.376,1.377,1.379,1.381,1.382,1.384,1.386,1.387,1.389,1.39,1.392,1.394,1.395,1.397,1.399,1.4,1.402,1.404,1.405,1.407,1.409,1.41,1.412,1.414,1.415,1.417,1.419,1.42,1.422,1.424,1.425,1.427,1.429,1.43,1.432,1.434,1.435,1.437,1.439,1.44,1.442,1.443,1.445,1.447,1.448,1.45,1.452,1.453,1.455,1.457,1.459,1.46,1.462,1.464,1.465,1.467,1.469,1.47,1.472,1.474,1.475,1.477,1.479,1.48,1.482,1.484,1.485,1.487,1.489,1.49,1.492,1.494,1.495,1.497,1.499,1.5,1.502,1.504,1.505,1.507,1.509,1.511,1.512,1.514,1.516,1.517,1.519,1.521,1.522,1.524,1.525,1.527,1.529,1.53,1.532,1.534,1.535,1.537,1.539,1.541,1.542,1.544,1.546,1.547,1.549,1.551,1.552,1.554,1.556,1.557,1.559,1.561,1.562,1.564,1.566,1.567,1.569,1.571,1.572,1.574,1.576,1.577,1.579,1.581,1.583,1.584,1.586,1.588,1.589,1.591,1.593,1.595,1.596,1.598,1.6,1.601,1.603,1.605,1.607,1.608,1.61,1.612,1.613,1.615,1.617,1.619,1.62,1.622,1.624,1.626,1.627,1.629,1.631,1.633,1.634,1.636,1.638,1.64,1.641,1.643,1.645,1.647,1.648,1.65,1.652,1.654,1.655,1.657,1.659,1.661,1.663,1.664,1.666,1.668,1.67,1.672,1.673,1.675,1.677,1.679,1.681,1.682,1.684,1.686,1.688,1.69,1.692,1.694,1.696,1.697,1.699,1.701,1.703,1.705,1.706,1.708,1.71,1.712,1.714,1.716,1.718,1.72,1.722,1.724,1.725,1.727,1.729,1.731,1.733,1.735,1.737,1.739,1.741,1.743,1.745,1.747,1.749,1.751,1.753,1.755,1.757,1.759,1.761,1.763,1.765,1.767,1.769,1.771,1.773,1.775,1.777,1.779,1.781,1.783,1.785,1.787,1.789,1.792,1.794,1.796,1.798,1.8,1.802,1.804,1.806,1.809,1.811,1.813,1.815,1.817,1.819,1.822,1.824,1.826,1.828,1.831,1.833,1.835,1.838,1.84,1.842,1.844,1.847,1.849,1.851,1.854,1.856,1.858,1.861,1.863,1.866,1.868,1.87,1.873,1.875,1.878,1.88,1.883,1.885,1.888,1.89,1.893,1.896,1.898,1.901,1.903,1.906,1.909,1.911,1.914,1.917,1.919,1.922,1.925,1.928,1.931,1.934,1.936,1.939,1.942,1.945,1.948,1.951,1.954,1.957,1.96,1.963,1.967,1.97,1.973,1.976,1.98,1.983,1.986,1.99,1.993,1.997,2,2.004,2.008,2.011,2.015,2.019,2.023,2.027,2.031,2.035,2.039,2.044,2.048,2.053,2.057,2.062,2.067,2.072,2.077,2.082,2.088,2.094,2.101,2.108,2.115,2.123,2.131,2.14,2.149,2.16,2.171,2.184,2.198,2.215,2.234,2.259,2.294,2.445],D8=[0,.06598,.08111,.09402,.1061,.1169,.1268,.1356,.1441,.1522,.1599,.167,.174,.1808,.1875,.194,.2001,.2061,.212,.2177,.2233,.2288,.2342,.2395,.2449,.2496,.2543,.2591,.2638,.2686,.2733,.2781,.2827,.2872,.2917,.2963,.3005,.3046,.3087,.3128,.3169,.3209,.3249,.329,.333,.3368,.3406,.3444,.3482,.3519,.3555,.3592,.3628,.3664,.3701,.3737,.3774,.3811,.3848,.3881,.3915,.3949,.3982,.4016,.4048,.408,.4112,.4144,.4176,.4208,.4241,.4274,.4307,.4339,.4372,.4403,.4434,.4465,.4496,.4527,.4558,.4587,.4617,.4646,.4676,.4705,.4735,.4764,.4794,.4823,.4853,.4882,.4911,.4939,.4967,.4994,.5022,.505,.5077,.5105,.5132,.516,.5187,.5215,.5243,.527,.5298,.5326,.5353,.5381,.5409,.5436,.5461,.5487,.5512,.5538,.5564,.5589,.5615,.5641,.5666,.5692,.5718,.5743,.5769,.5795,.5821,.5846,.5872,.5898,.5923,.5949,.5974,.5998,.6023,.6048,.6073,.6097,.6122,.6146,.617,.6194,.6219,.6243,.6267,.6291,.6315,.6339,.6363,.6387,.6411,.6435,.6459,.6483,.6506,.6529,.6552,.6575,.6598,.6621,.6644,.6667,.6691,.6714,.6737,.676,.6784,.6807,.683,.6853,.6876,.6899,.6922,.6945,.6968,.6992,.7014,.7036,.7058,.7079,.7101,.7123,.7145,.7167,.7189,.7211,.7233,.7255,.7277,.7299,.7321,.7343,.7365,.7387,.7409,.7431,.7452,.7474,.7496,.7518,.754,.7561,.7583,.7605,.7626,.7648,.7669,.7691,.7712,.7733,.7755,.7776,.7797,.7818,.7839,.786,.7882,.7902,.7923,.7944,.7965,.7985,.8006,.8027,.8048,.8068,.8089,.8109,.8129,.815,.817,.8191,.8211,.8232,.8252,.8273,.8294,.8314,.8335,.8356,.8376,.8397,.8418,.8438,.8459,.8479,.85,.852,.8541,.8561,.8582,.8601,.8621,.8641,.8661,.8681,.8701,.8721,.8741,.8761,.8781,.8801,.8821,.8841,.8861,.888,.89,.892,.894,.896,.8979,.8999,.9019,.9038,.9058,.9078,.9097,.9117,.9137,.9157,.9176,.9196,.9216,.9236,.9255,.9275,.9295,.9314,.9334,.9354,.9373,.9393,.9412,.9432,.9451,.947,.9489,.9508,.9527,.9546,.9565,.9584,.9603,.9622,.9641,.966,.9679,.9698,.9717,.9736,.9756,.9775,.9794,.9813,.9832,.9852,.9871,.989,.991,.9929,.9948,.9968,.9987,1.001,1.002,1.004,1.006,1.008,1.01,1.012,1.014,1.016,1.018,1.02,1.021,1.023,1.025,1.027,1.029,1.031,1.033,1.035,1.036,1.038,1.04,1.042,1.044,1.046,1.048,1.05,1.052,1.053,1.055,1.057,1.059,1.061,1.063,1.065,1.066,1.068,1.07,1.072,1.074,1.076,1.078,1.08,1.081,1.083,1.085,1.087,1.089,1.091,1.093,1.095,1.096,1.098,1.1,1.102,1.104,1.106,1.108,1.109,1.111,1.113,1.115,1.117,1.118,1.12,1.122,1.124,1.126,1.128,1.129,1.131,1.133,1.135,1.137,1.139,1.141,1.143,1.144,1.146,1.148,1.15,1.152,1.154,1.156,1.157,1.159,1.161,1.163,1.165,1.166,1.168,1.17,1.172,1.174,1.176,1.177,1.179,1.181,1.183,1.185,1.187,1.188,1.19,1.192,1.194,1.196,1.198,1.2,1.201,1.203,1.205,1.207,1.209,1.211,1.212,1.214,1.216,1.218,1.22,1.221,1.223,1.225,1.227,1.229,1.231,1.232,1.234,1.236,1.238,1.24,1.242,1.244,1.245,1.247,1.249,1.251,1.253,1.255,1.256,1.258,1.26,1.262,1.264,1.266,1.267,1.269,1.271,1.273,1.275,1.276,1.278,1.28,1.282,1.284,1.286,1.287,1.289,1.291,1.293,1.295,1.297,1.299,1.301,1.302,1.304,1.306,1.308,1.31,1.312,1.314,1.316,1.317,1.319,1.321,1.323,1.325,1.327,1.328,1.33,1.332,1.334,1.336,1.338,1.339,1.341,1.343,1.345,1.347,1.349,1.35,1.352,1.354,1.356,1.358,1.36,1.362,1.364,1.365,1.367,1.369,1.371,1.373,1.375,1.376,1.378,1.38,1.382,1.384,1.386,1.388,1.389,1.391,1.393,1.395,1.397,1.399,1.401,1.403,1.405,1.406,1.408,1.41,1.412,1.414,1.416,1.418,1.42,1.421,1.423,1.425,1.427,1.429,1.431,1.433,1.434,1.436,1.438,1.44,1.442,1.444,1.446,1.448,1.45,1.451,1.453,1.455,1.457,1.459,1.461,1.463,1.465,1.467,1.469,1.471,1.473,1.475,1.477,1.478,1.48,1.482,1.484,1.486,1.488,1.49,1.492,1.493,1.495,1.497,1.499,1.501,1.503,1.505,1.507,1.509,1.511,1.513,1.514,1.516,1.518,1.52,1.522,1.524,1.526,1.528,1.53,1.532,1.534,1.536,1.537,1.539,1.541,1.543,1.545,1.547,1.549,1.551,1.553,1.555,1.557,1.559,1.561,1.562,1.564,1.566,1.568,1.57,1.572,1.574,1.576,1.578,1.58,1.582,1.584,1.585,1.587,1.589,1.591,1.593,1.595,1.597,1.599,1.601,1.603,1.605,1.607,1.609,1.611,1.613,1.614,1.616,1.618,1.62,1.622,1.624,1.626,1.628,1.63,1.632,1.634,1.636,1.638,1.64,1.642,1.643,1.645,1.647,1.649,1.651,1.653,1.655,1.657,1.659,1.661,1.663,1.665,1.667,1.668,1.67,1.672,1.674,1.676,1.678,1.68,1.682,1.684,1.686,1.688,1.69,1.692,1.694,1.696,1.698,1.7,1.702,1.704,1.706,1.708,1.71,1.711,1.713,1.715,1.717,1.719,1.721,1.723,1.725,1.727,1.729,1.731,1.733,1.735,1.737,1.739,1.74,1.742,1.744,1.746,1.748,1.75,1.752,1.754,1.756,1.758,1.76,1.762,1.764,1.766,1.768,1.77,1.772,1.774,1.776,1.778,1.78,1.782,1.784,1.786,1.787,1.789,1.791,1.793,1.795,1.797,1.799,1.801,1.803,1.805,1.807,1.809,1.811,1.813,1.815,1.817,1.819,1.82,1.822,1.824,1.826,1.828,1.83,1.832,1.834,1.836,1.838,1.84,1.842,1.844,1.846,1.848,1.85,1.852,1.854,1.856,1.858,1.86,1.862,1.864,1.866,1.868,1.87,1.872,1.874,1.876,1.878,1.88,1.882,1.884,1.886,1.888,1.89,1.892,1.894,1.896,1.898,1.9,1.902,1.904,1.906,1.908,1.91,1.912,1.914,1.916,1.918,1.921,1.923,1.925,1.927,1.929,1.931,1.933,1.935,1.937,1.939,1.941,1.944,1.946,1.948,1.95,1.952,1.954,1.956,1.958,1.96,1.963,1.965,1.967,1.969,1.971,1.973,1.976,1.978,1.98,1.982,1.984,1.986,1.988,1.991,1.993,1.995,1.997,1.999,2.002,2.004,2.006,2.008,2.011,2.013,2.015,2.017,2.02,2.022,2.024,2.027,2.029,2.031,2.034,2.036,2.038,2.04,2.043,2.045,2.047,2.049,2.052,2.054,2.056,2.059,2.061,2.063,2.066,2.068,2.071,2.073,2.076,2.078,2.08,2.083,2.085,2.088,2.09,2.093,2.095,2.098,2.1,2.103,2.105,2.108,2.11,2.113,2.115,2.118,2.12,2.123,2.125,2.128,2.131,2.133,2.136,2.139,2.141,2.144,2.146,2.149,2.152,2.154,2.157,2.16,2.163,2.165,2.168,2.171,2.174,2.177,2.179,2.182,2.185,2.188,2.191,2.194,2.197,2.2,2.203,2.206,2.209,2.212,2.215,2.218,2.221,2.224,2.227,2.23,2.233,2.237,2.24,2.243,2.246,2.25,2.253,2.256,2.259,2.263,2.266,2.27,2.273,2.277,2.28,2.284,2.288,2.291,2.295,2.299,2.302,2.306,2.31,2.314,2.318,2.322,2.326,2.33,2.334,2.339,2.343,2.347,2.352,2.356,2.361,2.365,2.37,2.375,2.38,2.385,2.391,2.396,2.401,2.407,2.412,2.418,2.425,2.431,2.438,2.445,2.452,2.46,2.469,2.478,2.487,2.498,2.509,2.521,2.535,2.55,2.567,2.586,2.609,2.638,2.679,2.852],U8=[0,.07537,.09421,.1099,.1236,.1349,.1453,.1549,.1643,.1735,.1824,.1906,.1987,.2061,.2134,.2207,.2272,.2338,.2403,.2468,.2532,.2597,.2658,.272,.2781,.284,.2899,.2958,.3018,.3081,.3144,.3206,.3253,.33,.3348,.3395,.3441,.3487,.3533,.3579,.3625,.3672,.3719,.3766,.381,.3848,.3886,.3924,.3962,.4,.4045,.409,.4135,.418,.4222,.426,.4298,.4336,.4375,.4414,.4454,.4494,.4534,.4575,.4615,.4654,.4694,.4733,.4772,.4812,.4853,.4893,.4934,.4974,.5012,.5046,.5079,.5113,.5146,.518,.5213,.5247,.5281,.5314,.5348,.5382,.5415,.5447,.5479,.551,.5542,.5574,.5606,.5636,.5667,.5697,.5728,.5758,.5788,.5821,.5855,.5888,.5922,.5956,.5989,.6019,.6047,.6075,.6102,.613,.6158,.6186,.6216,.6249,.6282,.6315,.6348,.6381,.6413,.6444,.6474,.6504,.6535,.6565,.6595,.6627,.6659,.6691,.6723,.6755,.6787,.6815,.6841,.6867,.6893,.6919,.6945,.6971,.6996,.7025,.7055,.7084,.7114,.7143,.7173,.7202,.7226,.725,.7274,.7298,.7322,.7346,.737,.7394,.7422,.745,.7479,.7508,.7536,.7565,.7594,.762,.7646,.7672,.7697,.7723,.7749,.7775,.78,.7824,.7848,.7872,.7896,.792,.7943,.7967,.7991,.8017,.8044,.8071,.8099,.8126,.8153,.818,.8207,.8233,.8259,.8285,.831,.8336,.8362,.8388,.8414,.8442,.8469,.8496,.8523,.855,.8577,.8604,.8627,.865,.8674,.8697,.8721,.8744,.8768,.8791,.8815,.884,.8864,.8889,.8913,.8937,.8962,.8986,.901,.9032,.9054,.9076,.9098,.912,.9142,.9165,.9187,.921,.9235,.9259,.9284,.9309,.9334,.9359,.9384,.9408,.943,.9452,.9474,.9496,.9518,.954,.9562,.9585,.9607,.9631,.9655,.9679,.9703,.9727,.9751,.9775,.9799,.9821,.9843,.9865,.9887,.991,.9932,.9954,.9976,.9998,1.002,1.005,1.007,1.01,1.012,1.015,1.017,1.019,1.022,1.024,1.026,1.028,1.031,1.033,1.035,1.037,1.04,1.042,1.044,1.047,1.049,1.051,1.054,1.056,1.058,1.061,1.063,1.065,1.067,1.069,1.071,1.073,1.076,1.078,1.08,1.082,1.084,1.086,1.088,1.09,1.092,1.094,1.096,1.098,1.1,1.102,1.105,1.107,1.109,1.112,1.114,1.116,1.118,1.121,1.123,1.125,1.127,1.129,1.131,1.133,1.135,1.137,1.139,1.141,1.144,1.146,1.148,1.15,1.153,1.155,1.157,1.159,1.162,1.164,1.166,1.169,1.171,1.173,1.175,1.178,1.18,1.182,1.185,1.187,1.19,1.192,1.194,1.197,1.199,1.201,1.203,1.205,1.207,1.209,1.211,1.213,1.215,1.217,1.219,1.221,1.223,1.226,1.228,1.23,1.232,1.234,1.237,1.239,1.241,1.243,1.245,1.247,1.249,1.251,1.253,1.254,1.256,1.258,1.26,1.262,1.265,1.267,1.269,1.271,1.274,1.276,1.278,1.28,1.282,1.284,1.286,1.288,1.29,1.292,1.294,1.297,1.299,1.301,1.303,1.305,1.307,1.309,1.311,1.313,1.315,1.317,1.319,1.321,1.323,1.326,1.328,1.33,1.332,1.334,1.336,1.338,1.34,1.342,1.345,1.347,1.349,1.352,1.354,1.356,1.359,1.361,1.363,1.365,1.367,1.369,1.371,1.373,1.376,1.378,1.38,1.382,1.384,1.386,1.388,1.39,1.392,1.394,1.397,1.399,1.401,1.403,1.405,1.407,1.409,1.411,1.413,1.415,1.417,1.419,1.421,1.423,1.425,1.427,1.429,1.431,1.433,1.435,1.437,1.439,1.441,1.443,1.445,1.447,1.449,1.452,1.454,1.456,1.458,1.46,1.462,1.465,1.467,1.469,1.471,1.473,1.475,1.477,1.48,1.482,1.484,1.486,1.488,1.49,1.492,1.494,1.496,1.498,1.5,1.503,1.505,1.507,1.509,1.511,1.513,1.515,1.517,1.519,1.521,1.523,1.526,1.528,1.53,1.533,1.535,1.538,1.54,1.542,1.544,1.546,1.548,1.55,1.552,1.554,1.556,1.558,1.56,1.562,1.564,1.567,1.569,1.571,1.573,1.576,1.578,1.58,1.582,1.584,1.586,1.589,1.591,1.593,1.595,1.597,1.599,1.601,1.604,1.606,1.608,1.61,1.612,1.614,1.616,1.618,1.621,1.623,1.625,1.627,1.629,1.631,1.633,1.635,1.637,1.639,1.641,1.643,1.646,1.648,1.65,1.652,1.654,1.657,1.659,1.661,1.663,1.665,1.667,1.669,1.671,1.673,1.675,1.677,1.679,1.681,1.684,1.686,1.688,1.691,1.693,1.695,1.698,1.7,1.702,1.705,1.707,1.709,1.712,1.714,1.717,1.719,1.721,1.723,1.725,1.727,1.729,1.731,1.733,1.736,1.738,1.74,1.742,1.744,1.746,1.749,1.751,1.753,1.755,1.758,1.76,1.762,1.764,1.766,1.768,1.77,1.772,1.775,1.777,1.779,1.781,1.783,1.785,1.787,1.79,1.792,1.794,1.796,1.798,1.8,1.803,1.805,1.807,1.809,1.812,1.814,1.816,1.818,1.82,1.823,1.825,1.827,1.829,1.831,1.834,1.836,1.838,1.84,1.842,1.844,1.846,1.849,1.851,1.853,1.855,1.857,1.859,1.862,1.864,1.866,1.869,1.871,1.874,1.876,1.879,1.881,1.883,1.885,1.888,1.89,1.892,1.894,1.897,1.899,1.901,1.903,1.905,1.908,1.91,1.912,1.915,1.917,1.919,1.921,1.923,1.926,1.928,1.93,1.932,1.934,1.936,1.938,1.941,1.943,1.945,1.947,1.949,1.952,1.954,1.956,1.958,1.961,1.963,1.965,1.967,1.969,1.971,1.973,1.975,1.977,1.979,1.981,1.984,1.986,1.989,1.991,1.993,1.996,1.998,2,2.002,2.005,2.007,2.009,2.011,2.013,2.016,2.018,2.02,2.022,2.025,2.027,2.029,2.031,2.034,2.036,2.038,2.041,2.043,2.045,2.048,2.05,2.052,2.054,2.057,2.059,2.061,2.063,2.066,2.068,2.07,2.072,2.074,2.076,2.079,2.081,2.083,2.085,2.087,2.09,2.092,2.094,2.096,2.099,2.101,2.103,2.105,2.107,2.11,2.112,2.114,2.116,2.119,2.121,2.123,2.126,2.128,2.13,2.132,2.135,2.137,2.139,2.142,2.144,2.146,2.148,2.15,2.153,2.155,2.157,2.159,2.162,2.164,2.166,2.169,2.171,2.174,2.176,2.179,2.181,2.183,2.185,2.188,2.19,2.192,2.194,2.197,2.199,2.201,2.204,2.206,2.209,2.211,2.214,2.216,2.219,2.221,2.224,2.226,2.229,2.232,2.234,2.237,2.239,2.242,2.244,2.247,2.249,2.252,2.254,2.256,2.259,2.261,2.264,2.266,2.268,2.271,2.273,2.275,2.278,2.28,2.283,2.285,2.288,2.291,2.293,2.296,2.299,2.301,2.304,2.306,2.308,2.311,2.313,2.316,2.318,2.321,2.323,2.326,2.329,2.331,2.334,2.337,2.339,2.342,2.345,2.347,2.35,2.353,2.356,2.358,2.361,2.364,2.366,2.369,2.372,2.374,2.377,2.38,2.382,2.385,2.388,2.391,2.394,2.397,2.4,2.403,2.406,2.409,2.412,2.415,2.418,2.421,2.424,2.427,2.429,2.432,2.435,2.438,2.441,2.444,2.447,2.45,2.453,2.456,2.459,2.462,2.466,2.469,2.472,2.475,2.478,2.481,2.484,2.487,2.491,2.494,2.497,2.5,2.503,2.507,2.51,2.513,2.517,2.52,2.524,2.527,2.531,2.534,2.538,2.541,2.545,2.549,2.553,2.556,2.56,2.564,2.567,2.571,2.575,2.579,2.583,2.587,2.591,2.595,2.599,2.603,2.607,2.61,2.614,2.618,2.622,2.627,2.631,2.635,2.64,2.644,2.649,2.654,2.658,2.663,2.668,2.672,2.677,2.682,2.687,2.692,2.698,2.703,2.709,2.714,2.72,2.726,2.732,2.737,2.743,2.75,2.756,2.763,2.771,2.778,2.785,2.793,2.801,2.811,2.821,2.831,2.842,2.855,2.868,2.881,2.897,2.914,2.933,2.955,2.98,3.014,3.06,3.28],N8={1:A8,2:C8,3:R8,4:P8,5:I8,6:L8,7:D8,8:U8},F8=[0,.007469,.008922,.0102,.01103,.01186,.0133,.01537,.01608,.01679,.0175,.01803,.01855,.01908,.01961,.02023,.02112,.02201,.02264,.02296,.02328,.0236,.02391,.02423,.02455,.02487,.02527,.02572,.02617,.02662,.02707,.02753,.02811,.02868,.02926,.02984,.0303,.03072,.03114,.03157,.03199,.03241,.03275,.03308,.0334,.03373,.03405,.03438,.0347,.03505,.03558,.03611,.03663,.03716,.03765,.03805,.03846,.03887,.03927,.03968,.04006,.04034,.04063,.04091,.04119,.04147,.04175,.04204,.04232,.04266,.0431,.04354,.04399,.04443,.04487,.04514,.04535,.04555,.04575,.04595,.04615,.04636,.04656,.04676,.04696,.04716,.04736,.04759,.04785,.04811,.04837,.04863,.04889,.04915,.04941,.04967,.04993,.05029,.05068,.05108,.05147,.05186,.05226,.05259,.05282,.05304,.05327,.0535,.05373,.05395,.05418,.05441,.05464,.05487,.05512,.0554,.05568,.05596,.05624,.05653,.05681,.05709,.05737,.05766,.05796,.05826,.05856,.05886,.05916,.05946,.05976,.06004,.06028,.06051,.06075,.06098,.06122,.06145,.06168,.06192,.06215,.06239,.06262,.06285,.06308,.06332,.06355,.06378,.06401,.06424,.06448,.06471,.06494,.06527,.06563,.06599,.06635,.06671,.06706,.06742,.06762,.06777,.06793,.06808,.06823,.06838,.06853,.06869,.06884,.06899,.06914,.0693,.06945,.0696,.06975,.06991,.07007,.07026,.07046,.07065,.07084,.07103,.07123,.07142,.07161,.0718,.072,.07219,.07238,.07261,.0729,.07319,.07348,.07377,.07405,.07434,.07463,.07492,.07514,.07532,.07551,.0757,.07588,.07607,.07626,.07644,.07663,.07682,.077,.07719,.07738,.07759,.07785,.07812,.07838,.07864,.07891,.07917,.07944,.0797,.07996,.08019,.0804,.08061,.08083,.08104,.08126,.08147,.08168,.0819,.08211,.08233,.08255,.08279,.08304,.08329,.08354,.08379,.08404,.08428,.08453,.08478,.08502,.0852,.08538,.08556,.08574,.08592,.08611,.08629,.08647,.08665,.08683,.08701,.08719,.08737,.08758,.08785,.08812,.0884,.08867,.08894,.08921,.08949,.08976,.09002,.09014,.09027,.0904,.09053,.09066,.09079,.09092,.09105,.09118,.09131,.09144,.09157,.0917,.09183,.09196,.09208,.09221,.09234,.09247,.09267,.09288,.09309,.0933,.09352,.09373,.09394,.09415,.09436,.09458,.09479,.095,.09521,.09542,.09563,.09584,.09605,.09626,.09647,.09668,.09689,.0971,.09732,.09752,.0977,.09787,.09805,.09823,.0984,.09858,.09875,.09893,.09911,.09928,.09946,.09963,.09981,.09999,.1002,.1004,.1005,.1007,.1009,.1011,.1013,.1014,.1016,.1018,.102,.1022,.1024,.1025,.1028,.103,.1032,.1035,.1037,.104,.1042,.1044,.1047,.1049,.1051,.1053,.1055,.1057,.1059,.1061,.1063,.1065,.1067,.1068,.107,.1072,.1074,.1076,.1078,.108,.1082,.1084,.1085,.1087,.1089,.1091,.1093,.1095,.1096,.1098,.11,.1102,.1104,.1106,.1109,.1111,.1113,.1115,.1117,.1119,.1121,.1124,.1126,.1127,.1128,.113,.1131,.1133,.1134,.1136,.1137,.1139,.114,.1142,.1143,.1145,.1146,.1148,.1149,.1151,.1153,.1154,.1156,.1158,.116,.1161,.1163,.1165,.1167,.1169,.117,.1172,.1174,.1176,.1178,.118,.1182,.1183,.1185,.1187,.1189,.1191,.1193,.1195,.1197,.1199,.12,.1202,.1204,.1205,.1207,.1209,.1211,.1212,.1214,.1216,.1217,.1219,.1221,.1222,.1224,.1226,.1228,.1229,.1231,.1233,.1235,.1236,.1238,.124,.1242,.1244,.1245,.1247,.1249,.1251,.1253,.1256,.1258,.1261,.1263,.1266,.1268,.1271,.1273,.1275,.1277,.1279,.1281,.1282,.1284,.1286,.1287,.1289,.1291,.1292,.1294,.1296,.1297,.1299,.1301,.1303,.1305,.1307,.1309,.1311,.1313,.1314,.1316,.1318,.132,.1322,.1324,.1326,.1329,.1331,.1333,.1336,.1338,.134,.1342,.1345,.1347,.1349,.1351,.1352,.1354,.1355,.1356,.1358,.1359,.136,.1362,.1363,.1364,.1366,.1367,.1368,.137,.1371,.1373,.1374,.1375,.1377,.1379,.1381,.1383,.1385,.1387,.1389,.1391,.1393,.1395,.1396,.1398,.14,.1402,.1404,.1406,.1408,.141,.1412,.1414,.1416,.1418,.142,.1422,.1424,.1426,.1428,.143,.1432,.1434,.1436,.1438,.144,.1442,.1444,.1446,.1448,.145,.1452,.1454,.1456,.1458,.146,.1462,.1464,.1465,.1467,.1469,.1471,.1473,.1475,.1477,.1479,.1482,.1484,.1487,.1489,.1491,.1494,.1496,.1498,.1501,.1502,.1504,.1506,.1508,.1509,.1511,.1513,.1515,.1516,.1518,.152,.1522,.1523,.1525,.1527,.1529,.1532,.1534,.1536,.1538,.154,.1542,.1544,.1546,.1549,.1551,.1553,.1555,.1557,.1559,.1561,.1563,.1565,.1568,.157,.1572,.1574,.1576,.1578,.1579,.1581,.1582,.1584,.1586,.1587,.1589,.1591,.1592,.1594,.1596,.1597,.1599,.1601,.1603,.1605,.1607,.1609,.1611,.1613,.1615,.1617,.1619,.1621,.1622,.1624,.1627,.1629,.1631,.1634,.1636,.1638,.1641,.1643,.1645,.1648,.165,.1652,.1654,.1657,.1659,.1661,.1664,.1666,.1668,.167,.1673,.1675,.1677,.1679,.1681,.1683,.1685,.1687,.1689,.1691,.1693,.1695,.1697,.1699,.1702,.1704,.1707,.1709,.1712,.1714,.1717,.1719,.1722,.1725,.1727,.1729,.1731,.1733,.1735,.1737,.174,.1742,.1744,.1746,.1748,.175,.1753,.1755,.1757,.1759,.1761,.1764,.1766,.1768,.177,.1773,.1775,.1777,.1779,.1781,.1783,.1785,.1787,.1789,.1791,.1793,.1795,.1797,.18,.1802,.1804,.1806,.1809,.1811,.1814,.1816,.1818,.1821,.1823,.1825,.1828,.1831,.1833,.1836,.1839,.1842,.1844,.1847,.185,.1853,.1855,.1858,.1861,.1863,.1866,.1869,.1871,.1874,.1877,.1879,.1881,.1884,.1886,.1888,.189,.1893,.1895,.1897,.19,.1902,.1905,.1907,.191,.1912,.1915,.1917,.192,.1922,.1925,.1928,.1931,.1934,.1937,.194,.1944,.1947,.195,.1953,.1956,.1959,.1962,.1965,.1968,.1971,.1974,.1977,.198,.1983,.1986,.1989,.1992,.1995,.1998,.2002,.2006,.201,.2013,.2017,.2021,.2025,.2028,.203,.2033,.2035,.2038,.2041,.2043,.2046,.2048,.2051,.2055,.2058,.2062,.2065,.2069,.2073,.2076,.2079,.2083,.2086,.2089,.2092,.2096,.2099,.2103,.2106,.211,.2114,.2118,.2121,.2125,.2129,.2133,.2137,.214,.2144,.2148,.2152,.2157,.2161,.2166,.2171,.2175,.218,.2184,.2188,.2193,.2197,.2201,.2205,.221,.2214,.2218,.2222,.2226,.223,.2234,.2238,.2242,.2246,.2251,.2255,.2259,.2264,.2268,.2272,.2277,.2281,.2285,.2289,.2293,.2297,.2301,.2307,.2314,.232,.2326,.2331,.2336,.2341,.2347,.2352,.2356,.236,.2365,.2369,.2373,.2378,.2384,.2389,.2395,.24,.2406,.2413,.2419,.2425,.2431,.2436,.2441,.2447,.2452,.2458,.2464,.2469,.2475,.2482,.2488,.2495,.2502,.2509,.2516,.2523,.253,.2538,.2545,.2552,.2558,.2564,.2569,.2575,.2582,.2589,.2595,.2602,.2609,.2615,.2622,.263,.264,.2651,.2659,.2668,.2676,.2683,.2689,.2696,.2705,.2716,.2727,.2735,.2743,.2751,.276,.2769,.2777,.2786,.2795,.2805,.2817,.2829,.2841,.2853,.2864,.2876,.2887,.2899,.2909,.292,.293,.2941,.2953,.2968,.2983,.2998,.3015,.3031,.3048,.3061,.3073,.3091,.3109,.3127,.3146,.317,.3195,.3218,.324,.3263,.3288,.3317,.3346,.3389,.3428,.346,.3509,.3598,.368,.4],O8=[0,.01586,.01852,.02109,.02357,.02575,.02751,.02928,.03083,.03225,.03366,.03507,.0363,.03753,.03877,.04,.04115,.04231,.04346,.04461,.04568,.04671,.04774,.04877,.0498,.05072,.05162,.05252,.05342,.05432,.05521,.05606,.05692,.05778,.05863,.05949,.06033,.06116,.06199,.06282,.06364,.06447,.06529,.06611,.06692,.06774,.06855,.06937,.07017,.0709,.07163,.07236,.0731,.07383,.07456,.07534,.07619,.07703,.07788,.07872,.07957,.0803,.08091,.08152,.08213,.08274,.08335,.08396,.08457,.08518,.08578,.08638,.08699,.08759,.08819,.0888,.0894,.09001,.09063,.09125,.09187,.0925,.09312,.09374,.09436,.09499,.09549,.09599,.09649,.09699,.09749,.09799,.09849,.09898,.09948,.09998,.1006,.1012,.1018,.1024,.103,.1036,.1042,.1048,.1053,.1058,.1063,.1068,.1073,.1078,.1083,.1089,.1094,.1099,.1104,.1109,.1115,.112,.1126,.1131,.1136,.1142,.1147,.1153,.1158,.1164,.1169,.1174,.118,.1185,.1191,.1196,.1202,.1207,.1213,.1218,.1224,.123,.1235,.1241,.1246,.1252,.1256,.126,.1265,.1269,.1273,.1278,.1282,.1287,.1291,.1295,.13,.1304,.1309,.1314,.1318,.1323,.1327,.1332,.1337,.1341,.1346,.135,.1355,.1359,.1364,.1368,.1373,.1377,.1382,.1386,.1391,.1395,.1399,.1404,.1408,.1412,.1416,.142,.1424,.1428,.1432,.1436,.144,.1445,.1449,.1453,.1458,.1462,.1467,.1472,.1476,.1481,.1486,.1491,.1495,.15,.1504,.1508,.1512,.1516,.152,.1523,.1527,.1531,.1535,.1539,.1543,.1547,.1551,.1556,.1561,.1565,.157,.1575,.158,.1584,.1589,.1594,.1599,.1603,.1607,.1611,.1616,.162,.1624,.1628,.1632,.1637,.1641,.1645,.1649,.1654,.1658,.1663,.1668,.1672,.1677,.1681,.1686,.1691,.1695,.17,.1703,.1707,.1711,.1714,.1718,.1722,.1725,.1729,.1733,.1736,.174,.1744,.1747,.1751,.1755,.176,.1764,.1768,.1773,.1777,.1781,.1786,.179,.1794,.1799,.1802,.1806,.1809,.1813,.1816,.182,.1823,.1826,.183,.1833,.1837,.184,.1844,.1847,.1851,.1855,.1859,.1863,.1867,.1872,.1876,.188,.1884,.1888,.1893,.1897,.1901,.1905,.1908,.1912,.1916,.192,.1923,.1927,.1931,.1935,.1938,.1942,.1946,.195,.1953,.1957,.196,.1964,.1967,.1971,.1974,.1978,.1982,.1985,.1989,.1992,.1996,.1999,.2003,.2007,.2011,.2015,.2019,.2024,.2028,.2032,.2036,.204,.2044,.2048,.2052,.2056,.206,.2064,.2068,.2072,.2075,.2079,.2083,.2087,.2091,.2095,.2099,.2103,.2107,.2111,.2115,.2119,.2123,.2127,.2131,.2135,.2139,.2143,.2147,.2151,.2155,.2158,.2162,.2166,.2169,.2173,.2177,.218,.2184,.2188,.2191,.2195,.2198,.2202,.2206,.2209,.2213,.2217,.222,.2224,.2228,.2231,.2235,.2239,.2242,.2246,.225,.2253,.2257,.226,.2264,.2267,.2271,.2274,.2278,.2281,.2285,.2288,.2292,.2295,.2299,.2302,.2306,.231,.2314,.2317,.2321,.2325,.2329,.2333,.2337,.234,.2344,.2348,.2352,.2355,.2359,.2362,.2366,.2369,.2373,.2376,.238,.2383,.2387,.2391,.2394,.2398,.2401,.2405,.2409,.2413,.2417,.2421,.2424,.2428,.2432,.2436,.244,.2444,.2448,.2451,.2455,.2458,.2462,.2465,.2469,.2472,.2476,.2479,.2483,.2487,.249,.2494,.2497,.2501,.2505,.2508,.2512,.2516,.252,.2524,.2528,.2532,.2536,.254,.2544,.2548,.2551,.2555,.2559,.2562,.2566,.257,.2573,.2577,.2581,.2584,.2588,.2592,.2595,.2599,.2603,.2607,.2611,.2614,.2618,.2622,.2626,.263,.2634,.2638,.2642,.2645,.2649,.2653,.2657,.266,.2664,.2667,.2671,.2675,.2678,.2682,.2685,.2689,.2693,.2696,.27,.2703,.2707,.271,.2714,.2717,.2721,.2724,.2727,.2731,.2734,.2738,.2741,.2745,.2748,.2752,.2756,.276,.2763,.2767,.2771,.2775,.2779,.2783,.2787,.2791,.2795,.2799,.2802,.2806,.2809,.2813,.2817,.282,.2824,.2827,.2831,.2835,.2838,.2842,.2845,.2849,.2853,.2857,.2861,.2865,.2869,.2873,.2877,.2881,.2885,.2889,.2893,.2897,.2901,.2905,.2909,.2913,.2917,.2921,.2925,.2929,.2933,.2937,.2941,.2945,.295,.2954,.2958,.2962,.2966,.297,.2974,.2978,.2982,.2986,.299,.2994,.2998,.3002,.3006,.301,.3014,.3017,.3021,.3025,.3029,.3032,.3036,.304,.3043,.3047,.3051,.3055,.3059,.3063,.3068,.3072,.3076,.308,.3084,.3088,.3092,.3096,.31,.3104,.3108,.3111,.3115,.3118,.3122,.3126,.3129,.3133,.3136,.314,.3144,.3147,.3151,.3155,.316,.3164,.3168,.3172,.3177,.3181,.3185,.3189,.3194,.3198,.3202,.3206,.321,.3214,.3218,.3222,.3226,.323,.3234,.3238,.3242,.3246,.3249,.3254,.3258,.3262,.3266,.327,.3274,.3278,.3282,.3286,.329,.3295,.3299,.3303,.3307,.3311,.3315,.332,.3324,.3328,.3332,.3336,.3341,.3345,.3349,.3354,.3358,.3363,.3368,.3372,.3377,.3382,.3386,.3391,.3396,.34,.3405,.3409,.3413,.3418,.3422,.3426,.3431,.3435,.3439,.3444,.3448,.3453,.3457,.3462,.3466,.3471,.3475,.348,.3484,.3489,.3493,.3498,.3502,.3507,.3511,.3516,.352,.3524,.3529,.3533,.3538,.3542,.3547,.3551,.3555,.356,.3564,.3569,.3573,.3577,.3582,.3586,.359,.3595,.3599,.3604,.3609,.3614,.3619,.3624,.3629,.3634,.3639,.3644,.3649,.3654,.3659,.3664,.3669,.3674,.3679,.3684,.3689,.3694,.3699,.3704,.3709,.3714,.3719,.3724,.3729,.3734,.3739,.3744,.3749,.3754,.3759,.3764,.3769,.3774,.3779,.3784,.3789,.3794,.3799,.3805,.3811,.3817,.3823,.3829,.3835,.3841,.3848,.3853,.3858,.3864,.3869,.3874,.3879,.3884,.3889,.3895,.39,.3906,.3912,.3918,.3924,.393,.3936,.3942,.3949,.3955,.3961,.3967,.3973,.3979,.3985,.3991,.3997,.4003,.4009,.4016,.4022,.4028,.4034,.4041,.4047,.4053,.4059,.4066,.4072,.4078,.4084,.4091,.4097,.4104,.4111,.4118,.4125,.4133,.414,.4147,.4154,.416,.4167,.4173,.418,.4186,.4193,.4199,.4207,.4214,.4222,.423,.4238,.4245,.4253,.4261,.4269,.4278,.4286,.4294,.4302,.4309,.4317,.4324,.4332,.4339,.4346,.4354,.4363,.4372,.438,.4389,.4397,.4405,.4414,.4422,.443,.4438,.4446,.4455,.4464,.4472,.4481,.449,.4499,.4508,.4517,.4526,.4535,.4544,.4553,.4563,.4572,.4582,.4592,.4602,.461,.4619,.4628,.4637,.4646,.4657,.4668,.4679,.469,.4701,.4711,.472,.473,.474,.4749,.4761,.4772,.4784,.4795,.4806,.4817,.4827,.4838,.4848,.486,.4872,.4884,.4897,.4908,.4918,.4929,.494,.4951,.4964,.4977,.499,.5004,.5016,.5029,.5042,.5055,.5069,.5082,.5095,.5109,.5123,.5136,.515,.5164,.5177,.5191,.5205,.522,.5235,.525,.5265,.528,.5295,.5311,.5328,.5346,.5362,.5377,.5392,.541,.543,.545,.5466,.5482,.5497,.5517,.5539,.5559,.5577,.5595,.5616,.5638,.5659,.568,.57,.5724,.5749,.577,.5791,.5815,.584,.5864,.5888,.5914,.5941,.5969,.5999,.6026,.6055,.6089,.6122,.6153,.619,.6224,.6259,.6303,.6339,.6384,.6428,.6477,.6526,.6577,.6637,.6695,.677,.6847,.6936,.7046,.7176,.7371,.8],B8=[0,.02449,.02895,.03181,.03417,.03653,.04025,.04493,.04683,.04869,.05056,.05242,.05419,.05596,.05773,.0595,.06191,.06456,.06721,.06862,.06987,.07112,.07238,.07363,.07488,.07632,.07778,.07923,.08069,.08214,.08391,.08578,.08765,.08953,.09075,.09175,.09275,.09375,.09475,.09575,.09676,.09781,.09902,.1002,.1014,.1026,.1038,.1051,.1065,.108,.1094,.1108,.1123,.1132,.1141,.1149,.1157,.1166,.1174,.1182,.1191,.1199,.1209,.122,.123,.1241,.1252,.1262,.1273,.1284,.1296,.1308,.1319,.1331,.1343,.1353,.1361,.1368,.1376,.1383,.139,.1398,.1405,.1413,.142,.1429,.1438,.1447,.1457,.1466,.1475,.1485,.1494,.1504,.1514,.1524,.1534,.1544,.1554,.1565,.1575,.1582,.1588,.1595,.1602,.1609,.1616,.1623,.163,.1637,.1643,.165,.1659,.1667,.1675,.1683,.1692,.17,.1708,.1716,.1725,.1734,.1743,.1752,.1761,.177,.1779,.1788,.1797,.1804,.1811,.1817,.1823,.1829,.1836,.1842,.1848,.1854,.186,.1867,.1873,.188,.1888,.1895,.1903,.1911,.1918,.1926,.1934,.1941,.1949,.1957,.1965,.1974,.1982,.199,.1998,.2007,.2015,.2023,.203,.2036,.2042,.2048,.2054,.206,.2066,.2072,.2078,.2084,.209,.2096,.2102,.2109,.2116,.2123,.213,.2137,.2144,.2151,.2158,.2165,.2172,.2179,.2187,.2195,.2203,.2211,.2219,.2227,.2235,.2243,.225,.2256,.2261,.2267,.2272,.2278,.2283,.2289,.2294,.23,.2306,.2311,.2317,.2322,.2328,.2335,.2342,.2348,.2355,.2362,.2369,.2376,.2382,.2389,.2396,.2403,.241,.2417,.2424,.2432,.2439,.2446,.2453,.246,.2467,.2474,.248,.2486,.2491,.2496,.2502,.2507,.2513,.2518,.2524,.2529,.2535,.254,.2546,.2551,.2558,.2564,.257,.2576,.2582,.2589,.2595,.2601,.2607,.2613,.262,.2626,.2633,.264,.2647,.2655,.2662,.2669,.2676,.2683,.269,.2697,.2703,.2708,.2713,.2719,.2724,.2729,.2734,.2739,.2744,.2749,.2754,.2759,.2764,.2769,.2774,.278,.2787,.2793,.2799,.2805,.2811,.2818,.2824,.283,.2836,.2842,.2848,.2855,.2861,.2868,.2875,.2881,.2888,.2894,.2901,.2907,.2914,.2921,.2927,.2932,.2937,.2942,.2948,.2953,.2958,.2963,.2969,.2974,.2979,.2985,.299,.2995,.3,.3006,.3012,.3018,.3023,.3029,.3035,.3041,.3047,.3052,.3058,.3064,.307,.3076,.3082,.3089,.3096,.3102,.3109,.3116,.3123,.3129,.3136,.3143,.3149,.3155,.3159,.3164,.3169,.3174,.3179,.3184,.3189,.3194,.3198,.3203,.3208,.3213,.3218,.3223,.3228,.3234,.324,.3245,.3251,.3257,.3263,.3268,.3274,.328,.3286,.3291,.3297,.3303,.331,.3316,.3322,.3329,.3335,.3341,.3348,.3354,.3361,.3367,.3373,.3379,.3384,.3389,.3394,.3399,.3404,.341,.3415,.342,.3425,.343,.3435,.344,.3445,.345,.3456,.3462,.3467,.3473,.3478,.3484,.3489,.3495,.35,.3506,.3511,.3517,.3522,.3528,.3535,.3541,.3548,.3554,.356,.3567,.3573,.358,.3586,.3592,.3599,.3604,.3609,.3614,.3619,.3624,.3629,.3634,.3639,.3644,.3648,.3653,.3658,.3663,.3668,.3673,.3679,.3684,.369,.3695,.3701,.3707,.3712,.3718,.3724,.3729,.3735,.3741,.3746,.3752,.3758,.3765,.3771,.3778,.3784,.379,.3797,.3803,.3809,.3816,.3822,.3828,.3833,.3838,.3843,.3848,.3853,.3858,.3862,.3867,.3872,.3877,.3882,.3887,.3892,.3897,.3902,.3908,.3914,.3919,.3925,.393,.3936,.3942,.3947,.3953,.3959,.3964,.397,.3976,.3982,.3989,.3995,.4002,.4008,.4015,.4021,.4028,.4034,.4041,.4047,.4053,.4058,.4063,.4068,.4073,.4077,.4082,.4087,.4092,.4097,.4102,.4107,.4112,.4117,.4122,.4127,.4133,.4138,.4144,.415,.4156,.4162,.4167,.4173,.4179,.4185,.4191,.4196,.4203,.4209,.4215,.4222,.4228,.4235,.4241,.4247,.4254,.426,.4267,.4273,.4279,.4284,.4289,.4294,.4299,.4305,.431,.4315,.432,.4325,.4331,.4336,.4341,.4346,.4352,.4357,.4363,.4369,.4374,.438,.4386,.4391,.4397,.4403,.4408,.4414,.442,.4426,.4432,.4439,.4446,.4453,.4459,.4466,.4473,.448,.4487,.4493,.45,.4505,.4511,.4516,.4521,.4526,.4531,.4536,.4542,.4547,.4552,.4557,.4562,.4568,.4573,.4578,.4584,.459,.4596,.4602,.4608,.4614,.462,.4626,.4631,.4637,.4643,.4649,.4656,.4663,.4669,.4676,.4683,.469,.4696,.4703,.471,.4717,.4724,.4729,.4735,.4741,.4746,.4752,.4757,.4763,.4768,.4774,.4779,.4785,.4791,.4796,.4802,.4808,.4814,.482,.4826,.4832,.4838,.4844,.485,.4856,.4862,.4868,.4874,.4881,.4888,.4896,.4903,.491,.4917,.4924,.4932,.4939,.4946,.4952,.4958,.4964,.4969,.4975,.4981,.4986,.4992,.4997,.5003,.5009,.5014,.502,.5026,.5032,.5039,.5045,.5052,.5058,.5065,.5071,.5078,.5085,.5091,.5098,.5105,.5112,.5119,.5126,.5134,.5141,.5148,.5155,.5163,.517,.5177,.5183,.5189,.5195,.5201,.5207,.5212,.5218,.5224,.523,.5236,.5242,.5248,.5255,.5262,.5269,.5276,.5283,.5289,.5296,.5303,.531,.5317,.5324,.5332,.534,.5348,.5356,.5363,.5371,.5379,.5387,.5395,.5402,.5409,.5415,.5422,.5428,.5434,.5441,.5447,.5454,.546,.5466,.5473,.548,.5487,.5494,.5502,.5509,.5516,.5523,.5531,.5538,.5545,.5553,.5561,.5569,.5578,.5586,.5594,.5602,.5611,.5619,.5627,.5634,.5641,.5649,.5656,.5663,.567,.5678,.5685,.5692,.5699,.5707,.5715,.5722,.573,.5738,.5745,.5753,.5761,.5768,.5776,.5786,.5795,.5804,.5814,.5823,.5832,.5842,.5851,.5858,.5866,.5874,.5882,.5889,.5897,.5905,.5912,.592,.5928,.5937,.5945,.5953,.5962,.597,.5979,.5987,.5996,.6005,.6016,.6026,.6037,.6047,.6058,.6069,.6078,.6087,.6096,.6105,.6114,.6123,.6132,.6141,.615,.616,.617,.618,.619,.62,.6211,.6221,.6231,.6243,.6254,.6265,.6276,.6287,.6298,.6309,.6319,.6329,.6339,.6349,.6359,.6369,.638,.6391,.6402,.6413,.6424,.6435,.6446,.6458,.6471,.6483,.6495,.6507,.652,.6532,.6544,.6555,.6567,.6579,.6591,.6603,.6615,.6627,.6638,.665,.6662,.6674,.6687,.6701,.6714,.6727,.6741,.6754,.6767,.6781,.6794,.6807,.682,.6834,.6847,.686,.6873,.6886,.6899,.6914,.6929,.6944,.6959,.6975,.6989,.7004,.7019,.7034,.7049,.7063,.7078,.7093,.7108,.7123,.7138,.7154,.7169,.7185,.72,.7217,.7233,.725,.7266,.7283,.7299,.7316,.7333,.735,.7367,.7384,.7401,.7418,.7436,.7455,.7473,.7491,.751,.7528,.7547,.7566,.7585,.7603,.7622,.7641,.7661,.7681,.7702,.7723,.7743,.7764,.7785,.7806,.7827,.7848,.7869,.7892,.7914,.7937,.796,.7983,.8006,.8029,.8054,.8079,.8104,.8128,.8152,.8177,.8204,.8232,.8259,.8285,.8311,.8338,.8366,.8394,.8424,.8454,.8484,.8514,.8543,.8575,.8608,.8641,.8675,.8709,.8743,.8778,.8814,.8851,.8889,.8928,.8969,.901,.9051,.9093,.9137,.9183,.923,.9278,.9329,.9382,.9436,.9492,.955,.9608,.9674,.9742,.9813,.9891,.9971,1.006,1.016,1.026,1.038,1.052,1.067,1.087,1.116,1.207],z8=[0,.03098,.03864,.0432,.0471,.05103,.05508,.05913,.06225,.06512,.06799,.07072,.0731,.07549,.07788,.08026,.08265,.08504,.08742,.08981,.09193,.09402,.09612,.09822,.1003,.1023,.1042,.1062,.1082,.1101,.1118,.1134,.1151,.1168,.1184,.1201,.1218,.1235,.1252,.1269,.1286,.1303,.1318,.1334,.1349,.1365,.138,.1396,.1412,.1428,.1444,.146,.1476,.1492,.1508,.1524,.154,.1556,.1572,.1589,.1604,.1616,.1629,.1642,.1654,.1667,.168,.1692,.1705,.1717,.1729,.1741,.1753,.1765,.1777,.1789,.1802,.1814,.1826,.1839,.1851,.1864,.1876,.1888,.1901,.1911,.1921,.1931,.1941,.1952,.1962,.1972,.1982,.1992,.2003,.2015,.2027,.204,.2052,.2064,.2076,.2088,.21,.2111,.2121,.2132,.2143,.2153,.2164,.2174,.2185,.2195,.2206,.2217,.2228,.2239,.2249,.226,.2271,.2282,.2293,.2304,.2314,.2325,.2335,.2346,.2356,.2367,.2377,.2388,.2398,.2409,.242,.2431,.2442,.2453,.2464,.2475,.2486,.2497,.2507,.2516,.2526,.2535,.2545,.2554,.2564,.2573,.2583,.2592,.2602,.2611,.262,.263,.2639,.2648,.2658,.2667,.2676,.2686,.2695,.2704,.2713,.2722,.2731,.2739,.2748,.2757,.2766,.2775,.2783,.2792,.2801,.281,.2818,.2827,.2835,.2844,.2853,.2861,.287,.2879,.2887,.2896,.2905,.2915,.2924,.2934,.2943,.2953,.2962,.2972,.2981,.2991,.3,.3008,.3016,.3024,.3031,.3039,.3047,.3055,.3063,.307,.3078,.3086,.3094,.3102,.3111,.312,.313,.3139,.3148,.3158,.3167,.3176,.3185,.3195,.3204,.3212,.3221,.323,.3239,.3248,.3257,.3265,.3274,.3283,.3292,.3301,.331,.3319,.3327,.3336,.3345,.3354,.3363,.3372,.3381,.339,.3399,.3407,.3415,.3422,.343,.3438,.3445,.3453,.346,.3468,.3476,.3483,.3491,.3499,.3507,.3515,.3524,.3532,.354,.3549,.3557,.3566,.3574,.3582,.3591,.3599,.3606,.3614,.3621,.3628,.3635,.3642,.3649,.3656,.3663,.367,.3678,.3685,.3692,.3699,.3707,.3716,.3724,.3733,.3741,.375,.3758,.3767,.3775,.3784,.3793,.3801,.3809,.3816,.3824,.3832,.3839,.3847,.3855,.3862,.387,.3878,.3886,.3893,.3901,.3908,.3915,.3922,.3929,.3936,.3943,.395,.3958,.3965,.3972,.3979,.3986,.3993,.4,.4008,.4017,.4025,.4033,.4041,.4049,.4058,.4066,.4074,.4082,.409,.4099,.4106,.4114,.4122,.4129,.4137,.4145,.4152,.416,.4168,.4175,.4183,.4191,.4198,.4207,.4215,.4224,.4232,.4241,.4249,.4258,.4266,.4274,.4283,.4291,.43,.4307,.4314,.4321,.4328,.4335,.4342,.4349,.4356,.4363,.437,.4378,.4385,.4392,.4399,.4406,.4414,.4422,.443,.4438,.4446,.4454,.4462,.4469,.4477,.4485,.4493,.4501,.4508,.4514,.4521,.4528,.4535,.4542,.4549,.4555,.4562,.4569,.4576,.4583,.4589,.4596,.4603,.4611,.4619,.4627,.4635,.4643,.4651,.4659,.4667,.4675,.4683,.4691,.4699,.4706,.4713,.472,.4727,.4734,.4741,.4748,.4754,.4761,.4768,.4775,.4782,.4789,.4796,.4803,.4811,.4818,.4826,.4834,.4842,.4849,.4857,.4865,.4872,.488,.4888,.4895,.4903,.491,.4917,.4925,.4932,.4939,.4946,.4954,.4961,.4968,.4975,.4982,.499,.4997,.5005,.5013,.5021,.5029,.5037,.5046,.5054,.5062,.507,.5079,.5087,.5095,.5103,.511,.5117,.5124,.5131,.5139,.5146,.5153,.516,.5167,.5174,.5182,.5189,.5196,.5203,.5211,.5219,.5227,.5235,.5243,.5251,.5259,.5267,.5275,.5283,.5291,.5299,.5307,.5314,.5321,.5328,.5335,.5342,.5349,.5356,.5363,.537,.5377,.5384,.5392,.5399,.5406,.5413,.5419,.5426,.5433,.544,.5447,.5454,.5461,.5468,.5475,.5482,.5489,.5496,.5503,.5511,.5519,.5526,.5534,.5542,.555,.5558,.5565,.5573,.5581,.5589,.5597,.5604,.5611,.5618,.5626,.5633,.564,.5647,.5654,.5661,.5668,.5675,.5683,.569,.5697,.5705,.5713,.5721,.5729,.5737,.5745,.5753,.5762,.577,.5778,.5786,.5794,.5802,.581,.5818,.5826,.5834,.5843,.5851,.5859,.5867,.5875,.5883,.5891,.5899,.5908,.5917,.5926,.5934,.5943,.5952,.5961,.597,.5979,.5988,.5996,.6004,.6011,.6018,.6026,.6033,.604,.6047,.6054,.6061,.6068,.6075,.6083,.609,.6097,.6104,.6113,.6121,.6129,.6137,.6145,.6154,.6162,.617,.6178,.6186,.6194,.6202,.621,.6217,.6224,.6231,.6239,.6246,.6253,.6261,.6268,.6275,.6282,.629,.6297,.6305,.6314,.6322,.6331,.6339,.6348,.6356,.6365,.6373,.6382,.639,.6399,.6407,.6415,.6422,.643,.6438,.6446,.6454,.6462,.6469,.6477,.6485,.6493,.6501,.6509,.6518,.6526,.6535,.6543,.6552,.656,.6568,.6577,.6585,.6594,.6602,.661,.6619,.6627,.6635,.6644,.6652,.666,.6668,.6677,.6685,.6693,.6702,.6711,.6721,.673,.674,.6749,.6759,.6768,.6778,.6788,.6797,.6806,.6814,.6823,.6832,.684,.6849,.6857,.6866,.6874,.6883,.6891,.69,.6909,.6918,.6926,.6935,.6944,.6953,.6962,.6971,.698,.6989,.6998,.7007,.7015,.7024,.7033,.7042,.7051,.7059,.7068,.7077,.7086,.7095,.7103,.7112,.7121,.713,.7139,.7147,.7156,.7165,.7174,.7183,.7191,.72,.721,.722,.723,.7239,.7249,.7259,.7269,.7278,.7288,.7298,.7308,.7318,.7328,.7338,.7348,.7358,.7368,.7378,.7388,.7398,.7408,.7418,.7428,.7439,.7449,.7459,.7469,.7479,.7489,.7499,.7508,.7518,.7528,.7538,.7548,.7557,.7567,.7577,.7587,.7596,.7607,.7619,.7631,.7643,.7655,.7667,.7679,.7691,.7703,.7713,.7723,.7734,.7744,.7754,.7764,.7775,.7785,.7795,.7807,.7819,.7831,.7843,.7855,.7868,.788,.7892,.7904,.7916,.7928,.794,.7951,.7963,.7975,.7987,.7999,.8011,.8023,.8036,.8048,.806,.8073,.8085,.8097,.8109,.8122,.8134,.8146,.8158,.817,.8182,.8195,.8208,.8222,.8236,.825,.8264,.8278,.8292,.8305,.8318,.8331,.8344,.8357,.837,.8383,.8396,.841,.8425,.844,.8455,.847,.8485,.85,.8516,.8532,.8548,.8565,.8581,.8597,.8611,.8626,.864,.8654,.8669,.8683,.8697,.8714,.8732,.8749,.8766,.8784,.8801,.8817,.8832,.8848,.8863,.8879,.8895,.8912,.893,.8947,.8965,.8983,.9001,.9019,.9036,.9054,.9072,.909,.9108,.9127,.9146,.9164,.9183,.9202,.922,.9237,.9255,.9273,.9291,.9311,.9333,.9354,.9375,.9397,.9416,.9435,.9454,.9473,.9492,.9513,.9536,.956,.9583,.9605,.9625,.9646,.9666,.9686,.9707,.9731,.9755,.9779,.9802,.9823,.9844,.9865,.9886,.9909,.9936,.9963,.999,1.002,1.004,1.006,1.009,1.012,1.014,1.017,1.019,1.022,1.025,1.027,1.03,1.033,1.035,1.038,1.041,1.044,1.047,1.05,1.053,1.056,1.059,1.062,1.065,1.068,1.071,1.074,1.078,1.081,1.085,1.088,1.092,1.095,1.098,1.101,1.105,1.109,1.113,1.117,1.12,1.125,1.129,1.133,1.136,1.14,1.145,1.151,1.154,1.158,1.163,1.167,1.172,1.177,1.182,1.187,1.192,1.198,1.203,1.209,1.215,1.222,1.228,1.234,1.241,1.248,1.255,1.262,1.27,1.279,1.287,1.296,1.306,1.315,1.326,1.338,1.351,1.365,1.379,1.398,1.419,1.449,1.485,1.64],k8=[0,.03915,.04792,.05329,.05759,.0619,.06714,.07253,.07688,.08035,.08382,.0873,.09053,.09376,.09698,.1002,.1034,.1066,.1099,.1129,.1152,.1176,.1199,.1222,.1245,.1273,.1302,.1332,.1361,.1385,.1404,.1423,.1443,.1462,.1481,.1501,.1524,.1548,.1571,.1595,.1619,.1639,.1657,.1676,.1695,.1713,.1732,.175,.1769,.1787,.1805,.1823,.1841,.1859,.1877,.1896,.1915,.1933,.1952,.1971,.199,.2007,.2022,.2037,.2052,.2067,.2082,.2097,.2112,.2128,.2146,.2164,.2182,.22,.2218,.2236,.2253,.2267,.228,.2294,.2307,.232,.2334,.2347,.2361,.2374,.2391,.2408,.2424,.2441,.2458,.2475,.2491,.2506,.2519,.2532,.2544,.2557,.257,.2583,.2595,.2608,.2621,.2635,.2649,.2664,.2679,.2693,.2708,.2722,.2737,.2751,.2764,.2777,.279,.2803,.2815,.2828,.2841,.2854,.2867,.2879,.2892,.2904,.2917,.2929,.2941,.2954,.2966,.2978,.2991,.3003,.3017,.303,.3043,.3057,.307,.3084,.3097,.311,.3124,.3135,.3146,.3157,.3168,.318,.3191,.3202,.3213,.3224,.3235,.3246,.3259,.3272,.3285,.3298,.3311,.3325,.3338,.3351,.3364,.3377,.3387,.3398,.3408,.3418,.3429,.3439,.3449,.346,.347,.348,.3491,.3501,.3514,.3526,.3539,.3551,.3564,.3577,.3589,.3602,.3614,.3627,.3637,.3647,.3657,.3667,.3678,.3688,.3698,.3708,.3718,.3728,.3739,.3749,.376,.3772,.3783,.3795,.3806,.3818,.383,.3841,.3853,.3864,.3876,.3886,.3897,.3907,.3918,.3928,.3939,.3949,.396,.397,.398,.3991,.4001,.4012,.4022,.4032,.4042,.4052,.4063,.4073,.4083,.4093,.4103,.4114,.4124,.4135,.4146,.4156,.4167,.4178,.4189,.42,.4211,.4222,.4233,.4244,.4254,.4263,.4273,.4283,.4292,.4302,.4311,.4321,.433,.434,.4349,.4359,.4368,.4378,.439,.4401,.4412,.4423,.4434,.4445,.4456,.4467,.4478,.4489,.45,.451,.4519,.4528,.4537,.4546,.4555,.4564,.4573,.4582,.4591,.46,.4609,.4618,.4627,.4638,.4649,.466,.4671,.4681,.4692,.4703,.4714,.4725,.4735,.4746,.4756,.4765,.4774,.4783,.4792,.4801,.481,.4819,.4828,.4837,.4847,.4856,.4865,.4874,.4884,.4894,.4904,.4914,.4924,.4934,.4944,.4954,.4964,.4974,.4984,.4994,.5004,.5014,.5023,.5033,.5042,.5052,.5061,.5071,.5081,.509,.51,.5109,.5119,.5128,.5138,.5147,.5157,.5166,.5175,.5185,.5194,.5204,.5213,.5222,.5232,.5241,.5251,.526,.527,.528,.529,.5299,.5309,.5319,.5329,.5338,.5348,.5358,.5368,.5377,.5386,.5395,.5404,.5413,.5422,.543,.5439,.5448,.5457,.5466,.5475,.5484,.5493,.5502,.5512,.5522,.5532,.5542,.5552,.5563,.5573,.5583,.5593,.5603,.5613,.5623,.5632,.5641,.565,.5658,.5667,.5676,.5684,.5693,.5702,.571,.5719,.5728,.5736,.5745,.5754,.5764,.5774,.5784,.5794,.5804,.5814,.5824,.5834,.5844,.5855,.5865,.5875,.5883,.5892,.5901,.5909,.5918,.5927,.5935,.5944,.5953,.5961,.597,.5979,.5987,.5996,.6005,.6015,.6025,.6035,.6044,.6054,.6064,.6074,.6083,.6093,.6103,.6113,.6123,.6132,.6141,.615,.6159,.6168,.6177,.6186,.6195,.6204,.6213,.6222,.6231,.624,.6249,.6259,.6268,.6277,.6287,.6296,.6305,.6315,.6324,.6333,.6343,.6352,.6361,.6371,.638,.639,.6399,.6409,.6418,.6428,.6437,.6447,.6456,.6466,.6475,.6485,.6494,.6503,.6512,.6521,.6531,.654,.6549,.6558,.6567,.6576,.6585,.6594,.6603,.6612,.6621,.663,.664,.665,.666,.667,.6679,.6689,.6699,.6709,.6719,.6729,.6738,.6748,.6757,.6766,.6775,.6783,.6792,.6801,.6809,.6818,.6827,.6836,.6844,.6853,.6862,.6871,.688,.689,.69,.691,.6921,.6931,.6941,.6951,.6961,.6971,.6981,.6992,.7001,.701,.7019,.7028,.7037,.7046,.7055,.7064,.7073,.7082,.7091,.71,.7109,.7118,.7127,.7137,.7147,.7157,.7167,.7177,.7187,.7197,.7208,.7218,.7228,.7238,.7248,.7257,.7267,.7276,.7285,.7294,.7304,.7313,.7322,.7332,.7341,.735,.7359,.7369,.7378,.7388,.7398,.7408,.7418,.7428,.7438,.7448,.7458,.7468,.7478,.7488,.7498,.7508,.7518,.7527,.7537,.7547,.7556,.7566,.7576,.7586,.7595,.7605,.7615,.7624,.7634,.7643,.7653,.7663,.7672,.7682,.7691,.7701,.771,.772,.7729,.7739,.7749,.7759,.777,.778,.7791,.7801,.7812,.7822,.7833,.7843,.7854,.7865,.7875,.7885,.7894,.7904,.7913,.7923,.7932,.7942,.7951,.7961,.7971,.798,.799,.7999,.801,.8021,.8032,.8043,.8054,.8065,.8076,.8087,.8098,.8109,.812,.8131,.814,.815,.816,.817,.8179,.8189,.8199,.8209,.8218,.8228,.8238,.8248,.8259,.827,.8281,.8292,.8304,.8315,.8326,.8338,.8349,.836,.8372,.8382,.8392,.8403,.8413,.8423,.8433,.8443,.8453,.8464,.8474,.8484,.8494,.8505,.8516,.8527,.8538,.8549,.8561,.8572,.8583,.8594,.8605,.8616,.8628,.8639,.865,.8661,.8672,.8683,.8694,.8705,.8716,.8727,.8738,.8749,.8761,.8772,.8783,.8795,.8806,.8818,.8829,.884,.8852,.8863,.8874,.8886,.8898,.891,.8922,.8934,.8946,.8958,.897,.8982,.8994,.9006,.9017,.9028,.904,.9051,.9063,.9074,.9085,.9097,.9108,.9119,.9131,.9144,.9157,.917,.9183,.9196,.9209,.9222,.9235,.9248,.926,.9272,.9284,.9296,.9308,.932,.9332,.9343,.9355,.9367,.938,.9393,.9407,.942,.9434,.9448,.9461,.9475,.9488,.9502,.9515,.9528,.954,.9553,.9566,.9579,.9592,.9605,.9618,.9631,.9645,.9659,.9673,.9687,.9701,.9715,.9729,.9743,.9757,.9771,.9786,.98,.9814,.9828,.9843,.9857,.9871,.9886,.99,.9915,.993,.9945,.996,.9974,.9989,1,1.002,1.004,1.005,1.007,1.008,1.01,1.011,1.013,1.015,1.016,1.018,1.019,1.021,1.023,1.024,1.026,1.028,1.029,1.031,1.033,1.035,1.036,1.038,1.04,1.041,1.043,1.045,1.047,1.048,1.05,1.052,1.054,1.055,1.057,1.059,1.061,1.063,1.065,1.067,1.068,1.07,1.072,1.074,1.076,1.078,1.08,1.082,1.084,1.086,1.088,1.09,1.092,1.094,1.096,1.098,1.1,1.102,1.104,1.106,1.108,1.11,1.112,1.115,1.117,1.119,1.121,1.123,1.125,1.128,1.13,1.132,1.134,1.136,1.139,1.141,1.143,1.146,1.148,1.15,1.153,1.155,1.157,1.16,1.162,1.165,1.167,1.17,1.172,1.175,1.177,1.18,1.182,1.185,1.187,1.19,1.193,1.195,1.198,1.201,1.203,1.206,1.209,1.211,1.214,1.217,1.22,1.223,1.226,1.229,1.232,1.234,1.237,1.24,1.243,1.246,1.25,1.253,1.256,1.259,1.262,1.265,1.269,1.272,1.275,1.278,1.282,1.285,1.289,1.292,1.296,1.299,1.303,1.306,1.31,1.314,1.318,1.321,1.325,1.329,1.333,1.337,1.341,1.345,1.349,1.353,1.357,1.362,1.366,1.37,1.375,1.38,1.384,1.389,1.393,1.398,1.403,1.408,1.413,1.418,1.423,1.429,1.434,1.44,1.446,1.451,1.457,1.463,1.469,1.475,1.482,1.488,1.495,1.502,1.509,1.517,1.524,1.532,1.54,1.548,1.557,1.566,1.575,1.585,1.595,1.606,1.617,1.629,1.642,1.656,1.67,1.685,1.703,1.723,1.745,1.771,1.805,1.853,2.025],V8=[0,.0474,.05661,.06374,.06965,.0755,.08082,.08613,.09126,.0959,.1005,.1051,.109,.1129,.1168,.1206,.124,.1275,.1309,.1344,.1376,.1408,.1439,.1471,.1502,.1532,.1562,.1591,.1621,.1651,.1677,.1704,.173,.1757,.1783,.1809,.1835,.186,.1885,.1911,.1936,.1961,.1984,.2007,.203,.2053,.2076,.21,.2121,.2143,.2165,.2187,.2209,.223,.2252,.2273,.2295,.2316,.2337,.2359,.238,.2401,.2421,.2441,.246,.248,.25,.252,.2539,.2559,.2578,.2597,.2616,.2635,.2654,.2673,.2692,.2711,.2729,.2748,.2766,.2784,.2802,.2821,.2839,.2857,.2874,.2892,.2909,.2926,.2944,.2961,.2979,.2996,.3013,.303,.3046,.3063,.308,.3097,.3113,.313,.3147,.3163,.318,.3197,.3213,.323,.3247,.3264,.328,.3297,.3313,.3328,.3344,.3359,.3375,.3391,.3406,.3422,.3437,.3453,.3468,.3483,.3498,.3513,.3528,.3543,.3558,.3573,.3588,.3603,.3619,.3634,.3649,.3664,.368,.3695,.371,.3725,.374,.3755,.377,.3784,.3798,.3812,.3826,.3841,.3855,.3869,.3883,.3898,.3912,.3926,.394,.3954,.3968,.3982,.3996,.401,.4024,.4038,.4052,.4066,.408,.4094,.4108,.4122,.4137,.4151,.4165,.4179,.4193,.4207,.422,.4233,.4247,.426,.4274,.4287,.43,.4314,.4327,.434,.4353,.4367,.438,.4393,.4406,.4419,.4432,.4445,.4459,.4472,.4485,.4498,.4511,.4525,.4538,.4552,.4565,.4578,.4592,.4605,.4619,.4632,.4645,.4658,.4671,.4683,.4696,.4708,.4721,.4733,.4746,.4758,.4771,.4783,.4796,.4808,.4821,.4833,.4846,.4859,.4871,.4884,.4896,.4909,.4921,.4934,.4947,.4959,.4972,.4984,.4997,.501,.5022,.5035,.5048,.506,.5073,.5086,.5098,.511,.5122,.5134,.5146,.5158,.517,.5182,.5194,.5206,.5218,.523,.5242,.5254,.5266,.5278,.529,.5302,.5314,.5326,.5338,.5351,.5363,.5375,.5387,.5399,.5411,.5423,.5435,.5447,.5459,.5471,.5483,.5495,.5507,.5519,.5531,.5543,.5555,.5567,.5579,.559,.5602,.5614,.5625,.5637,.5649,.566,.5672,.5684,.5695,.5707,.5719,.573,.5742,.5754,.5765,.5777,.5788,.58,.5812,.5823,.5835,.5847,.5858,.587,.5882,.5894,.5905,.5917,.5929,.5941,.5953,.5964,.5976,.5988,.6,.6011,.6022,.6034,.6045,.6056,.6068,.6079,.609,.6102,.6113,.6124,.6136,.6147,.6159,.617,.6181,.6193,.6204,.6215,.6227,.6238,.6249,.6261,.6272,.6284,.6295,.6306,.6318,.6329,.6341,.6352,.6364,.6375,.6387,.6399,.641,.6422,.6433,.6445,.6456,.6467,.6478,.6489,.65,.6511,.6522,.6534,.6545,.6556,.6567,.6578,.6589,.66,.6611,.6623,.6634,.6645,.6656,.6667,.6679,.669,.6701,.6712,.6723,.6735,.6746,.6757,.6768,.678,.6791,.6803,.6814,.6825,.6837,.6848,.686,.6871,.6882,.6894,.6905,.6916,.6927,.6938,.6949,.6959,.697,.6981,.6992,.7003,.7014,.7025,.7036,.7046,.7058,.7069,.708,.7091,.7103,.7114,.7125,.7136,.7147,.7159,.717,.7181,.7192,.7204,.7215,.7226,.7237,.7248,.726,.7271,.7282,.7293,.7304,.7316,.7327,.7338,.7349,.736,.7371,.7382,.7393,.7404,.7415,.7426,.7437,.7448,.7458,.7469,.748,.7491,.7502,.7514,.7525,.7536,.7548,.7559,.757,.7582,.7593,.7604,.7616,.7627,.7638,.765,.7661,.7672,.7683,.7694,.7705,.7716,.7727,.7738,.7749,.776,.7771,.7782,.7793,.7804,.7815,.7827,.7838,.7849,.786,.7871,.7882,.7893,.7905,.7916,.7927,.7938,.7949,.7961,.7972,.7983,.7995,.8006,.8017,.8029,.804,.8052,.8063,.8074,.8086,.8097,.8108,.8119,.813,.8141,.8152,.8164,.8175,.8186,.8197,.8208,.8219,.823,.8241,.8252,.8263,.8275,.8286,.8298,.8309,.8321,.8332,.8343,.8355,.8366,.8378,.8389,.8401,.8412,.8423,.8435,.8446,.8458,.8469,.848,.8492,.8503,.8515,.8526,.8538,.8549,.856,.8572,.8583,.8595,.8606,.8617,.8629,.864,.8652,.8663,.8674,.8686,.8697,.8709,.872,.8731,.8743,.8754,.8766,.8777,.8789,.88,.8811,.8823,.8834,.8846,.8857,.8869,.8881,.8893,.8905,.8916,.8928,.894,.8952,.8964,.8975,.8987,.8999,.9011,.9022,.9034,.9046,.9057,.9069,.9081,.9092,.9104,.9116,.9127,.9139,.9151,.9163,.9174,.9186,.9198,.921,.9221,.9233,.9245,.9256,.9268,.928,.9292,.9304,.9316,.9328,.934,.9352,.9365,.9377,.9389,.9401,.9414,.9426,.9438,.945,.9462,.9474,.9486,.9498,.951,.9522,.9534,.9546,.9558,.957,.9582,.9594,.9606,.9619,.9631,.9643,.9655,.9667,.968,.9692,.9704,.9716,.9728,.9741,.9753,.9766,.9778,.9791,.9804,.9817,.9829,.9842,.9855,.9867,.988,.9893,.9905,.9918,.993,.9943,.9955,.9968,.998,.9993,1.001,1.002,1.003,1.004,1.006,1.007,1.008,1.009,1.011,1.012,1.013,1.015,1.016,1.017,1.018,1.02,1.021,1.022,1.024,1.025,1.026,1.028,1.029,1.03,1.032,1.033,1.034,1.036,1.037,1.038,1.04,1.041,1.042,1.044,1.045,1.046,1.048,1.049,1.05,1.052,1.053,1.054,1.056,1.057,1.058,1.06,1.061,1.063,1.064,1.065,1.067,1.068,1.07,1.071,1.072,1.074,1.075,1.077,1.078,1.079,1.081,1.082,1.084,1.085,1.087,1.088,1.089,1.091,1.092,1.094,1.095,1.097,1.098,1.099,1.101,1.102,1.104,1.105,1.107,1.108,1.11,1.111,1.113,1.114,1.116,1.117,1.119,1.12,1.122,1.123,1.125,1.126,1.128,1.129,1.131,1.133,1.134,1.136,1.137,1.139,1.14,1.142,1.144,1.145,1.147,1.148,1.15,1.152,1.153,1.155,1.156,1.158,1.16,1.161,1.163,1.165,1.166,1.168,1.17,1.171,1.173,1.175,1.177,1.178,1.18,1.182,1.183,1.185,1.187,1.189,1.191,1.192,1.194,1.196,1.198,1.199,1.201,1.203,1.205,1.207,1.209,1.211,1.213,1.214,1.216,1.218,1.22,1.222,1.224,1.226,1.228,1.23,1.232,1.234,1.236,1.238,1.24,1.242,1.244,1.246,1.249,1.251,1.253,1.255,1.257,1.259,1.261,1.263,1.265,1.268,1.27,1.272,1.274,1.276,1.279,1.281,1.283,1.286,1.288,1.29,1.292,1.295,1.297,1.299,1.302,1.304,1.306,1.309,1.311,1.314,1.316,1.319,1.321,1.324,1.326,1.329,1.331,1.334,1.336,1.339,1.341,1.344,1.346,1.349,1.352,1.354,1.357,1.36,1.362,1.365,1.368,1.371,1.373,1.376,1.379,1.382,1.385,1.388,1.39,1.393,1.396,1.399,1.402,1.405,1.408,1.411,1.414,1.417,1.42,1.423,1.426,1.43,1.433,1.436,1.439,1.443,1.446,1.449,1.452,1.456,1.459,1.462,1.466,1.469,1.473,1.476,1.48,1.483,1.487,1.491,1.494,1.498,1.502,1.505,1.509,1.513,1.517,1.521,1.525,1.529,1.533,1.537,1.541,1.545,1.549,1.553,1.557,1.562,1.566,1.57,1.575,1.579,1.584,1.589,1.593,1.598,1.602,1.607,1.612,1.617,1.622,1.627,1.632,1.637,1.643,1.648,1.654,1.659,1.665,1.67,1.676,1.682,1.688,1.694,1.7,1.706,1.713,1.719,1.726,1.733,1.74,1.747,1.754,1.761,1.769,1.776,1.784,1.792,1.801,1.809,1.818,1.827,1.836,1.846,1.856,1.867,1.877,1.888,1.9,1.912,1.925,1.938,1.953,1.968,1.984,2.002,2.021,2.041,2.065,2.092,2.124,2.164,2.221,2.445],H8=[0,.05536,.0662,.07447,.08134,.08816,.09451,.1009,.1069,.1123,.1177,.123,.1276,.1322,.1368,.1413,.1453,.1494,.1534,.1575,.1612,.1649,.1686,.1724,.176,.1794,.1828,.1862,.1896,.1929,.1961,.1993,.2025,.2057,.2089,.2119,.2149,.2178,.2208,.2237,.2267,.2295,.2322,.235,.2377,.2404,.2432,.2459,.2484,.251,.2535,.2561,.2586,.2612,.2637,.2662,.2687,.2711,.2736,.2761,.2786,.281,.2834,.2858,.2881,.2905,.2929,.2952,.2976,.2998,.302,.3043,.3065,.3087,.3109,.3132,.3154,.3175,.3196,.3217,.3239,.326,.3281,.3302,.3324,.3344,.3365,.3385,.3405,.3426,.3446,.3467,.3487,.3507,.3527,.3547,.3567,.3587,.3607,.3626,.3646,.3666,.3686,.3705,.3724,.3744,.3763,.3782,.3802,.3821,.384,.3859,.3878,.3896,.3914,.3933,.3951,.397,.3988,.4006,.4025,.4043,.406,.4078,.4096,.4113,.4131,.4149,.4166,.4184,.4202,.4219,.4237,.4254,.4272,.429,.4307,.4325,.4343,.436,.4378,.4395,.4412,.443,.4447,.4464,.4482,.4499,.4516,.4533,.4551,.4567,.4583,.46,.4616,.4633,.4649,.4665,.4682,.4698,.4715,.4731,.4747,.4763,.478,.4796,.4812,.4828,.4844,.486,.4877,.4893,.4909,.4925,.494,.4956,.4972,.4988,.5004,.502,.5035,.5051,.5067,.5083,.5098,.5114,.5129,.5145,.516,.5176,.5191,.5207,.5223,.5238,.5254,.5269,.5284,.53,.5315,.5331,.5346,.5361,.5377,.5392,.5408,.5423,.5438,.5453,.5468,.5483,.5498,.5512,.5527,.5542,.5557,.5572,.5587,.5602,.5616,.5631,.5646,.566,.5675,.569,.5704,.5719,.5733,.5748,.5763,.5777,.5792,.5807,.5821,.5836,.5851,.5865,.588,.5895,.5909,.5924,.5939,.5953,.5968,.5982,.5997,.6011,.6026,.604,.6055,.6069,.6084,.6099,.6113,.6128,.6141,.6155,.6169,.6183,.6197,.6211,.6225,.6239,.6253,.6267,.6281,.6295,.6309,.6323,.6337,.6351,.6365,.6379,.6393,.6407,.6421,.6435,.6449,.6463,.6477,.6491,.6504,.6518,.6532,.6546,.6559,.6573,.6587,.6601,.6615,.6628,.6642,.6656,.6669,.6683,.6697,.6711,.6724,.6738,.6752,.6765,.6779,.6793,.6806,.682,.6834,.6847,.6861,.6875,.6888,.6902,.6916,.6929,.6943,.6957,.697,.6984,.6998,.7011,.7024,.7038,.7051,.7065,.7078,.7092,.7105,.7118,.7132,.7145,.7159,.7172,.7185,.7199,.7212,.7225,.7238,.7252,.7265,.7278,.7292,.7305,.7318,.7331,.7345,.7358,.7371,.7385,.7398,.7411,.7425,.7438,.7451,.7465,.7478,.7491,.7505,.7518,.7531,.7545,.7558,.7572,.7585,.7599,.7612,.7626,.7639,.7652,.7666,.7679,.7693,.7706,.7719,.7732,.7745,.7758,.7771,.7784,.7797,.781,.7823,.7836,.7849,.7862,.7875,.7888,.7901,.7914,.7927,.794,.7953,.7966,.7979,.7992,.8005,.8018,.8031,.8044,.8057,.807,.8083,.8096,.811,.8123,.8136,.8149,.8162,.8175,.8188,.8201,.8214,.8227,.824,.8253,.8266,.8279,.8292,.8306,.8319,.8332,.8345,.8358,.8371,.8384,.8397,.841,.8423,.8436,.8449,.8463,.8476,.8489,.8502,.8515,.8528,.8542,.8555,.8568,.8581,.8594,.8607,.862,.8633,.8646,.8659,.8672,.8685,.8698,.8711,.8724,.8737,.875,.8763,.8776,.8789,.8802,.8815,.8828,.8841,.8854,.8867,.888,.8892,.8905,.8918,.8931,.8944,.8957,.897,.8983,.8996,.9009,.9022,.9035,.9048,.9061,.9074,.9087,.91,.9113,.9127,.914,.9153,.9166,.918,.9193,.9206,.922,.9233,.9246,.926,.9273,.9286,.9299,.9312,.9325,.9338,.9351,.9365,.9378,.9391,.9404,.9417,.943,.9443,.9456,.9469,.9482,.9495,.9508,.9521,.9534,.9547,.956,.9573,.9585,.9598,.9611,.9624,.9638,.9651,.9664,.9678,.9691,.9704,.9718,.9731,.9744,.9758,.9771,.9784,.9798,.9811,.9824,.9838,.9851,.9864,.9877,.9891,.9904,.9917,.993,.9944,.9957,.997,.9984,.9997,1.001,1.002,1.004,1.005,1.006,1.008,1.009,1.01,1.012,1.013,1.015,1.016,1.017,1.019,1.02,1.021,1.023,1.024,1.025,1.027,1.028,1.029,1.031,1.032,1.033,1.035,1.036,1.038,1.039,1.04,1.042,1.043,1.044,1.046,1.047,1.048,1.05,1.051,1.052,1.054,1.055,1.057,1.058,1.059,1.061,1.062,1.063,1.065,1.066,1.067,1.069,1.07,1.072,1.073,1.074,1.076,1.077,1.079,1.08,1.081,1.083,1.084,1.086,1.087,1.088,1.09,1.091,1.093,1.094,1.095,1.097,1.098,1.1,1.101,1.102,1.104,1.105,1.107,1.108,1.109,1.111,1.112,1.114,1.115,1.116,1.118,1.119,1.121,1.122,1.123,1.125,1.126,1.128,1.129,1.131,1.132,1.134,1.135,1.137,1.138,1.139,1.141,1.142,1.144,1.145,1.147,1.148,1.15,1.151,1.153,1.154,1.156,1.157,1.158,1.16,1.161,1.163,1.164,1.166,1.167,1.169,1.17,1.172,1.173,1.175,1.176,1.178,1.179,1.181,1.182,1.184,1.185,1.187,1.188,1.19,1.191,1.193,1.194,1.196,1.197,1.199,1.2,1.202,1.203,1.205,1.207,1.208,1.21,1.211,1.213,1.214,1.216,1.217,1.219,1.221,1.222,1.224,1.225,1.227,1.228,1.23,1.232,1.233,1.235,1.236,1.238,1.24,1.241,1.243,1.244,1.246,1.248,1.249,1.251,1.253,1.254,1.256,1.257,1.259,1.261,1.262,1.264,1.266,1.267,1.269,1.271,1.272,1.274,1.276,1.277,1.279,1.281,1.282,1.284,1.286,1.288,1.289,1.291,1.293,1.294,1.296,1.298,1.3,1.301,1.303,1.305,1.307,1.309,1.31,1.312,1.314,1.316,1.317,1.319,1.321,1.323,1.325,1.326,1.328,1.33,1.332,1.334,1.336,1.337,1.339,1.341,1.343,1.345,1.347,1.349,1.35,1.352,1.354,1.356,1.358,1.36,1.362,1.364,1.366,1.368,1.37,1.372,1.374,1.376,1.378,1.38,1.382,1.384,1.386,1.388,1.39,1.392,1.394,1.396,1.398,1.4,1.403,1.405,1.407,1.409,1.411,1.413,1.416,1.418,1.42,1.422,1.425,1.427,1.429,1.431,1.434,1.436,1.438,1.441,1.443,1.445,1.448,1.45,1.452,1.455,1.457,1.46,1.462,1.464,1.467,1.469,1.472,1.474,1.477,1.479,1.482,1.485,1.487,1.49,1.492,1.495,1.497,1.5,1.503,1.505,1.508,1.511,1.514,1.516,1.519,1.522,1.525,1.527,1.53,1.533,1.536,1.539,1.541,1.544,1.547,1.55,1.553,1.556,1.559,1.562,1.565,1.568,1.571,1.574,1.577,1.58,1.583,1.586,1.589,1.592,1.596,1.599,1.602,1.605,1.609,1.612,1.615,1.618,1.622,1.625,1.628,1.632,1.635,1.639,1.642,1.646,1.649,1.653,1.656,1.66,1.663,1.667,1.671,1.674,1.678,1.682,1.686,1.689,1.693,1.697,1.701,1.705,1.709,1.713,1.717,1.721,1.725,1.729,1.733,1.737,1.741,1.746,1.75,1.754,1.759,1.763,1.768,1.772,1.777,1.781,1.786,1.79,1.795,1.8,1.804,1.809,1.814,1.819,1.824,1.829,1.834,1.839,1.845,1.85,1.855,1.86,1.866,1.871,1.877,1.882,1.888,1.894,1.9,1.906,1.912,1.918,1.924,1.93,1.937,1.943,1.95,1.956,1.963,1.97,1.977,1.984,1.991,1.998,2.006,2.013,2.021,2.029,2.037,2.045,2.054,2.062,2.071,2.08,2.09,2.099,2.109,2.119,2.129,2.14,2.151,2.162,2.174,2.186,2.199,2.212,2.225,2.239,2.254,2.27,2.287,2.305,2.324,2.344,2.366,2.391,2.419,2.45,2.487,2.535,2.601,2.852],G8=[0,.06293,.07557,.08571,.09451,.1028,.1104,.118,.1242,.13,.1357,.1413,.1462,.1511,.156,.1608,.1656,.1703,.175,.1798,.184,.1882,.1924,.1966,.2007,.2045,.2082,.212,.2158,.2196,.223,.2264,.2298,.2332,.2366,.24,.2434,.2467,.2501,.2535,.2568,.2602,.2634,.2666,.2698,.273,.2762,.2794,.2825,.2856,.2887,.2918,.2949,.298,.3012,.3045,.3078,.3111,.3144,.3178,.3208,.3233,.3258,.3283,.3309,.3334,.3359,.3384,.3409,.3433,.3457,.3482,.3506,.353,.3555,.3579,.3603,.3629,.3654,.3679,.3704,.3729,.3754,.3779,.3803,.3824,.3844,.3864,.3884,.3905,.3925,.3945,.3965,.3986,.4007,.4031,.4056,.408,.4105,.4129,.4153,.4178,.4202,.4223,.4243,.4264,.4285,.4305,.4326,.4347,.4367,.4388,.4409,.4431,.4453,.4475,.4497,.4518,.454,.4562,.4584,.4606,.4628,.4649,.4671,.4692,.4714,.4735,.4757,.4779,.48,.4822,.4845,.4867,.4889,.4911,.4933,.4955,.4978,.5,.5018,.5037,.5055,.5073,.5092,.511,.5129,.5147,.5165,.5184,.5202,.5221,.524,.5258,.5277,.5296,.5314,.5333,.5352,.537,.5389,.5407,.5425,.5443,.5461,.5478,.5496,.5514,.5531,.5549,.5567,.5585,.5602,.5619,.5636,.5653,.5671,.5688,.5705,.5722,.5739,.5756,.5773,.579,.5808,.5827,.5846,.5865,.5884,.5903,.5922,.5941,.596,.5979,.5998,.6014,.603,.6046,.6061,.6077,.6093,.6108,.6124,.614,.6156,.6171,.6187,.6203,.6222,.6241,.6259,.6278,.6297,.6316,.6335,.6354,.6372,.6391,.6409,.6427,.6444,.6461,.6479,.6496,.6514,.6531,.6548,.6566,.6583,.6601,.6619,.6637,.6655,.6674,.6692,.671,.6729,.6747,.6765,.6783,.6801,.6816,.6831,.6846,.6861,.6876,.6891,.6906,.6921,.6936,.6951,.6966,.6981,.6996,.7013,.703,.7047,.7064,.7082,.7099,.7116,.7133,.7151,.7168,.7185,.7202,.7216,.723,.7244,.7258,.7272,.7286,.73,.7314,.7328,.7342,.7356,.737,.7385,.7399,.7415,.7432,.7449,.7466,.7483,.75,.7517,.7534,.7551,.7568,.7585,.7602,.7617,.7632,.7648,.7663,.7678,.7694,.7709,.7724,.7739,.7755,.777,.7785,.7801,.7815,.7829,.7843,.7858,.7872,.7886,.79,.7914,.7929,.7943,.7957,.7971,.7986,.8,.8016,.8033,.8049,.8066,.8082,.8098,.8115,.8131,.8148,.8164,.818,.8197,.8213,.8228,.8244,.8259,.8275,.8291,.8306,.8322,.8338,.8353,.8369,.8384,.84,.8417,.8433,.845,.8466,.8483,.8499,.8516,.8532,.8549,.8565,.8582,.8598,.8613,.8627,.8642,.8656,.8671,.8685,.8699,.8714,.8728,.8743,.8757,.8772,.8786,.88,.8816,.8831,.8846,.8861,.8877,.8892,.8907,.8922,.8938,.8953,.8968,.8983,.8999,.9012,.9026,.904,.9054,.9068,.9081,.9095,.9109,.9123,.9136,.915,.9164,.9178,.9191,.9206,.9222,.9237,.9253,.9269,.9285,.93,.9316,.9332,.9348,.9363,.9379,.9395,.9409,.9424,.9438,.9452,.9466,.948,.9494,.9508,.9522,.9536,.955,.9564,.9578,.9593,.9607,.9623,.9638,.9653,.9669,.9684,.97,.9715,.973,.9746,.9761,.9777,.9792,.9807,.9821,.9835,.985,.9864,.9878,.9893,.9907,.9922,.9936,.995,.9965,.9979,.9993,1.001,1.002,1.004,1.006,1.007,1.009,1.01,1.012,1.014,1.015,1.017,1.018,1.02,1.022,1.023,1.024,1.026,1.027,1.029,1.03,1.032,1.033,1.035,1.036,1.038,1.039,1.041,1.042,1.044,1.045,1.047,1.048,1.05,1.052,1.053,1.055,1.056,1.058,1.059,1.061,1.062,1.064,1.065,1.067,1.068,1.07,1.071,1.072,1.074,1.075,1.077,1.078,1.08,1.081,1.082,1.084,1.085,1.087,1.088,1.089,1.091,1.092,1.094,1.095,1.096,1.098,1.099,1.101,1.102,1.104,1.105,1.107,1.108,1.11,1.112,1.113,1.115,1.116,1.118,1.119,1.121,1.122,1.124,1.125,1.127,1.128,1.129,1.131,1.132,1.134,1.135,1.137,1.138,1.14,1.141,1.143,1.144,1.146,1.147,1.149,1.151,1.152,1.154,1.156,1.157,1.159,1.16,1.162,1.164,1.165,1.167,1.168,1.17,1.172,1.173,1.175,1.177,1.178,1.18,1.182,1.183,1.185,1.187,1.188,1.19,1.192,1.194,1.195,1.197,1.199,1.2,1.202,1.203,1.205,1.206,1.208,1.209,1.21,1.212,1.213,1.215,1.216,1.218,1.219,1.221,1.222,1.224,1.226,1.227,1.229,1.231,1.232,1.234,1.236,1.237,1.239,1.24,1.242,1.243,1.245,1.246,1.248,1.249,1.251,1.252,1.254,1.255,1.256,1.258,1.259,1.261,1.263,1.264,1.266,1.268,1.269,1.271,1.273,1.275,1.276,1.278,1.28,1.281,1.283,1.284,1.286,1.288,1.289,1.291,1.292,1.294,1.296,1.297,1.299,1.3,1.302,1.304,1.305,1.307,1.309,1.31,1.312,1.313,1.315,1.317,1.318,1.32,1.322,1.323,1.325,1.327,1.328,1.33,1.332,1.333,1.335,1.337,1.338,1.34,1.342,1.344,1.346,1.348,1.35,1.351,1.353,1.355,1.357,1.359,1.361,1.362,1.364,1.366,1.368,1.369,1.371,1.373,1.375,1.376,1.378,1.38,1.382,1.383,1.385,1.387,1.389,1.39,1.392,1.394,1.396,1.398,1.399,1.401,1.403,1.405,1.406,1.408,1.41,1.412,1.414,1.415,1.417,1.419,1.421,1.422,1.424,1.426,1.428,1.429,1.431,1.433,1.435,1.436,1.438,1.44,1.442,1.444,1.446,1.448,1.45,1.452,1.454,1.456,1.458,1.46,1.462,1.464,1.465,1.467,1.469,1.471,1.473,1.475,1.477,1.479,1.481,1.483,1.485,1.487,1.489,1.491,1.493,1.495,1.498,1.5,1.501,1.503,1.505,1.507,1.509,1.511,1.513,1.515,1.517,1.519,1.521,1.524,1.526,1.529,1.531,1.534,1.536,1.538,1.541,1.543,1.545,1.547,1.549,1.551,1.553,1.555,1.557,1.559,1.561,1.564,1.566,1.568,1.571,1.573,1.576,1.578,1.58,1.583,1.585,1.588,1.59,1.592,1.595,1.597,1.599,1.602,1.604,1.607,1.609,1.612,1.614,1.617,1.619,1.622,1.624,1.626,1.629,1.631,1.634,1.636,1.639,1.641,1.644,1.647,1.65,1.653,1.655,1.658,1.661,1.663,1.666,1.669,1.671,1.674,1.676,1.679,1.682,1.685,1.688,1.691,1.694,1.697,1.7,1.703,1.706,1.71,1.713,1.716,1.719,1.722,1.725,1.728,1.731,1.734,1.737,1.74,1.743,1.746,1.75,1.753,1.757,1.76,1.763,1.766,1.769,1.773,1.776,1.779,1.782,1.786,1.789,1.793,1.796,1.8,1.803,1.807,1.811,1.814,1.818,1.821,1.825,1.829,1.833,1.836,1.84,1.844,1.847,1.851,1.854,1.858,1.862,1.866,1.871,1.875,1.879,1.883,1.887,1.891,1.895,1.898,1.903,1.907,1.912,1.916,1.921,1.925,1.929,1.933,1.937,1.941,1.946,1.951,1.956,1.96,1.965,1.969,1.973,1.977,1.982,1.987,1.992,1.998,2.003,2.008,2.013,2.018,2.023,2.028,2.033,2.038,2.044,2.049,2.055,2.06,2.065,2.07,2.076,2.081,2.087,2.093,2.099,2.105,2.111,2.117,2.123,2.13,2.136,2.142,2.149,2.155,2.161,2.169,2.176,2.183,2.189,2.196,2.202,2.211,2.219,2.226,2.233,2.24,2.249,2.258,2.266,2.273,2.281,2.291,2.3,2.308,2.316,2.325,2.335,2.345,2.354,2.364,2.374,2.385,2.396,2.407,2.418,2.431,2.444,2.455,2.468,2.482,2.495,2.51,2.525,2.539,2.558,2.574,2.593,2.611,2.63,2.652,2.675,2.701,2.729,2.759,2.795,2.838,2.896,2.967,3.24],W8={1:F8,2:O8,3:B8,4:z8,5:k8,6:V8,7:H8,8:G8},X8=[0,.005439,.007563,.008286,.009009,.009732,.01023,.01059,.01095,.01131,.01167,.01203,.01239,.01265,.01287,.01309,.01331,.01353,.01375,.01397,.01419,.01441,.01463,.01485,.01504,.01519,.01534,.01549,.01564,.01578,.01593,.01608,.01623,.01637,.01652,.01667,.01682,.01697,.01711,.01726,.01741,.01762,.01792,.01822,.01852,.01882,.01912,.01942,.01973,.02003,.02035,.02067,.02098,.0213,.02162,.02194,.02226,.02257,.02287,.02317,.02347,.02377,.02407,.02437,.02466,.02496,.02527,.02558,.02588,.02619,.0265,.0268,.02711,.02742,.02788,.02841,.02894,.02947,.02999,.03042,.03085,.03128,.03171,.03214,.03255,.03289,.03322,.03356,.03389,.03423,.03456,.0349,.03524,.03558,.03592,.03626,.0366,.03694,.03728,.03766,.03813,.0386,.03907,.03954,.04,.04037,.04074,.04111,.04149,.04186,.04223,.0426,.04297,.04335,.04373,.0441,.04448,.04486,.04521,.04556,.04591,.04626,.04661,.04695,.0473,.04767,.04806,.04846,.04885,.04925,.04964,.05003,.05035,.05067,.051,.05132,.05164,.05196,.05229,.05262,.05299,.05336,.05374,.05411,.05448,.05485,.05523,.05562,.056,.05639,.05678,.05717,.05755,.05794,.05832,.0587,.05908,.05946,.05985,.06031,.06083,.06134,.06186,.06238,.06276,.06309,.06343,.06376,.0641,.06443,.06477,.0651,.0654,.06571,.06601,.06632,.06663,.06693,.06724,.06757,.068,.06844,.06887,.06931,.06974,.07016,.07054,.07092,.0713,.07169,.07207,.07245,.07282,.07319,.07356,.07393,.07429,.07466,.07504,.07549,.07594,.07639,.07685,.0773,.0777,.07807,.07843,.0788,.07916,.07953,.07989,.08022,.08053,.08085,.08116,.08148,.08179,.08211,.08242,.08284,.0833,.08376,.08422,.08468,.08511,.08545,.0858,.08614,.08649,.08683,.08718,.08752,.08791,.0883,.08869,.08907,.08946,.08985,.0902,.09052,.09084,.09116,.09149,.09181,.09213,.09245,.09282,.0932,.09358,.09395,.09433,.0947,.09509,.09551,.09593,.09635,.09677,.09719,.09765,.09819,.09873,.09927,.09981,.1002,.1005,.1008,.1012,.1015,.1018,.1021,.1025,.1028,.1031,.1034,.1037,.104,.1044,.1047,.105,.1054,.1059,.1063,.1067,.1071,.1076,.108,.1083,.1087,.1091,.1095,.1099,.1103,.1106,.111,.1113,.1117,.112,.1124,.1127,.1131,.1135,.1139,.1143,.1147,.1151,.1155,.1159,.1163,.1166,.117,.1174,.1178,.1183,.1187,.1192,.1196,.12,.1204,.1207,.121,.1214,.1217,.122,.1223,.1227,.1231,.1235,.1239,.1243,.1247,.1252,.1257,.1262,.1267,.1272,.1276,.1279,.1282,.1285,.1288,.1292,.1295,.1298,.1301,.1304,.1307,.1311,.1314,.1317,.1321,.1324,.1327,.1331,.1334,.1338,.1341,.1344,.1348,.1351,.1355,.1359,.1363,.1367,.1371,.1375,.1379,.1383,.1387,.1391,.1395,.1399,.1403,.1406,.1409,.1412,.1415,.1419,.1422,.1425,.1429,.1433,.1437,.1442,.1446,.145,.1453,.1456,.146,.1463,.1466,.1469,.1472,.1476,.1479,.1482,.1485,.1489,.1492,.1495,.1499,.1502,.1506,.1509,.1513,.1517,.152,.1524,.1528,.1533,.1538,.1542,.1547,.1551,.1556,.156,.1564,.1569,.1573,.1577,.1581,.1585,.1589,.1592,.1596,.16,.1603,.1607,.161,.1613,.1617,.162,.1623,.1627,.1631,.1635,.1638,.1642,.1646,.165,.1654,.1657,.1661,.1665,.1669,.1672,.1676,.168,.1684,.1687,.1691,.1695,.1699,.1703,.1707,.1711,.1715,.1719,.1723,.1727,.173,.1734,.1738,.1741,.1745,.1748,.1752,.1755,.1759,.1762,.1765,.1769,.1772,.1776,.1781,.1785,.179,.1795,.1799,.1803,.1807,.1811,.1814,.1818,.1822,.1825,.1829,.1832,.1836,.184,.1843,.1847,.185,.1854,.1857,.186,.1864,.1867,.1871,.1874,.1877,.188,.1883,.1886,.1888,.1891,.1894,.1897,.19,.1903,.1907,.191,.1914,.1917,.1921,.1924,.1929,.1933,.1938,.1943,.1948,.1952,.1956,.1961,.1965,.1969,.1973,.1977,.1981,.1985,.1989,.1992,.1996,.2,.2003,.2006,.2009,.2011,.2014,.2017,.202,.2023,.2026,.2029,.2032,.2035,.2038,.2041,.2044,.2048,.2051,.2055,.2059,.2063,.2067,.2071,.2075,.2079,.2083,.2086,.209,.2094,.2098,.2102,.2106,.2111,.2115,.212,.2124,.2128,.2132,.2136,.2141,.2145,.2149,.2152,.2155,.2158,.2161,.2164,.2167,.2171,.2174,.2177,.2182,.2186,.219,.2194,.2199,.2202,.2206,.2209,.2212,.2216,.2219,.2223,.2226,.2229,.2232,.2235,.2238,.2241,.2243,.2246,.2249,.2253,.2257,.226,.2264,.2268,.2271,.2275,.2278,.2282,.2286,.2289,.2293,.2297,.23,.2305,.2309,.2313,.2318,.2322,.2326,.233,.2334,.2338,.2342,.2345,.2349,.2353,.2356,.236,.2364,.2367,.2371,.2374,.2378,.2382,.2385,.2389,.2392,.2396,.2399,.2403,.2406,.2409,.2412,.2415,.2418,.2421,.2424,.2428,.2433,.2437,.2441,.2446,.245,.2454,.2459,.2463,.2467,.2471,.2475,.2479,.2482,.2485,.2488,.2491,.2494,.2497,.25,.2504,.2507,.251,.2513,.2516,.2519,.2522,.2525,.2529,.2533,.2537,.254,.2544,.2548,.2551,.2555,.2558,.2561,.2564,.2567,.2571,.2574,.2578,.2581,.2585,.2589,.2593,.2597,.2601,.2605,.2608,.2612,.2616,.262,.2624,.2627,.2631,.2635,.2638,.2642,.2645,.2649,.2652,.2655,.2658,.2661,.2664,.2667,.267,.2673,.2676,.268,.2683,.2687,.269,.2693,.2697,.27,.2705,.2709,.2713,.2717,.2722,.2726,.2729,.2733,.2737,.274,.2744,.2748,.2751,.2755,.2758,.2762,.2765,.2769,.2772,.2775,.2779,.2782,.2786,.2789,.2793,.2796,.2799,.2803,.2806,.2809,.2812,.2815,.2818,.2821,.2825,.2828,.2832,.2835,.2839,.2842,.2846,.2849,.2853,.2856,.2859,.2863,.2866,.2869,.2873,.2876,.2879,.2882,.2885,.2889,.2892,.2895,.2898,.2901,.2905,.2908,.2911,.2915,.2918,.2922,.2925,.2928,.2931,.2934,.2937,.294,.2943,.2946,.2949,.2952,.2956,.2959,.2962,.2966,.2969,.2972,.2976,.298,.2983,.2987,.2991,.2994,.2998,.3002,.3006,.3009,.3013,.3017,.3021,.3025,.3028,.3031,.3034,.3037,.304,.3043,.3046,.3049,.3052,.3055,.3059,.3062,.3065,.3068,.3072,.3075,.3078,.3082,.3085,.3089,.3092,.3096,.31,.3103,.3107,.311,.3113,.3117,.312,.3124,.3127,.3131,.3134,.3138,.3141,.3145,.3148,.3151,.3154,.3157,.3159,.3162,.3165,.3168,.317,.3173,.3176,.3179,.3182,.3186,.3189,.3192,.3195,.3198,.3202,.3205,.3208,.3211,.3215,.3218,.3221,.3225,.3228,.3231,.3234,.3238,.3241,.3244,.3247,.3251,.3253,.3256,.3259,.3262,.3265,.3268,.327,.3273,.3277,.328,.3284,.3287,.3291,.3294,.3298,.3301,.3305,.3308,.3311,.3314,.3318,.3321,.3324,.3327,.333,.3333,.3336,.3339,.3342,.3345,.3348,.3351,.3354,.3358,.3362,.3365,.3369,.3372,.3376,.3379,.3381,.3384,.3387,.339,.3393,.3395,.3398,.3401,.3404,.3407,.3409,.3412,.3415,.3418,.342,.3423,.3426,.3429,.3433,.3436,.344,.3443,.3446,.345,.3453,.3455,.3458,.3461,.3464,.3466,.3469,.3472,.3475,.3478,.3482,.3485,.3489,.3493,.3496,.35,.3504,.3508,.3513,.3517,.3521,.3525,.353,.3535,.354,.3545,.355,.3556,.3561,.3567,.3572,.3578,.3584,.3591,.3597,.3605,.3615,.3624,.3633,.3641,.365,.3665,.37],Y8=[0,.01247,.01569,.01715,.0186,.02003,.02079,.02156,.02233,.0231,.02386,.02463,.02521,.02561,.02602,.02643,.02683,.02724,.02764,.02805,.02845,.02886,.02926,.02967,.03006,.0304,.03074,.03107,.03141,.03175,.03208,.03242,.03276,.0331,.03343,.03377,.03411,.03444,.03478,.03519,.03574,.03628,.03683,.03737,.03791,.03846,.039,.03955,.0401,.0407,.0413,.04191,.04251,.04311,.04371,.04431,.04491,.04553,.04615,.04677,.0474,.04802,.04864,.04927,.04989,.05056,.05124,.05192,.0526,.05328,.05396,.05464,.05534,.05608,.05681,.05755,.05828,.05902,.05976,.0605,.06125,.062,.06275,.0635,.06425,.065,.06573,.06647,.06721,.06794,.06868,.06942,.07015,.07086,.07157,.07228,.07298,.07369,.0744,.07512,.0759,.07668,.07746,.07824,.07902,.0798,.08056,.08133,.0821,.08286,.08363,.08439,.08516,.08591,.08667,.08743,.08819,.08895,.08971,.09045,.09118,.09191,.09264,.09337,.0941,.09483,.09562,.09642,.09722,.09802,.09883,.09963,.1004,.1011,.1019,.1026,.1034,.1041,.1048,.1056,.1064,.1071,.1079,.1086,.1094,.1102,.1109,.1116,.1124,.1131,.1138,.1146,.1153,.1161,.1169,.1177,.1185,.1193,.1201,.1208,.1216,.1224,.1231,.1239,.1247,.1254,.1261,.1269,.1276,.1283,.129,.1297,.1305,.1312,.132,.1327,.1335,.1342,.135,.1358,.1366,.1374,.1382,.139,.1397,.1405,.1413,.142,.1428,.1435,.1443,.145,.1458,.1465,.1473,.1481,.1488,.1496,.1503,.1511,.1518,.1526,.1533,.1541,.1548,.1556,.1564,.1571,.1579,.1587,.1594,.1602,.1609,.1616,.1623,.163,.1637,.1644,.1651,.1659,.1668,.1676,.1684,.1692,.17,.1708,.1715,.1722,.1729,.1737,.1744,.1751,.1759,.1767,.1774,.1782,.179,.1797,.1805,.1813,.1821,.1829,.1836,.1844,.1852,.1859,.1866,.1873,.188,.1887,.1894,.1902,.1909,.1917,.1924,.1932,.1939,.1947,.1955,.1963,.1971,.1979,.1987,.1995,.2003,.201,.2018,.2026,.2033,.2041,.2049,.2056,.2063,.207,.2078,.2085,.2092,.2099,.2106,.2114,.2121,.2129,.2136,.2143,.2151,.2159,.2167,.2174,.2182,.219,.2198,.2205,.2212,.2219,.2226,.2233,.224,.2247,.2254,.2262,.227,.2278,.2286,.2294,.2301,.2309,.2317,.2325,.2332,.234,.2348,.2355,.2363,.237,.2377,.2385,.2392,.2399,.2407,.2415,.2422,.243,.2437,.2445,.2452,.2459,.2467,.2474,.2481,.2488,.2496,.2503,.2511,.2519,.2526,.2534,.2542,.255,.2557,.2565,.2572,.2579,.2587,.2594,.2601,.2609,.2617,.2624,.2632,.2639,.2647,.2654,.2662,.2669,.2676,.2684,.2691,.2699,.2706,.2713,.2721,.2728,.2736,.2743,.2751,.2758,.2766,.2773,.2781,.2789,.2796,.2804,.2811,.2818,.2825,.2833,.284,.2847,.2855,.2863,.287,.2878,.2886,.2894,.2901,.2909,.2916,.2923,.293,.2938,.2945,.2952,.2959,.2967,.2974,.2981,.2989,.2996,.3003,.3011,.3018,.3026,.3033,.3041,.3048,.3056,.3063,.307,.3078,.3085,.3092,.31,.3107,.3115,.3123,.313,.3138,.3146,.3153,.316,.3168,.3175,.3182,.3189,.3197,.3204,.3212,.3219,.3227,.3234,.3242,.3249,.3257,.3264,.3272,.3279,.3287,.3294,.3302,.3309,.3316,.3323,.333,.3338,.3345,.3352,.336,.3367,.3375,.3382,.339,.3397,.3405,.3412,.342,.3427,.3435,.3442,.345,.3457,.3465,.3472,.3479,.3487,.3494,.3501,.3508,.3515,.3522,.3529,.3536,.3543,.355,.3558,.3565,.3573,.358,.3588,.3595,.3603,.361,.3618,.3625,.3632,.364,.3647,.3655,.3662,.367,.3677,.3685,.3692,.37,.3707,.3715,.3722,.373,.3737,.3745,.3752,.3759,.3766,.3773,.378,.3788,.3795,.3802,.3809,.3816,.3823,.383,.3838,.3845,.3852,.3859,.3867,.3874,.3882,.3889,.3897,.3904,.3912,.3919,.3927,.3934,.3942,.3949,.3956,.3963,.3971,.3978,.3985,.3992,.3999,.4006,.4013,.402,.4027,.4034,.4041,.4049,.4056,.4063,.407,.4077,.4084,.4092,.4099,.4106,.4114,.4121,.4129,.4137,.4144,.4152,.4159,.4166,.4174,.4181,.4188,.4196,.4203,.421,.4217,.4225,.4232,.4239,.4246,.4254,.4261,.4269,.4276,.4284,.4291,.4299,.4305,.4312,.4319,.4325,.4332,.4339,.4345,.4353,.436,.4368,.4376,.4384,.4392,.44,.4407,.4414,.4421,.4428,.4435,.4443,.445,.4457,.4464,.4471,.4478,.4486,.4493,.45,.4507,.4514,.4521,.4528,.4535,.4542,.4549,.4557,.4564,.4572,.4579,.4586,.4594,.4601,.4608,.4615,.4622,.463,.4637,.4644,.4651,.4658,.4666,.4673,.468,.4687,.4695,.4702,.4709,.4716,.4723,.473,.4737,.4744,.4751,.4759,.4766,.4773,.4781,.4788,.4795,.4802,.481,.4817,.4824,.4831,.4838,.4845,.4852,.486,.4867,.4875,.4882,.489,.4897,.4905,.4912,.4919,.4926,.4934,.4941,.4948,.4955,.4962,.4969,.4976,.4983,.499,.4997,.5004,.5011,.5018,.5025,.5033,.504,.5047,.5054,.5062,.5069,.5076,.5084,.5091,.5098,.5106,.5113,.512,.5127,.5134,.5141,.5148,.5154,.5161,.5168,.5175,.5182,.5189,.5196,.5203,.521,.5217,.5224,.5231,.5239,.5246,.5253,.526,.5267,.5275,.5282,.5289,.5296,.5303,.531,.5316,.5323,.533,.5336,.5343,.535,.5356,.5363,.537,.5377,.5384,.5391,.5398,.5405,.5412,.5419,.5426,.5434,.5441,.5448,.5455,.5462,.5469,.5476,.5483,.549,.5497,.5504,.5511,.5517,.5524,.5531,.5538,.5545,.5551,.5558,.5565,.5572,.5579,.5586,.5593,.56,.5607,.5614,.5621,.5627,.5634,.5641,.5648,.5655,.5662,.5669,.5676,.5683,.569,.5697,.5703,.571,.5716,.5723,.5729,.5736,.5742,.5749,.5756,.5763,.577,.5777,.5784,.5792,.5799,.5805,.5812,.5819,.5825,.5832,.5839,.5845,.5852,.5858,.5865,.5871,.5878,.5884,.5891,.5897,.5904,.5911,.5917,.5924,.5931,.5938,.5944,.5951,.5958,.5965,.5972,.5979,.5986,.5993,.5999,.6006,.6012,.6019,.6025,.6032,.6038,.6045,.6051,.6058,.6065,.6072,.6078,.6085,.6092,.6099,.6105,.6112,.6119,.6125,.6132,.6138,.6145,.6152,.6158,.6165,.6171,.6178,.6184,.6191,.6198,.6204,.6211,.6217,.6223,.623,.6236,.6243,.6249,.6256,.6262,.6269,.6276,.6282,.6289,.6295,.6302,.6308,.6314,.6321,.6327,.6333,.634,.6346,.6352,.6359,.6366,.6372,.6379,.6385,.6392,.6399,.6405,.6411,.6418,.6424,.643,.6437,.6443,.6449,.6456,.6462,.6469,.6475,.6482,.6489,.6495,.6502,.6508,.6514,.652,.6526,.6532,.6539,.6545,.6551,.6558,.6564,.6571,.6577,.6584,.659,.6597,.6603,.6609,.6615,.6622,.6628,.6634,.664,.6646,.6652,.6658,.6665,.6671,.6677,.6683,.6689,.6695,.6702,.6708,.6714,.672,.6727,.6733,.6739,.6745,.6752,.6758,.6764,.677,.6776,.6783,.6789,.6795,.6801,.6807,.6813,.6819,.6826,.6832,.6838,.6844,.685,.6856,.6862,.6868,.6874,.688,.6886,.6892,.6898,.6904,.691,.6916,.6922,.6928,.6934,.694,.6946,.6952,.6959,.6966,.6973,.698,.6987,.6994,.7001,.7009,.7018,.7026,.7035,.7043,.7052,.7062,.7071,.7081,.709,.71,.7111,.7123,.7134,.7145,.7157,.717,.7183,.7196,.7211,.7227,.7242,.7261,.7281,.7303,.7332,.74],q8=[0,.0182,.02315,.02562,.02809,.03027,.03143,.0326,.03376,.03493,.03609,.03725,.03795,.03853,.03911,.03968,.04026,.04084,.04141,.04199,.04257,.04314,.04372,.0443,.04487,.04542,.04596,.0465,.04704,.04758,.04812,.04866,.0492,.04974,.05028,.05083,.05137,.05191,.05245,.05319,.05397,.05474,.05551,.05628,.05705,.05782,.05859,.05936,.06015,.06104,.06193,.06282,.06371,.0646,.06549,.06638,.06727,.06824,.06925,.07026,.07127,.07228,.07328,.07429,.07531,.07633,.07736,.07838,.07941,.08044,.08146,.08249,.08359,.08469,.08579,.08689,.08799,.08909,.09019,.09129,.09238,.09348,.09457,.09566,.09676,.09786,.09899,.1001,.1012,.1024,.1035,.1046,.1057,.1068,.1079,.109,.1101,.1112,.1123,.1135,.1146,.1157,.1169,.118,.1191,.1203,.1215,.1226,.1238,.1249,.1261,.1273,.1284,.1296,.1308,.132,.1332,.1343,.1355,.1366,.1378,.1389,.14,.1411,.1423,.1434,.1445,.1456,.1467,.1479,.149,.1501,.1512,.1524,.1535,.1547,.1558,.157,.1581,.1593,.1604,.1615,.1627,.1638,.1649,.1661,.1673,.1685,.1696,.1708,.172,.1731,.1742,.1753,.1764,.1775,.1786,.1797,.1809,.182,.1832,.1844,.1855,.1867,.1879,.189,.1902,.1913,.1925,.1936,.1948,.1959,.197,.1982,.1993,.2004,.2016,.2027,.2038,.2049,.206,.2072,.2083,.2094,.2105,.2117,.2129,.2141,.2152,.2164,.2176,.2187,.2199,.221,.2221,.2232,.2244,.2255,.2267,.2279,.2291,.2303,.2314,.2326,.2337,.2349,.236,.2371,.2383,.2394,.2405,.2416,.2427,.2438,.2449,.2461,.2472,.2483,.2494,.2505,.2516,.2527,.2538,.2549,.2561,.2573,.2584,.2596,.2607,.2619,.263,.2642,.2653,.2665,.2676,.2687,.2699,.271,.2722,.2733,.2745,.2756,.2768,.278,.2791,.2803,.2814,.2826,.2837,.2849,.286,.2871,.2882,.2893,.2903,.2914,.2925,.2937,.2948,.296,.2971,.2983,.2994,.3005,.3017,.3028,.3039,.3051,.3062,.3073,.3085,.3096,.3107,.3119,.313,.3142,.3153,.3165,.3176,.3188,.3199,.3211,.3222,.3233,.3244,.3255,.3267,.3278,.3289,.33,.3311,.3323,.3334,.3346,.3357,.3369,.338,.3391,.3402,.3414,.3425,.3436,.3448,.3459,.347,.3481,.3492,.3503,.3514,.3525,.3536,.3548,.3559,.3571,.3582,.3593,.3605,.3617,.3628,.364,.3652,.3663,.3675,.3686,.3697,.3708,.3719,.373,.3741,.3753,.3764,.3775,.3786,.3798,.3809,.382,.3831,.3842,.3853,.3865,.3876,.3887,.3898,.3909,.392,.3931,.3942,.3953,.3964,.3975,.3987,.3998,.4009,.402,.4031,.4043,.4054,.4066,.4077,.4089,.4101,.4113,.4124,.4136,.4147,.4159,.417,.4181,.4193,.4204,.4215,.4226,.4237,.4248,.426,.4271,.4282,.4292,.4303,.4314,.4325,.4336,.4347,.4358,.4369,.438,.4391,.4402,.4413,.4424,.4435,.4447,.4458,.4469,.4481,.4492,.4503,.4515,.4526,.4537,.4549,.456,.4571,.4583,.4594,.4606,.4617,.4629,.464,.4651,.4662,.4673,.4684,.4695,.4706,.4717,.4728,.4739,.475,.4761,.4772,.4783,.4794,.4805,.4816,.4826,.4837,.4848,.4859,.487,.4881,.4892,.4903,.4915,.4926,.4937,.4948,.496,.4972,.4983,.4995,.5007,.5018,.503,.5041,.5052,.5063,.5074,.5085,.5096,.5107,.5118,.5128,.5139,.515,.516,.5171,.5182,.5192,.5203,.5214,.5224,.5235,.5246,.5257,.5268,.5279,.529,.5301,.5312,.5323,.5335,.5346,.5357,.5369,.538,.5392,.5403,.5415,.5426,.5438,.5449,.5461,.5472,.5483,.5494,.5505,.5516,.5527,.5538,.5549,.556,.557,.5581,.5592,.5602,.5613,.5624,.5634,.5645,.5655,.5666,.5676,.5687,.5697,.5708,.5719,.573,.5741,.5752,.5763,.5774,.5786,.5797,.5808,.582,.5831,.5843,.5854,.5865,.5877,.5888,.5899,.591,.5922,.5933,.5944,.5954,.5965,.5976,.5987,.5998,.6008,.6018,.6029,.6039,.6049,.606,.607,.6081,.6092,.6102,.6113,.6124,.6135,.6146,.6157,.6168,.6178,.6189,.62,.6211,.6222,.6233,.6245,.6256,.6267,.6279,.629,.6301,.6312,.6323,.6335,.6346,.6357,.6368,.6378,.6389,.6399,.6409,.6419,.643,.644,.645,.6461,.6472,.6482,.6493,.6503,.6514,.6525,.6536,.6547,.6558,.6569,.658,.6591,.6602,.6613,.6624,.6635,.6646,.6657,.6668,.6679,.669,.67,.6711,.6722,.6733,.6743,.6754,.6764,.6775,.6785,.6796,.6806,.6817,.6827,.6838,.6848,.6858,.6869,.6879,.6889,.6899,.691,.6921,.6932,.6943,.6954,.6965,.6976,.6986,.6997,.7008,.7019,.703,.704,.7051,.7062,.7073,.7084,.7095,.7107,.7118,.7128,.7139,.7149,.716,.717,.7181,.7191,.7202,.7212,.7222,.7232,.7242,.7252,.7262,.7272,.7283,.7293,.7304,.7315,.7325,.7336,.7347,.7358,.7368,.7379,.739,.7401,.7412,.7422,.7433,.7443,.7453,.7464,.7474,.7484,.7495,.7505,.7515,.7526,.7536,.7546,.7557,.7567,.7577,.7588,.7598,.7608,.7619,.7629,.7639,.765,.766,.7671,.7681,.7692,.7703,.7713,.7724,.7734,.7745,.7755,.7766,.7776,.7787,.7797,.7808,.7818,.7829,.7839,.785,.786,.7871,.7881,.7891,.7902,.7912,.7922,.7932,.7942,.7952,.7963,.7973,.7983,.7994,.8004,.8014,.8025,.8035,.8045,.8056,.8066,.8076,.8087,.8097,.8108,.8118,.8129,.8139,.815,.816,.8171,.8181,.8191,.8202,.8212,.8222,.8233,.8243,.8253,.8263,.8274,.8284,.8294,.8304,.8314,.8324,.8334,.8345,.8355,.8365,.8375,.8385,.8395,.8405,.8415,.8426,.8436,.8446,.8456,.8466,.8476,.8487,.8498,.8508,.8519,.8529,.854,.855,.856,.857,.858,.859,.86,.861,.862,.863,.8641,.8651,.8661,.8671,.8681,.8691,.8701,.8711,.8721,.8731,.8741,.8751,.8761,.8771,.8782,.8792,.8802,.8812,.8823,.8833,.8843,.8853,.8863,.8873,.8883,.8893,.8903,.8913,.8923,.8933,.8943,.8953,.8963,.8972,.8982,.8992,.9002,.9012,.9022,.9032,.9042,.9053,.9063,.9073,.9083,.9093,.9103,.9112,.9122,.9132,.9142,.9152,.9162,.9172,.9181,.9191,.9201,.9211,.922,.923,.924,.925,.926,.927,.928,.9289,.9299,.9309,.9319,.9329,.9339,.9349,.9359,.9369,.9379,.9388,.9398,.9408,.9418,.9428,.9437,.9447,.9457,.9466,.9476,.9485,.9495,.9505,.9514,.9524,.9533,.9543,.9553,.9563,.9573,.9583,.9593,.9602,.9612,.9622,.9631,.9641,.9651,.9661,.967,.968,.9689,.9699,.9708,.9718,.9727,.9736,.9746,.9756,.9765,.9775,.9785,.9795,.9805,.9814,.9824,.9834,.9843,.9852,.9862,.9871,.988,.989,.9899,.9909,.9918,.9927,.9937,.9946,.9956,.9965,.9975,.9984,.9994,1,1.001,1.002,1.003,1.004,1.005,1.006,1.007,1.008,1.009,1.01,1.011,1.011,1.012,1.013,1.014,1.015,1.016,1.017,1.018,1.019,1.02,1.021,1.022,1.023,1.024,1.024,1.025,1.026,1.027,1.028,1.029,1.03,1.031,1.032,1.033,1.034,1.035,1.036,1.036,1.037,1.038,1.039,1.04,1.041,1.042,1.043,1.044,1.045,1.046,1.047,1.048,1.049,1.05,1.052,1.053,1.054,1.056,1.057,1.058,1.06,1.061,1.063,1.064,1.066,1.068,1.069,1.071,1.073,1.075,1.077,1.079,1.081,1.084,1.086,1.089,1.092,1.095,1.1,1.11],Z8=[0,.02393,.03091,.03405,.03718,.04016,.04169,.04323,.04476,.0463,.04783,.04936,.05047,.05127,.05206,.05286,.05366,.05446,.05526,.05606,.05685,.05765,.05845,.05925,.06004,.06075,.06145,.06215,.06286,.06356,.06427,.06497,.06567,.06638,.06708,.06779,.06849,.06919,.0699,.07088,.07191,.07294,.07397,.075,.07602,.07705,.07808,.07911,.08016,.08136,.08256,.08376,.08496,.08616,.08736,.08856,.08976,.09104,.09234,.09364,.09495,.09625,.09755,.09885,.1002,.1016,.1029,.1043,.1057,.1071,.1085,.1099,.1113,.1128,.1142,.1157,.1171,.1186,.12,.1215,.123,.1244,.1259,.1274,.1288,.1303,.1318,.1333,.1348,.1362,.1377,.1392,.1407,.1422,.1436,.1451,.1466,.1481,.1496,.1511,.1527,.1542,.1558,.1573,.1589,.1604,.162,.1635,.165,.1665,.168,.1696,.1711,.1726,.1741,.1756,.1772,.1787,.1802,.1817,.1832,.1847,.1863,.1878,.1893,.1908,.1923,.1938,.1953,.1968,.1983,.1998,.2013,.2029,.2044,.2059,.2074,.2089,.2105,.212,.2136,.2152,.2167,.2183,.2198,.2214,.2229,.2244,.226,.2275,.229,.2305,.232,.2335,.235,.2365,.238,.2395,.241,.2426,.2441,.2456,.2471,.2487,.2502,.2517,.2532,.2547,.2562,.2577,.2592,.2608,.2623,.2638,.2653,.2668,.2683,.2698,.2714,.2729,.2745,.276,.2776,.2791,.2807,.2822,.2837,.2852,.2868,.2883,.2898,.2913,.2928,.2943,.2958,.2973,.2988,.3003,.3018,.3033,.3049,.3064,.3079,.3095,.311,.3125,.314,.3155,.3169,.3184,.3199,.3214,.3229,.3244,.3259,.3274,.3289,.3304,.332,.3336,.3351,.3367,.3383,.3399,.3414,.3429,.3444,.3459,.3474,.3489,.3504,.3519,.3534,.3549,.3564,.3579,.3594,.3609,.3625,.364,.3656,.3671,.3686,.3702,.3716,.3731,.3746,.3761,.3776,.3791,.3806,.3821,.3836,.3851,.3866,.3881,.3896,.3911,.3927,.3942,.3957,.3973,.3988,.4003,.4019,.4034,.4049,.4065,.408,.4095,.411,.4125,.414,.4154,.4169,.4184,.4199,.4214,.4229,.4244,.4259,.4274,.4289,.4305,.432,.4335,.435,.4365,.438,.4395,.441,.4425,.444,.4454,.4469,.4484,.4499,.4514,.4529,.4544,.4559,.4574,.459,.4605,.462,.4635,.4651,.4666,.4681,.4697,.4712,.4727,.4742,.4757,.4772,.4787,.4802,.4817,.4832,.4847,.4862,.4877,.4892,.4907,.4922,.4937,.4951,.4966,.4981,.4996,.5011,.5026,.5042,.5057,.5072,.5087,.5102,.5117,.5132,.5146,.5161,.5176,.5191,.5206,.5221,.5236,.5251,.5267,.5282,.5297,.5312,.5327,.5342,.5357,.5372,.5387,.5402,.5417,.5431,.5446,.5461,.5476,.5491,.5506,.5521,.5537,.5552,.5567,.5583,.5598,.5613,.5627,.5642,.5656,.5671,.5686,.57,.5715,.573,.5745,.576,.5775,.579,.5805,.582,.5835,.585,.5864,.5879,.5894,.5909,.5924,.5939,.5954,.5968,.5983,.5998,.6013,.6028,.6043,.6058,.6073,.6088,.6103,.6118,.6132,.6147,.6162,.6176,.6191,.6206,.6221,.6236,.6251,.6266,.6281,.6297,.6311,.6326,.6341,.6355,.637,.6385,.6399,.6414,.6429,.6444,.6458,.6473,.6488,.6503,.6518,.6533,.6548,.6563,.6578,.6593,.6608,.6623,.6638,.6653,.6667,.6682,.6697,.6712,.6727,.6741,.6756,.6771,.6785,.68,.6815,.6829,.6844,.6859,.6873,.6888,.6903,.6918,.6933,.6948,.6963,.6978,.6993,.7007,.7022,.7036,.705,.7065,.7079,.7093,.7108,.7123,.7138,.7153,.7168,.7183,.7198,.7212,.7227,.7242,.7256,.7271,.7285,.73,.7315,.7329,.7344,.7359,.7374,.7389,.7404,.7419,.7433,.7448,.7463,.7478,.7493,.7507,.7522,.7536,.7551,.7566,.758,.7595,.7609,.7624,.7638,.7653,.7667,.7682,.7696,.7711,.7725,.774,.7754,.7769,.7784,.7798,.7813,.7828,.7842,.7857,.7872,.7887,.7902,.7916,.793,.7945,.7959,.7973,.7988,.8002,.8017,.8031,.8046,.806,.8075,.8089,.8104,.8118,.8133,.8147,.8162,.8176,.8191,.8205,.822,.8234,.8249,.8263,.8278,.8293,.8307,.8322,.8336,.8351,.8365,.838,.8394,.8409,.8423,.8438,.8452,.8466,.8481,.8495,.851,.8524,.8539,.8553,.8568,.8583,.8597,.8612,.8626,.864,.8654,.8669,.8683,.8697,.8712,.8726,.8741,.8755,.877,.8784,.8799,.8813,.8828,.8842,.8856,.887,.8885,.8899,.8913,.8928,.8942,.8956,.8971,.8985,.9,.9014,.9028,.9042,.9056,.907,.9084,.9099,.9113,.9127,.9141,.9156,.917,.9184,.9199,.9213,.9227,.9242,.9256,.927,.9285,.9299,.9313,.9327,.9341,.9356,.937,.9384,.9398,.9412,.9427,.9441,.9456,.947,.9484,.9499,.9513,.9527,.9541,.9556,.957,.9584,.9598,.9612,.9626,.964,.9655,.9669,.9683,.9697,.9711,.9725,.9739,.9753,.9768,.9782,.9796,.981,.9824,.9838,.9853,.9867,.9881,.9895,.9909,.9923,.9937,.9951,.9965,.9979,.9993,1.001,1.002,1.003,1.005,1.006,1.008,1.009,1.01,1.012,1.013,1.015,1.016,1.018,1.019,1.02,1.022,1.023,1.025,1.026,1.027,1.029,1.03,1.032,1.033,1.034,1.036,1.037,1.039,1.04,1.041,1.043,1.044,1.045,1.047,1.048,1.05,1.051,1.052,1.054,1.055,1.057,1.058,1.059,1.061,1.062,1.064,1.065,1.066,1.068,1.069,1.07,1.072,1.073,1.075,1.076,1.077,1.079,1.08,1.081,1.083,1.084,1.086,1.087,1.088,1.09,1.091,1.093,1.094,1.095,1.097,1.098,1.099,1.101,1.102,1.104,1.105,1.106,1.108,1.109,1.11,1.112,1.113,1.114,1.116,1.117,1.119,1.12,1.121,1.123,1.124,1.125,1.127,1.128,1.13,1.131,1.132,1.134,1.135,1.136,1.138,1.139,1.14,1.142,1.143,1.144,1.146,1.147,1.149,1.15,1.151,1.153,1.154,1.155,1.157,1.158,1.159,1.161,1.162,1.163,1.165,1.166,1.167,1.169,1.17,1.171,1.173,1.174,1.175,1.177,1.178,1.179,1.181,1.182,1.183,1.185,1.186,1.188,1.189,1.19,1.192,1.193,1.194,1.196,1.197,1.198,1.2,1.201,1.202,1.204,1.205,1.206,1.208,1.209,1.21,1.211,1.213,1.214,1.215,1.217,1.218,1.22,1.221,1.222,1.223,1.225,1.226,1.227,1.229,1.23,1.231,1.233,1.234,1.235,1.237,1.238,1.239,1.241,1.242,1.243,1.244,1.246,1.247,1.248,1.25,1.251,1.252,1.254,1.255,1.256,1.257,1.259,1.26,1.261,1.263,1.264,1.265,1.267,1.268,1.269,1.27,1.272,1.273,1.274,1.276,1.277,1.278,1.28,1.281,1.282,1.283,1.285,1.286,1.287,1.289,1.29,1.291,1.292,1.294,1.295,1.296,1.297,1.299,1.3,1.301,1.303,1.304,1.305,1.306,1.308,1.309,1.31,1.312,1.313,1.314,1.315,1.317,1.318,1.319,1.32,1.322,1.323,1.324,1.325,1.327,1.328,1.329,1.331,1.332,1.333,1.334,1.335,1.337,1.338,1.339,1.34,1.342,1.343,1.344,1.345,1.347,1.348,1.349,1.35,1.352,1.353,1.354,1.355,1.357,1.358,1.359,1.36,1.361,1.363,1.364,1.365,1.366,1.368,1.369,1.37,1.371,1.372,1.374,1.375,1.376,1.377,1.379,1.38,1.381,1.382,1.383,1.385,1.386,1.387,1.388,1.389,1.391,1.392,1.394,1.395,1.396,1.398,1.399,1.401,1.403,1.404,1.406,1.408,1.41,1.411,1.413,1.415,1.417,1.419,1.421,1.424,1.426,1.428,1.431,1.434,1.436,1.439,1.442,1.445,1.448,1.452,1.456,1.46,1.466,1.48],J8=[0,.02762,.03766,.04215,.04665,.05051,.05251,.05451,.0565,.0585,.0605,.0625,.06344,.06439,.06533,.06627,.06722,.06816,.06911,.07005,.07099,.07194,.07288,.07383,.07477,.07567,.07657,.07746,.07835,.07924,.08013,.08102,.08191,.0828,.0837,.08459,.08548,.08637,.08726,.08845,.08976,.09106,.09237,.09367,.09497,.09628,.09758,.09889,.1002,.1017,.1033,.1048,.1063,.1078,.1093,.1109,.1124,.114,.1156,.1172,.1188,.1205,.1221,.1237,.1253,.127,.1287,.1304,.1321,.1338,.1355,.1371,.1389,.1408,.1426,.1444,.1462,.148,.1498,.1517,.1535,.1553,.1571,.159,.1608,.1626,.1645,.1663,.1682,.17,.1719,.1737,.1756,.1775,.1794,.1813,.1832,.1851,.187,.1889,.1909,.1928,.1947,.1967,.1986,.2005,.2024,.2043,.2062,.208,.2099,.2118,.2137,.2155,.2173,.2192,.221,.2228,.2247,.2266,.2285,.2304,.2324,.2343,.2362,.2382,.2401,.2421,.2441,.246,.248,.25,.2518,.2537,.2556,.2575,.2594,.2613,.2632,.2651,.2669,.2688,.2706,.2725,.2743,.2762,.2781,.28,.2819,.2838,.2856,.2875,.2895,.2914,.2934,.2953,.2973,.2992,.3012,.3031,.305,.3068,.3087,.3106,.3125,.3144,.3163,.3182,.3201,.3219,.3238,.3257,.3276,.3295,.3314,.3333,.3352,.3372,.3391,.341,.3429,.3449,.3468,.3487,.3506,.3525,.3543,.3562,.358,.3599,.3617,.3636,.3654,.3673,.3692,.371,.3729,.3747,.3767,.3786,.3806,.3825,.3845,.3865,.3884,.3904,.3923,.3943,.3962,.3982,.4001,.402,.4038,.4057,.4075,.4093,.4112,.413,.4148,.4167,.4185,.4203,.4222,.424,.4258,.4278,.4297,.4316,.4336,.4355,.4374,.4394,.4414,.4434,.4453,.4473,.4493,.4512,.453,.4549,.4568,.4586,.4605,.4623,.4642,.466,.4678,.4697,.4715,.4733,.4752,.4771,.4791,.481,.4829,.4848,.4868,.4887,.4906,.4925,.4944,.4963,.4982,.5001,.502,.5038,.5057,.5075,.5094,.5112,.5131,.5149,.5168,.5187,.5206,.5224,.5243,.5262,.5282,.5301,.5321,.534,.536,.5379,.5398,.5416,.5435,.5454,.5473,.5491,.551,.5528,.5546,.5564,.5583,.5601,.5619,.5638,.5656,.5675,.5694,.5713,.5732,.5751,.577,.579,.5809,.5829,.5848,.5868,.5887,.5906,.5925,.5944,.5963,.5982,.6001,.6019,.6037,.6055,.6073,.6091,.6109,.6127,.6146,.6165,.6183,.6202,.622,.6239,.6258,.6277,.6297,.6316,.6336,.6355,.6375,.6393,.6412,.643,.6449,.6467,.6486,.6504,.6523,.6541,.656,.6578,.6597,.6615,.6634,.6653,.6672,.6691,.671,.6729,.6748,.6767,.6786,.6805,.6823,.6842,.6861,.6879,.6897,.6915,.6934,.6952,.697,.6988,.7006,.7025,.7044,.7062,.7081,.71,.7119,.7138,.7158,.7177,.7197,.7216,.7235,.7255,.7273,.7291,.731,.7328,.7347,.7365,.7383,.7401,.7419,.7437,.7454,.7472,.749,.7508,.7527,.7546,.7565,.7584,.7603,.7622,.7641,.766,.7679,.7698,.7718,.7737,.7756,.7774,.7792,.781,.7828,.7847,.7865,.7883,.7902,.792,.7939,.7957,.7976,.7994,.8013,.8032,.8051,.8069,.8088,.8107,.8126,.8144,.8162,.818,.8199,.8217,.8235,.8253,.8271,.829,.8308,.8326,.8345,.8363,.8382,.8401,.842,.8439,.8458,.8477,.8496,.8515,.8533,.8552,.857,.8589,.8607,.8625,.8643,.8661,.8679,.8696,.8714,.8732,.875,.8768,.8787,.8805,.8824,.8843,.8861,.888,.8899,.8918,.8937,.8957,.8976,.8995,.9013,.9031,.9049,.9067,.9086,.9104,.9122,.914,.9157,.9175,.9193,.9211,.9229,.9247,.9266,.9285,.9303,.9322,.9341,.936,.9378,.9397,.9415,.9433,.9451,.9469,.9487,.9506,.9524,.9542,.956,.9578,.9596,.9614,.9632,.9651,.967,.9688,.9707,.9726,.9744,.9763,.9781,.9799,.9817,.9836,.9854,.9872,.989,.9907,.9925,.9942,.996,.9977,.9995,1.001,1.003,1.005,1.007,1.009,1.011,1.012,1.014,1.016,1.018,1.02,1.022,1.024,1.026,1.027,1.029,1.031,1.033,1.034,1.036,1.038,1.04,1.041,1.043,1.045,1.047,1.049,1.05,1.052,1.054,1.056,1.058,1.06,1.062,1.063,1.065,1.067,1.069,1.071,1.072,1.074,1.076,1.078,1.08,1.081,1.083,1.085,1.087,1.089,1.09,1.092,1.094,1.096,1.098,1.099,1.101,1.103,1.105,1.107,1.108,1.11,1.112,1.114,1.115,1.117,1.119,1.121,1.123,1.124,1.126,1.128,1.13,1.132,1.134,1.135,1.137,1.139,1.141,1.143,1.144,1.146,1.148,1.15,1.151,1.153,1.155,1.157,1.158,1.16,1.162,1.164,1.166,1.167,1.169,1.171,1.173,1.175,1.176,1.178,1.18,1.182,1.184,1.185,1.187,1.189,1.191,1.193,1.194,1.196,1.198,1.2,1.201,1.203,1.205,1.207,1.208,1.21,1.212,1.214,1.215,1.217,1.219,1.221,1.223,1.224,1.226,1.228,1.23,1.232,1.233,1.235,1.237,1.239,1.24,1.242,1.244,1.246,1.247,1.249,1.251,1.253,1.254,1.256,1.258,1.26,1.262,1.263,1.265,1.267,1.268,1.27,1.272,1.274,1.275,1.277,1.279,1.281,1.283,1.284,1.286,1.288,1.29,1.291,1.293,1.295,1.297,1.298,1.3,1.302,1.304,1.305,1.307,1.309,1.31,1.312,1.314,1.316,1.317,1.319,1.321,1.323,1.325,1.326,1.328,1.33,1.332,1.333,1.335,1.337,1.339,1.34,1.342,1.344,1.345,1.347,1.349,1.35,1.352,1.354,1.356,1.357,1.359,1.361,1.363,1.364,1.366,1.368,1.369,1.371,1.373,1.375,1.376,1.378,1.38,1.381,1.383,1.385,1.387,1.388,1.39,1.392,1.393,1.395,1.397,1.398,1.4,1.402,1.404,1.405,1.407,1.409,1.411,1.412,1.414,1.416,1.417,1.419,1.421,1.423,1.424,1.426,1.428,1.429,1.431,1.433,1.434,1.436,1.438,1.439,1.441,1.443,1.444,1.446,1.448,1.449,1.451,1.453,1.455,1.456,1.458,1.46,1.461,1.463,1.465,1.466,1.468,1.47,1.471,1.473,1.475,1.476,1.478,1.48,1.481,1.483,1.485,1.487,1.488,1.49,1.492,1.493,1.495,1.497,1.498,1.5,1.501,1.503,1.505,1.506,1.508,1.51,1.511,1.513,1.515,1.516,1.518,1.52,1.521,1.523,1.525,1.526,1.528,1.53,1.531,1.533,1.535,1.536,1.538,1.54,1.541,1.543,1.545,1.546,1.548,1.549,1.551,1.553,1.554,1.556,1.558,1.559,1.561,1.563,1.564,1.566,1.567,1.569,1.571,1.572,1.574,1.575,1.577,1.579,1.58,1.582,1.584,1.585,1.587,1.588,1.59,1.592,1.593,1.595,1.597,1.598,1.6,1.601,1.603,1.605,1.606,1.608,1.609,1.611,1.613,1.614,1.616,1.617,1.619,1.621,1.622,1.624,1.625,1.627,1.629,1.63,1.632,1.633,1.635,1.637,1.638,1.64,1.641,1.643,1.644,1.646,1.648,1.649,1.651,1.652,1.654,1.655,1.657,1.659,1.66,1.662,1.663,1.665,1.666,1.668,1.67,1.671,1.673,1.674,1.676,1.677,1.679,1.68,1.682,1.684,1.685,1.687,1.688,1.69,1.691,1.693,1.694,1.696,1.698,1.699,1.701,1.702,1.704,1.705,1.707,1.708,1.71,1.711,1.713,1.714,1.716,1.717,1.719,1.72,1.722,1.723,1.725,1.726,1.728,1.729,1.731,1.732,1.734,1.735,1.737,1.739,1.74,1.742,1.744,1.746,1.748,1.749,1.751,1.753,1.756,1.758,1.76,1.762,1.764,1.767,1.769,1.772,1.774,1.777,1.78,1.783,1.786,1.789,1.792,1.795,1.799,1.802,1.806,1.81,1.815,1.82,1.825,1.833,1.85],$8=[0,.03595,.04614,.05104,.05595,.06041,.06274,.06506,.06739,.06972,.07205,.07438,.07585,.077,.07816,.07932,.08047,.08163,.08278,.08394,.08509,.08625,.08741,.08856,.08972,.09082,.09191,.09299,.09408,.09516,.09625,.09734,.09842,.09951,.1006,.1017,.1028,.1039,.1049,.1064,.108,.1095,.111,.1125,.1141,.1156,.1171,.1186,.1202,.122,.1238,.1256,.1274,.1292,.131,.1328,.1345,.1365,.1384,.1404,.1423,.1443,.1462,.1482,.1501,.1522,.1543,.1563,.1584,.1605,.1625,.1646,.1667,.1689,.171,.1732,.1753,.1775,.1796,.1818,.1841,.1863,.1885,.1907,.1929,.1952,.1974,.1996,.2018,.2041,.2063,.2085,.2108,.213,.2153,.2175,.2198,.222,.2243,.2266,.2288,.2311,.2334,.2357,.2379,.2402,.2425,.2448,.247,.2493,.2516,.2539,.2561,.2584,.2607,.263,.2653,.2675,.2698,.2721,.2744,.2767,.2789,.2812,.2835,.2858,.288,.2903,.2926,.2949,.2972,.2995,.3017,.304,.3063,.3086,.3109,.3131,.3154,.3177,.32,.3223,.3246,.3269,.3292,.3315,.3337,.336,.3383,.3405,.3428,.3451,.3473,.3496,.3519,.3542,.3564,.3587,.361,.3633,.3656,.3678,.3701,.3724,.3747,.377,.3793,.3815,.3838,.3861,.3884,.3907,.3929,.3952,.3975,.3998,.402,.4043,.4066,.4089,.4111,.4134,.4157,.418,.4203,.4225,.4248,.4271,.4294,.4317,.434,.4362,.4385,.4408,.4431,.4453,.4476,.4499,.4522,.4544,.4567,.459,.4613,.4636,.4658,.4681,.4704,.4726,.4749,.4772,.4794,.4817,.484,.4862,.4885,.4908,.493,.4953,.4976,.4999,.5021,.5044,.5067,.509,.5112,.5135,.5158,.518,.5203,.5226,.5248,.5271,.5294,.5317,.5339,.5362,.5385,.5407,.543,.5453,.5475,.5498,.552,.5543,.5566,.5588,.5611,.5634,.5657,.5679,.5702,.5725,.5747,.577,.5792,.5815,.5838,.586,.5883,.5906,.5928,.5951,.5974,.5997,.6019,.6042,.6064,.6087,.611,.6132,.6155,.6177,.62,.6223,.6246,.6268,.6291,.6314,.6336,.6359,.6381,.6404,.6426,.6448,.6471,.6494,.6517,.6539,.6562,.6585,.6607,.663,.6652,.6675,.6697,.672,.6743,.6765,.6788,.681,.6833,.6856,.6878,.6901,.6923,.6946,.6968,.6991,.7013,.7036,.7058,.7081,.7103,.7126,.7148,.7171,.7193,.7216,.7238,.7261,.7284,.7306,.7329,.7351,.7374,.7396,.7419,.7441,.7463,.7486,.7508,.7531,.7553,.7576,.7598,.7621,.7644,.7666,.7688,.7711,.7733,.7756,.7778,.7801,.7823,.7846,.7868,.7891,.7913,.7936,.7958,.7981,.8003,.8025,.8048,.807,.8093,.8115,.8138,.816,.8183,.8205,.8228,.8251,.8273,.8295,.8317,.834,.8362,.8384,.8407,.8429,.8451,.8474,.8496,.8519,.8541,.8563,.8586,.8608,.863,.8653,.8675,.8697,.872,.8742,.8765,.8787,.881,.8832,.8855,.8877,.8899,.8921,.8944,.8966,.8988,.9011,.9033,.9055,.9077,.9099,.9122,.9144,.9166,.9189,.9211,.9233,.9256,.9278,.9301,.9323,.9345,.9367,.939,.9412,.9434,.9456,.9479,.9501,.9523,.9546,.9568,.959,.9613,.9635,.9657,.9679,.9701,.9723,.9745,.9768,.979,.9812,.9835,.9857,.9879,.9901,.9924,.9946,.9968,.999,1.001,1.003,1.006,1.008,1.01,1.012,1.014,1.017,1.019,1.021,1.023,1.026,1.028,1.03,1.032,1.034,1.037,1.039,1.041,1.043,1.045,1.048,1.05,1.052,1.054,1.057,1.059,1.061,1.063,1.065,1.068,1.07,1.072,1.074,1.076,1.079,1.081,1.083,1.085,1.087,1.09,1.092,1.094,1.096,1.098,1.101,1.103,1.105,1.107,1.109,1.112,1.114,1.116,1.118,1.12,1.123,1.125,1.127,1.129,1.131,1.134,1.136,1.138,1.14,1.142,1.145,1.147,1.149,1.151,1.153,1.156,1.158,1.16,1.162,1.164,1.167,1.169,1.171,1.173,1.175,1.178,1.18,1.182,1.184,1.186,1.188,1.191,1.193,1.195,1.197,1.199,1.202,1.204,1.206,1.208,1.21,1.212,1.215,1.217,1.219,1.221,1.223,1.226,1.228,1.23,1.232,1.234,1.236,1.239,1.241,1.243,1.245,1.247,1.25,1.252,1.254,1.256,1.258,1.26,1.263,1.265,1.267,1.269,1.271,1.273,1.276,1.278,1.28,1.282,1.284,1.286,1.289,1.291,1.293,1.295,1.297,1.3,1.302,1.304,1.306,1.308,1.31,1.312,1.315,1.317,1.319,1.321,1.323,1.325,1.328,1.33,1.332,1.334,1.336,1.338,1.341,1.343,1.345,1.347,1.349,1.351,1.353,1.356,1.358,1.36,1.362,1.364,1.366,1.369,1.371,1.373,1.375,1.377,1.379,1.381,1.384,1.386,1.388,1.39,1.392,1.394,1.396,1.399,1.401,1.403,1.405,1.407,1.409,1.411,1.414,1.416,1.418,1.42,1.422,1.424,1.427,1.429,1.431,1.433,1.435,1.437,1.439,1.441,1.444,1.446,1.448,1.45,1.452,1.454,1.456,1.459,1.461,1.463,1.465,1.467,1.469,1.471,1.474,1.476,1.478,1.48,1.482,1.484,1.486,1.489,1.491,1.493,1.495,1.497,1.499,1.501,1.503,1.505,1.508,1.51,1.512,1.514,1.516,1.518,1.52,1.522,1.525,1.527,1.529,1.531,1.533,1.535,1.537,1.539,1.541,1.543,1.546,1.548,1.55,1.552,1.554,1.556,1.558,1.56,1.562,1.564,1.567,1.569,1.571,1.573,1.575,1.577,1.579,1.581,1.583,1.585,1.588,1.59,1.592,1.594,1.596,1.598,1.6,1.602,1.604,1.606,1.608,1.61,1.613,1.615,1.617,1.619,1.621,1.623,1.625,1.627,1.629,1.631,1.633,1.635,1.637,1.639,1.642,1.644,1.646,1.648,1.65,1.652,1.654,1.656,1.658,1.66,1.662,1.664,1.666,1.668,1.67,1.672,1.674,1.676,1.679,1.681,1.683,1.685,1.687,1.689,1.691,1.693,1.695,1.697,1.699,1.701,1.703,1.705,1.707,1.709,1.711,1.713,1.715,1.717,1.719,1.722,1.724,1.726,1.728,1.73,1.732,1.734,1.736,1.738,1.74,1.742,1.744,1.746,1.748,1.75,1.752,1.754,1.756,1.758,1.76,1.762,1.764,1.766,1.768,1.77,1.772,1.774,1.776,1.778,1.78,1.782,1.784,1.786,1.788,1.79,1.792,1.794,1.796,1.798,1.8,1.802,1.804,1.806,1.808,1.81,1.812,1.814,1.816,1.818,1.82,1.822,1.824,1.826,1.828,1.83,1.832,1.834,1.836,1.838,1.84,1.842,1.844,1.846,1.848,1.85,1.852,1.854,1.856,1.858,1.86,1.862,1.863,1.865,1.867,1.869,1.871,1.873,1.875,1.877,1.879,1.881,1.883,1.885,1.887,1.889,1.891,1.893,1.895,1.897,1.899,1.901,1.903,1.905,1.906,1.908,1.91,1.912,1.914,1.916,1.918,1.92,1.922,1.924,1.926,1.928,1.93,1.932,1.933,1.935,1.937,1.939,1.941,1.943,1.945,1.947,1.949,1.951,1.953,1.955,1.956,1.958,1.96,1.962,1.964,1.966,1.968,1.97,1.972,1.974,1.975,1.977,1.979,1.981,1.983,1.985,1.987,1.989,1.991,1.992,1.994,1.996,1.998,2,2.002,2.004,2.006,2.007,2.009,2.011,2.013,2.015,2.017,2.019,2.021,2.022,2.024,2.026,2.028,2.03,2.032,2.034,2.035,2.037,2.039,2.041,2.043,2.045,2.046,2.048,2.05,2.052,2.054,2.056,2.057,2.059,2.061,2.063,2.065,2.067,2.068,2.07,2.072,2.074,2.076,2.077,2.079,2.081,2.083,2.085,2.087,2.089,2.091,2.093,2.095,2.097,2.099,2.102,2.104,2.107,2.11,2.112,2.115,2.118,2.121,2.123,2.126,2.129,2.133,2.136,2.139,2.143,2.147,2.151,2.155,2.158,2.163,2.168,2.172,2.178,2.184,2.19,2.199,2.22],K8=[0,.04144,.05373,.05944,.06514,.0704,.07311,.07581,.07852,.08123,.08394,.08664,.08843,.0898,.09116,.09253,.09389,.09526,.09662,.09799,.09936,.1007,.1021,.1035,.1048,.1061,.1074,.1086,.1099,.1111,.1124,.1137,.1149,.1162,.1175,.1187,.12,.1213,.1225,.1243,.1261,.1279,.1296,.1314,.1332,.135,.1367,.1385,.1403,.1424,.1445,.1466,.1487,.1508,.1529,.155,.1571,.1594,.1617,.164,.1663,.1686,.1709,.1731,.1755,.1779,.1803,.1827,.1851,.1875,.1899,.1923,.1948,.1974,.1999,.2025,.205,.2075,.2101,.2126,.2152,.2177,.2202,.2228,.2253,.2279,.2305,.2332,.2358,.2384,.2411,.2437,.2464,.249,.2517,.2543,.257,.2596,.2623,.2649,.2676,.2702,.2728,.2754,.2781,.2807,.2834,.2861,.2887,.2914,.2941,.2968,.2994,.3021,.3048,.3075,.3101,.3128,.3155,.3181,.3208,.3234,.3261,.3287,.3314,.3341,.3367,.3394,.3421,.3448,.3475,.3502,.3528,.3555,.3581,.3608,.3634,.3661,.3687,.3714,.374,.3767,.3793,.382,.3846,.3873,.39,.3927,.3954,.3981,.4008,.4035,.4061,.4088,.4114,.414,.4167,.4193,.422,.4247,.4273,.43,.4326,.4353,.438,.4407,.4433,.446,.4487,.4514,.4541,.4567,.4594,.462,.4646,.4672,.4699,.4725,.4752,.4779,.4806,.4832,.4859,.4886,.4913,.494,.4966,.4993,.502,.5046,.5073,.5099,.5125,.5152,.5178,.5204,.523,.5257,.5284,.5311,.5338,.5365,.5392,.5419,.5445,.5472,.5498,.5525,.5551,.5577,.5604,.563,.5656,.5683,.5709,.5735,.5762,.5788,.5815,.5842,.5869,.5897,.5924,.5951,.5977,.6003,.6029,.6056,.6082,.6108,.6134,.6161,.6187,.6213,.624,.6266,.6292,.6319,.6346,.6373,.64,.6426,.6453,.648,.6506,.6532,.6559,.6585,.6611,.6637,.6664,.669,.6717,.6744,.6771,.6797,.6824,.6851,.6877,.6903,.693,.6956,.6983,.7009,.7035,.7062,.7088,.7114,.714,.7167,.7193,.722,.7247,.7273,.73,.7327,.7354,.738,.7406,.7432,.7458,.7484,.751,.7536,.7563,.7589,.7615,.7641,.7667,.7694,.772,.7747,.7774,.7801,.7828,.7855,.7881,.7907,.7933,.796,.7986,.8012,.8038,.8064,.8091,.8117,.8143,.817,.8196,.8222,.8249,.8275,.8302,.8328,.8354,.8381,.8407,.8433,.846,.8486,.8512,.8538,.8564,.8591,.8617,.8644,.8671,.8697,.8724,.875,.8776,.8802,.8828,.8854,.888,.8906,.8932,.8958,.8985,.9011,.9037,.9063,.9089,.9116,.9142,.9169,.9196,.9222,.9249,.9276,.9301,.9327,.9353,.9379,.9404,.943,.9456,.9483,.9509,.9535,.9562,.9588,.9615,.9641,.9667,.9693,.972,.9746,.9772,.9798,.9824,.985,.9876,.9902,.9928,.9953,.9979,1.001,1.003,1.006,1.009,1.011,1.014,1.016,1.019,1.022,1.024,1.027,1.029,1.032,1.034,1.037,1.04,1.042,1.045,1.048,1.05,1.053,1.056,1.058,1.061,1.063,1.066,1.069,1.071,1.074,1.076,1.079,1.081,1.084,1.087,1.089,1.092,1.095,1.097,1.1,1.102,1.105,1.108,1.11,1.113,1.115,1.118,1.12,1.123,1.126,1.128,1.131,1.133,1.136,1.139,1.141,1.144,1.146,1.149,1.152,1.154,1.157,1.159,1.162,1.165,1.167,1.17,1.172,1.175,1.177,1.18,1.183,1.185,1.188,1.191,1.193,1.196,1.198,1.201,1.203,1.206,1.208,1.211,1.214,1.216,1.219,1.221,1.224,1.227,1.229,1.232,1.234,1.237,1.239,1.242,1.245,1.247,1.25,1.252,1.255,1.257,1.26,1.263,1.265,1.268,1.27,1.273,1.276,1.278,1.281,1.283,1.286,1.288,1.291,1.293,1.296,1.298,1.301,1.304,1.306,1.309,1.312,1.314,1.317,1.319,1.322,1.324,1.327,1.329,1.332,1.334,1.337,1.34,1.342,1.345,1.347,1.35,1.352,1.355,1.358,1.36,1.363,1.365,1.368,1.37,1.373,1.375,1.378,1.38,1.383,1.385,1.388,1.391,1.393,1.396,1.398,1.401,1.403,1.406,1.408,1.411,1.413,1.416,1.419,1.421,1.424,1.426,1.429,1.431,1.434,1.436,1.439,1.441,1.444,1.447,1.449,1.452,1.454,1.457,1.459,1.462,1.464,1.467,1.469,1.472,1.474,1.477,1.48,1.482,1.485,1.487,1.49,1.492,1.495,1.497,1.5,1.502,1.505,1.507,1.51,1.512,1.515,1.517,1.52,1.522,1.525,1.527,1.53,1.532,1.535,1.538,1.54,1.543,1.545,1.548,1.55,1.553,1.555,1.558,1.56,1.563,1.565,1.568,1.57,1.573,1.575,1.578,1.58,1.583,1.585,1.588,1.59,1.593,1.595,1.598,1.6,1.603,1.605,1.608,1.61,1.613,1.615,1.618,1.62,1.623,1.625,1.628,1.63,1.633,1.635,1.638,1.64,1.643,1.645,1.647,1.65,1.652,1.655,1.657,1.66,1.662,1.665,1.667,1.67,1.672,1.675,1.677,1.68,1.682,1.685,1.687,1.69,1.692,1.695,1.697,1.699,1.702,1.704,1.707,1.709,1.712,1.714,1.717,1.719,1.722,1.724,1.727,1.729,1.732,1.734,1.736,1.739,1.741,1.744,1.746,1.749,1.751,1.754,1.756,1.759,1.761,1.763,1.766,1.768,1.771,1.773,1.776,1.778,1.781,1.783,1.785,1.788,1.79,1.793,1.795,1.798,1.8,1.802,1.805,1.807,1.81,1.812,1.815,1.817,1.82,1.822,1.825,1.827,1.829,1.832,1.834,1.837,1.839,1.841,1.844,1.846,1.849,1.851,1.854,1.856,1.859,1.861,1.863,1.866,1.868,1.871,1.873,1.875,1.878,1.88,1.883,1.885,1.888,1.89,1.892,1.895,1.897,1.9,1.902,1.904,1.907,1.909,1.912,1.914,1.916,1.919,1.921,1.924,1.926,1.928,1.931,1.933,1.936,1.938,1.94,1.943,1.945,1.948,1.95,1.952,1.955,1.957,1.96,1.962,1.964,1.967,1.969,1.971,1.974,1.976,1.979,1.981,1.983,1.986,1.988,1.991,1.993,1.995,1.998,2,2.002,2.005,2.007,2.01,2.012,2.014,2.017,2.019,2.021,2.024,2.026,2.028,2.031,2.033,2.036,2.038,2.04,2.043,2.045,2.047,2.05,2.052,2.054,2.057,2.059,2.061,2.064,2.066,2.068,2.071,2.073,2.075,2.078,2.08,2.083,2.085,2.087,2.089,2.092,2.094,2.096,2.099,2.101,2.103,2.106,2.108,2.11,2.113,2.115,2.117,2.12,2.122,2.124,2.127,2.129,2.131,2.134,2.136,2.138,2.141,2.143,2.145,2.148,2.15,2.152,2.154,2.157,2.159,2.161,2.164,2.166,2.168,2.171,2.173,2.175,2.177,2.18,2.182,2.184,2.186,2.189,2.191,2.193,2.196,2.198,2.2,2.202,2.205,2.207,2.209,2.212,2.214,2.216,2.218,2.221,2.223,2.225,2.228,2.23,2.232,2.234,2.237,2.239,2.241,2.243,2.246,2.248,2.25,2.252,2.255,2.257,2.259,2.261,2.264,2.266,2.268,2.27,2.272,2.275,2.277,2.279,2.281,2.284,2.286,2.288,2.29,2.293,2.295,2.297,2.299,2.301,2.304,2.306,2.308,2.31,2.313,2.315,2.317,2.319,2.321,2.324,2.326,2.328,2.33,2.332,2.334,2.337,2.339,2.341,2.343,2.345,2.348,2.35,2.352,2.354,2.356,2.358,2.361,2.363,2.365,2.367,2.369,2.371,2.374,2.376,2.378,2.38,2.382,2.384,2.387,2.389,2.391,2.393,2.395,2.397,2.399,2.402,2.404,2.406,2.408,2.41,2.412,2.414,2.416,2.419,2.421,2.423,2.425,2.427,2.429,2.431,2.434,2.436,2.439,2.441,2.444,2.446,2.449,2.451,2.454,2.457,2.46,2.463,2.466,2.47,2.473,2.477,2.48,2.484,2.487,2.491,2.496,2.5,2.504,2.508,2.513,2.518,2.523,2.529,2.534,2.541,2.548,2.555,2.566,2.59],j8=[0,.04786,.06183,.0681,.07437,.08031,.08338,.08645,.08952,.09259,.09566,.09873,.1009,.1025,.1041,.1057,.1073,.1089,.1105,.1121,.1137,.1153,.1169,.1185,.1201,.1215,.1229,.1243,.1257,.1271,.1285,.1299,.1313,.1328,.1342,.1356,.137,.1384,.1398,.1418,.1438,.1459,.1479,.15,.152,.1541,.1562,.1582,.1603,.1627,.1651,.1675,.1699,.1723,.1747,.1771,.1795,.1821,.1847,.1873,.1899,.1925,.1951,.1977,.2003,.2031,.2059,.2087,.2114,.2142,.217,.2198,.2227,.2256,.2285,.2314,.2342,.2371,.24,.243,.2459,.2489,.2518,.2547,.2577,.2606,.2636,.2665,.2695,.2725,.2754,.2784,.2814,.2843,.2873,.2903,.2932,.2962,.2991,.3022,.3053,.3084,.3116,.3147,.3178,.3209,.3239,.327,.33,.333,.3361,.3391,.3422,.3452,.3482,.3513,.3543,.3574,.3604,.3634,.3665,.3695,.3725,.3755,.3785,.3816,.3846,.3876,.3906,.3936,.3966,.3997,.4027,.4057,.4088,.4118,.4148,.4179,.4209,.4241,.4272,.4303,.4334,.4365,.4397,.4427,.4458,.4488,.4519,.455,.458,.4611,.4641,.4671,.4701,.4731,.4761,.4791,.4821,.4851,.4882,.4912,.4943,.4973,.5004,.5034,.5064,.5094,.5125,.5155,.5185,.5215,.5245,.5276,.5306,.5336,.5366,.5397,.5428,.5459,.549,.5521,.5552,.5583,.5614,.5644,.5674,.5705,.5735,.5765,.5796,.5826,.5856,.5886,.5915,.5945,.5975,.6005,.6036,.6067,.6097,.6128,.6159,.6189,.6219,.6249,.6279,.6309,.6339,.6369,.6399,.6429,.6459,.6489,.6519,.6549,.6579,.6609,.664,.6672,.6703,.6734,.6766,.6797,.6827,.6857,.6888,.6918,.6948,.6978,.7008,.7038,.7068,.7098,.7128,.7158,.7188,.7219,.725,.728,.7311,.7342,.7372,.7403,.7433,.7462,.7492,.7522,.7551,.7581,.7611,.7641,.7671,.7702,.7732,.7762,.7792,.7823,.7853,.7884,.7915,.7945,.7976,.8006,.8037,.8068,.8098,.8129,.816,.819,.822,.825,.8279,.8309,.8338,.8368,.8397,.8428,.8458,.8488,.8518,.8549,.8579,.8609,.8639,.867,.87,.873,.8761,.8791,.8821,.885,.8879,.8909,.8938,.8968,.8997,.9028,.9058,.9088,.9119,.9149,.9179,.921,.924,.9271,.9301,.9332,.9363,.9393,.9423,.9453,.9484,.9514,.9544,.9574,.9604,.9634,.9664,.9694,.9724,.9754,.9784,.9813,.9843,.9873,.9903,.9933,.9963,.9992,1.002,1.005,1.008,1.011,1.014,1.017,1.02,1.023,1.026,1.029,1.032,1.035,1.038,1.041,1.044,1.047,1.05,1.053,1.056,1.059,1.062,1.065,1.068,1.071,1.074,1.077,1.08,1.083,1.086,1.089,1.092,1.095,1.098,1.101,1.104,1.107,1.11,1.113,1.117,1.12,1.123,1.125,1.128,1.131,1.134,1.137,1.14,1.143,1.146,1.149,1.152,1.155,1.158,1.161,1.164,1.167,1.17,1.173,1.176,1.179,1.182,1.185,1.188,1.191,1.194,1.197,1.2,1.203,1.206,1.209,1.212,1.215,1.218,1.221,1.224,1.226,1.229,1.232,1.235,1.238,1.241,1.244,1.247,1.25,1.253,1.256,1.259,1.262,1.265,1.268,1.271,1.274,1.277,1.28,1.283,1.286,1.289,1.292,1.295,1.298,1.301,1.304,1.307,1.31,1.313,1.316,1.319,1.322,1.325,1.328,1.331,1.333,1.336,1.339,1.342,1.345,1.348,1.351,1.354,1.357,1.36,1.363,1.366,1.369,1.372,1.375,1.378,1.381,1.384,1.387,1.39,1.393,1.396,1.399,1.401,1.404,1.407,1.41,1.413,1.416,1.419,1.422,1.425,1.428,1.431,1.434,1.437,1.44,1.442,1.445,1.448,1.451,1.454,1.457,1.46,1.463,1.466,1.469,1.472,1.475,1.478,1.481,1.484,1.487,1.49,1.493,1.496,1.499,1.501,1.504,1.507,1.51,1.513,1.516,1.519,1.522,1.525,1.528,1.531,1.533,1.536,1.539,1.542,1.545,1.548,1.551,1.554,1.557,1.56,1.563,1.566,1.568,1.571,1.574,1.577,1.58,1.583,1.586,1.589,1.592,1.595,1.598,1.6,1.603,1.606,1.609,1.612,1.615,1.618,1.621,1.624,1.627,1.629,1.632,1.635,1.638,1.641,1.644,1.647,1.65,1.653,1.656,1.659,1.661,1.664,1.667,1.67,1.673,1.676,1.679,1.682,1.685,1.688,1.69,1.693,1.696,1.699,1.702,1.705,1.708,1.711,1.714,1.717,1.719,1.722,1.725,1.728,1.731,1.734,1.737,1.739,1.742,1.745,1.748,1.751,1.754,1.757,1.76,1.763,1.765,1.768,1.771,1.774,1.777,1.78,1.783,1.786,1.788,1.791,1.794,1.797,1.8,1.803,1.806,1.808,1.811,1.814,1.817,1.82,1.823,1.825,1.828,1.831,1.834,1.837,1.84,1.843,1.845,1.848,1.851,1.854,1.857,1.86,1.863,1.865,1.868,1.871,1.874,1.877,1.88,1.882,1.885,1.888,1.891,1.894,1.897,1.9,1.903,1.905,1.908,1.911,1.914,1.917,1.92,1.922,1.925,1.928,1.931,1.934,1.937,1.939,1.942,1.945,1.948,1.951,1.954,1.956,1.959,1.962,1.965,1.968,1.971,1.973,1.976,1.979,1.982,1.985,1.987,1.99,1.993,1.996,1.999,2.001,2.004,2.007,2.01,2.013,2.015,2.018,2.021,2.024,2.027,2.029,2.032,2.035,2.038,2.041,2.044,2.046,2.049,2.052,2.055,2.058,2.06,2.063,2.066,2.069,2.072,2.074,2.077,2.08,2.083,2.085,2.088,2.091,2.094,2.097,2.099,2.102,2.105,2.108,2.11,2.113,2.116,2.119,2.121,2.124,2.127,2.13,2.133,2.135,2.138,2.141,2.144,2.146,2.149,2.152,2.155,2.157,2.16,2.163,2.166,2.168,2.171,2.174,2.177,2.18,2.182,2.185,2.188,2.191,2.193,2.196,2.199,2.202,2.204,2.207,2.21,2.212,2.215,2.218,2.221,2.223,2.226,2.229,2.232,2.234,2.237,2.24,2.243,2.245,2.248,2.251,2.254,2.256,2.259,2.262,2.264,2.267,2.27,2.273,2.275,2.278,2.281,2.284,2.286,2.289,2.292,2.294,2.297,2.3,2.303,2.305,2.308,2.311,2.313,2.316,2.319,2.322,2.324,2.327,2.33,2.332,2.335,2.338,2.34,2.343,2.346,2.348,2.351,2.354,2.356,2.359,2.362,2.364,2.367,2.37,2.372,2.375,2.378,2.38,2.383,2.386,2.388,2.391,2.394,2.396,2.399,2.402,2.404,2.407,2.41,2.412,2.415,2.418,2.42,2.423,2.426,2.428,2.431,2.434,2.436,2.439,2.442,2.444,2.447,2.45,2.452,2.455,2.458,2.46,2.463,2.465,2.468,2.471,2.473,2.476,2.478,2.481,2.484,2.486,2.489,2.492,2.494,2.497,2.499,2.502,2.505,2.507,2.51,2.512,2.515,2.518,2.52,2.523,2.525,2.528,2.531,2.533,2.536,2.538,2.541,2.544,2.546,2.549,2.551,2.554,2.556,2.559,2.562,2.564,2.567,2.569,2.572,2.574,2.577,2.58,2.582,2.585,2.587,2.59,2.592,2.595,2.598,2.6,2.603,2.605,2.608,2.61,2.613,2.615,2.618,2.621,2.623,2.626,2.628,2.631,2.633,2.636,2.638,2.641,2.643,2.646,2.648,2.651,2.653,2.656,2.658,2.661,2.663,2.666,2.668,2.671,2.673,2.676,2.678,2.681,2.683,2.686,2.688,2.691,2.693,2.696,2.698,2.701,2.703,2.706,2.708,2.711,2.713,2.716,2.718,2.72,2.723,2.725,2.728,2.73,2.733,2.735,2.738,2.74,2.743,2.745,2.747,2.75,2.752,2.755,2.757,2.76,2.762,2.764,2.767,2.769,2.772,2.774,2.776,2.779,2.782,2.784,2.787,2.79,2.793,2.796,2.799,2.802,2.805,2.809,2.812,2.816,2.819,2.823,2.827,2.831,2.835,2.839,2.843,2.848,2.852,2.857,2.862,2.867,2.872,2.878,2.883,2.89,2.896,2.904,2.912,2.92,2.932,2.96],Q8={1:X8,2:Y8,3:q8,4:Z8,5:J8,6:$8,7:K8,8:j8},t9=[0,.009748,.01079,.01162,.01245,.01545,.01595,.01645,.01695,.01745,.01808,.01873,.01938,.02011,.02254,.02311,.02368,.02425,.02481,.02532,.0258,.02628,.02675,.02723,.02764,.02796,.02828,.0286,.02892,.02924,.02956,.02988,.03016,.03041,.03066,.03092,.03117,.03142,.03168,.03193,.03218,.03244,.03272,.033,.03329,.03358,.03387,.03416,.03445,.03474,.03511,.03637,.03753,.03777,.03801,.03825,.03849,.03873,.03897,.03921,.03945,.03969,.03993,.04051,.04124,.04197,.04265,.0432,.04376,.04431,.04486,.04537,.04586,.04635,.04685,.04734,.04762,.0478,.04798,.04816,.04834,.04852,.0487,.04888,.04906,.04924,.04942,.0496,.04978,.04996,.05018,.05042,.05065,.05088,.05112,.05135,.05158,.05182,.05205,.05228,.05252,.05276,.053,.05324,.05348,.05373,.05397,.05421,.05445,.05469,.05494,.05517,.05539,.05562,.05585,.05608,.05631,.05653,.05676,.05699,.05722,.05744,.05787,.05837,.05886,.05935,.05985,.06012,.06028,.06045,.06062,.06079,.06095,.06112,.06129,.06146,.06162,.06179,.06196,.06213,.0623,.06246,.0628,.06318,.06357,.06395,.06434,.06472,.06505,.06525,.06545,.06565,.06585,.06605,.06625,.06645,.06665,.06685,.06705,.06725,.06745,.06761,.06776,.0679,.06805,.0682,.06834,.06849,.06864,.06878,.06893,.06908,.06922,.06937,.06952,.06966,.06981,.06996,.07011,.07028,.07044,.07061,.07077,.07093,.0711,.07126,.07143,.07159,.07175,.07192,.07208,.07225,.07241,.0729,.07378,.07465,.07516,.07542,.07567,.07593,.07619,.07645,.07671,.07697,.07723,.07748,.07781,.07815,.07848,.07882,.07915,.07948,.07982,.08008,.08027,.08045,.08063,.08082,.081,.08119,.08137,.08155,.08174,.08192,.08211,.08229,.08247,.08264,.08281,.08297,.08313,.0833,.08346,.08363,.08379,.08396,.08412,.08429,.08445,.08461,.08478,.08494,.08518,.08546,.08575,.08603,.08631,.08659,.08687,.08715,.08743,.0876,.08773,.08786,.088,.08813,.08826,.08839,.08852,.08866,.08879,.08892,.08905,.08918,.08932,.08945,.08958,.08971,.08984,.08998,.09013,.09029,.09045,.09061,.09077,.09092,.09108,.09124,.0914,.09156,.09172,.09188,.09204,.0922,.09235,.09251,.09268,.09285,.09302,.09319,.09336,.09353,.0937,.09387,.09404,.09421,.09438,.09455,.09472,.09489,.09511,.09542,.09572,.09603,.09634,.09665,.09696,.09727,.09754,.09772,.09789,.09806,.09823,.09841,.09858,.09875,.09892,.0991,.09927,.09944,.09961,.09979,.09996,.1001,.1003,.1005,.1006,.1008,.101,.1012,.1013,.1015,.1017,.1019,.102,.1022,.1024,.1026,.1028,.103,.1032,.1034,.1036,.1038,.1041,.1043,.1045,.1047,.1049,.1051,.1053,.1054,.1056,.1058,.1059,.1061,.1063,.1065,.1066,.1068,.107,.1071,.1073,.1075,.1077,.1079,.1081,.1083,.1085,.1087,.109,.1092,.1094,.1096,.1098,.11,.1102,.1104,.1106,.1107,.1109,.1111,.1113,.1114,.1116,.1118,.112,.1122,.1123,.1125,.1127,.1129,.1131,.1133,.1134,.1136,.1138,.114,.1142,.1144,.1146,.1147,.1149,.1151,.1153,.1155,.1157,.1159,.1161,.1163,.1165,.1167,.1169,.1171,.1173,.1176,.1178,.1181,.1184,.1187,.119,.1193,.1196,.1198,.12,.1201,.1203,.1204,.1205,.1206,.1207,.1208,.1209,.121,.1211,.1212,.1213,.1214,.1215,.1216,.1217,.1218,.1219,.122,.1221,.1222,.1223,.1224,.1226,.1227,.1229,.1231,.1233,.1235,.1237,.1239,.1241,.1242,.1244,.1246,.1248,.125,.1252,.1253,.1255,.1256,.1258,.1259,.1261,.1263,.1264,.1266,.1267,.1269,.1271,.1272,.1274,.1275,.1277,.1279,.1281,.1283,.1285,.1287,.1289,.1291,.1293,.1295,.1297,.1299,.1301,.1303,.1304,.1306,.1307,.1309,.1311,.1312,.1314,.1316,.1317,.1319,.1321,.1322,.1324,.1326,.1329,.1332,.1334,.1337,.134,.1343,.1346,.1348,.1351,.1353,.1355,.1357,.1359,.1361,.1363,.1365,.1367,.1369,.1371,.1373,.1375,.1376,.1378,.1379,.1381,.1382,.1384,.1385,.1387,.1388,.139,.1391,.1392,.1394,.1395,.1397,.1398,.14,.1402,.1405,.1407,.141,.1412,.1415,.1417,.142,.1422,.1425,.1426,.1427,.1428,.1429,.1431,.1432,.1433,.1434,.1435,.1436,.1438,.1439,.144,.1441,.1442,.1443,.1444,.1446,.1447,.1448,.1449,.145,.1453,.1455,.1457,.1459,.1461,.1463,.1465,.1467,.1469,.1471,.1473,.1476,.1478,.1481,.1484,.1487,.1489,.1492,.1495,.1497,.15,.1502,.1505,.1507,.1509,.1512,.1514,.1516,.1518,.1521,.1523,.1525,.1527,.1528,.153,.1531,.1533,.1534,.1536,.1537,.1539,.154,.1542,.1543,.1545,.1546,.1548,.1549,.1551,.1553,.1555,.1557,.156,.1562,.1564,.1566,.1568,.157,.1572,.1574,.1576,.1577,.1579,.158,.1582,.1583,.1585,.1586,.1587,.1589,.159,.1592,.1593,.1595,.1596,.1598,.1599,.1601,.1602,.1604,.1606,.1607,.1609,.1611,.1612,.1614,.1616,.1617,.1619,.162,.1622,.1624,.1626,.1628,.1631,.1633,.1636,.1638,.1641,.1643,.1646,.1648,.165,.1652,.1653,.1655,.1656,.1658,.1659,.1661,.1662,.1664,.1666,.1667,.1669,.167,.1672,.1673,.1675,.1677,.168,.1683,.1686,.1689,.1692,.1694,.1697,.17,.1704,.1707,.171,.1714,.1717,.172,.1724,.1726,.1729,.1732,.1734,.1737,.1739,.1742,.1744,.1747,.175,.1751,.1753,.1754,.1756,.1757,.1759,.176,.1762,.1763,.1765,.1766,.1768,.1769,.1771,.1772,.1774,.1776,.1779,.1782,.1785,.1788,.1792,.1795,.1798,.1801,.1802,.1804,.1806,.1808,.1809,.1811,.1813,.1815,.1816,.1818,.182,.1822,.1824,.1825,.1827,.183,.1832,.1834,.1836,.1838,.184,.1842,.1844,.1846,.1848,.185,.1853,.1855,.1857,.1859,.1861,.1863,.1865,.1867,.1869,.1871,.1873,.1876,.1878,.188,.1882,.1884,.1886,.1888,.189,.1892,.1894,.1896,.1899,.1901,.1905,.1909,.1913,.1916,.192,.1924,.1927,.193,.1933,.1935,.1938,.1941,.1944,.1947,.1949,.1952,.1954,.1957,.1959,.1962,.1964,.1966,.1969,.1971,.1974,.1976,.1978,.198,.1982,.1984,.1986,.1988,.199,.1992,.1994,.1996,.1998,.2,.2005,.201,.2015,.202,.2025,.2028,.2031,.2033,.2036,.2039,.2041,.2044,.2047,.205,.2053,.2057,.206,.2064,.2068,.2071,.2075,.2078,.2081,.2083,.2086,.2089,.2092,.2094,.2097,.21,.2104,.2108,.2111,.2115,.2119,.2123,.2127,.213,.2133,.2137,.214,.2144,.2147,.2151,.2154,.2157,.216,.2163,.2166,.2169,.2172,.2176,.2179,.2182,.2186,.2189,.2193,.2196,.22,.2203,.2206,.2209,.2212,.2216,.2219,.2222,.2225,.2233,.2241,.2249,.2253,.2256,.226,.2263,.2267,.227,.2274,.2278,.2283,.2287,.2292,.2297,.2301,.2305,.2309,.2312,.2316,.232,.2324,.2328,.2332,.2337,.2341,.2345,.2349,.2354,.2358,.2363,.2367,.2372,.2378,.2386,.2394,.2401,.2407,.2412,.2418,.2423,.2428,.2434,.2439,.2444,.2449,.2457,.2467,.2476,.248,.2485,.2489,.2494,.2498,.2504,.2511,.2518,.2525,.2532,.2539,.2546,.2553,.2559,.2566,.2572,.2579,.2586,.2593,.2601,.2615,.2628,.2636,.2645,.2654,.2663,.2672,.2682,.2693,.2702,.271,.2718,.2727,.2739,.2751,.2764,.2779,.2799,.2811,.2823,.2853,.2868,.2885,.2907,.2933,.2955,.2995,.3045,.3105,.3173,.3475],e9=[0,.01792,.02114,.0229,.02466,.02847,.03083,.03211,.03339,.03467,.03639,.03826,.04007,.04103,.04199,.04295,.04392,.04488,.04626,.04771,.04915,.05036,.05123,.0521,.05296,.05383,.0547,.05562,.05656,.0575,.05844,.05939,.06032,.06125,.06218,.0631,.06403,.06496,.06558,.06619,.0668,.06742,.06803,.06864,.06925,.06986,.07087,.072,.07313,.07426,.07519,.07575,.07632,.07688,.07744,.07801,.07857,.07913,.07969,.08027,.08085,.08144,.08203,.08262,.08321,.08379,.08438,.08497,.08565,.08633,.08701,.08769,.08838,.08906,.08974,.09036,.09095,.09154,.09213,.09272,.09331,.09389,.09448,.09507,.09568,.09628,.09689,.09749,.0981,.0987,.09931,.09991,.1005,.101,.1016,.1021,.1027,.1033,.1038,.1044,.1049,.1055,.1062,.1068,.1074,.108,.1086,.1092,.1098,.1103,.1108,.1113,.1118,.1123,.1127,.1132,.1137,.1142,.1147,.1152,.1157,.1163,.1169,.1174,.118,.1186,.1191,.1197,.1202,.1206,.121,.1214,.1219,.1223,.1227,.1231,.1235,.1239,.1244,.1248,.1253,.1259,.1265,.1271,.1277,.1284,.129,.1296,.1301,.1305,.1309,.1313,.1317,.132,.1324,.1328,.1332,.1336,.134,.1344,.1347,.1351,.1356,.136,.1365,.1369,.1373,.1378,.1382,.1387,.1391,.1395,.14,.1404,.1409,.1413,.1418,.1422,.1427,.1431,.1436,.144,.1445,.145,.1454,.1458,.1463,.1467,.1472,.1476,.1481,.1485,.149,.1494,.1499,.1503,.1508,.1513,.1517,.1522,.1527,.1531,.1536,.1541,.1546,.155,.1554,.1557,.1561,.1564,.1568,.1572,.1575,.1579,.1582,.1586,.1589,.1593,.1596,.16,.1604,.1608,.1612,.1616,.162,.1624,.1629,.1633,.1637,.1641,.1645,.1649,.1653,.1657,.1661,.1665,.1669,.1674,.1678,.1682,.1686,.169,.1694,.1698,.1702,.1707,.1712,.1716,.1721,.1726,.173,.1735,.174,.1744,.1749,.1753,.1756,.1759,.1762,.1765,.1768,.1772,.1775,.1778,.1781,.1784,.1788,.1791,.1794,.1797,.18,.1805,.181,.1815,.182,.1825,.183,.1834,.1839,.1844,.1849,.1853,.1856,.186,.1863,.1867,.187,.1874,.1877,.1881,.1884,.1888,.1891,.1895,.1898,.1902,.1906,.1909,.1913,.1917,.1921,.1925,.1928,.1932,.1936,.194,.1943,.1947,.1951,.1955,.1958,.1962,.1966,.1969,.1973,.1976,.198,.1984,.1987,.1991,.1995,.1998,.2002,.2005,.2009,.2012,.2016,.202,.2023,.2027,.203,.2034,.2037,.2041,.2045,.2048,.2052,.2055,.2059,.2062,.2066,.207,.2073,.2077,.208,.2084,.2088,.2091,.2095,.2098,.2102,.2106,.211,.2114,.2118,.2122,.2126,.213,.2134,.2138,.2142,.2146,.215,.2154,.2157,.2161,.2165,.2169,.2173,.2176,.218,.2184,.2188,.2192,.2195,.2199,.2203,.2206,.2209,.2212,.2216,.2219,.2222,.2226,.2229,.2232,.2236,.2239,.2242,.2245,.2249,.2252,.2256,.226,.2264,.2267,.2271,.2275,.2279,.2282,.2286,.229,.2294,.2297,.2301,.2305,.2308,.2312,.2315,.2319,.2323,.2326,.233,.2333,.2337,.2341,.2344,.2348,.2351,.2356,.236,.2364,.2368,.2373,.2377,.2381,.2385,.239,.2394,.2398,.2402,.2404,.2407,.241,.2413,.2416,.2419,.2422,.2425,.2428,.243,.2433,.2436,.2439,.2442,.2445,.2448,.2451,.2455,.2459,.2463,.2467,.247,.2474,.2478,.2482,.2486,.249,.2494,.2498,.2501,.2505,.2509,.2513,.2517,.2521,.2525,.2528,.2532,.2536,.254,.2544,.2548,.2551,.2555,.2558,.2562,.2565,.2569,.2572,.2576,.2579,.2583,.2586,.259,.2593,.2597,.26,.2604,.2607,.2611,.2614,.2618,.2621,.2624,.2628,.2631,.2635,.2638,.2642,.2645,.2649,.2652,.2656,.2659,.2663,.2666,.267,.2673,.2677,.268,.2684,.2687,.2691,.2694,.2698,.2701,.2705,.2709,.2713,.2716,.272,.2724,.2728,.2732,.2735,.2739,.2743,.2747,.2751,.2754,.2758,.2762,.2765,.2769,.2773,.2777,.278,.2784,.2788,.2791,.2795,.2799,.2802,.2806,.2809,.2813,.2816,.2819,.2823,.2826,.283,.2833,.2836,.284,.2843,.2847,.285,.2853,.2857,.286,.2864,.2867,.2871,.2874,.2877,.2881,.2884,.2888,.2891,.2894,.2898,.2902,.2906,.291,.2915,.2919,.2923,.2928,.2932,.2936,.2941,.2945,.295,.2953,.2956,.296,.2963,.2966,.297,.2973,.2976,.298,.2983,.2986,.299,.2993,.2996,.3,.3004,.3009,.3013,.3018,.3022,.3027,.3032,.3036,.3041,.3045,.305,.3053,.3056,.3059,.3062,.3065,.3068,.3071,.3074,.3077,.308,.3083,.3086,.3089,.3092,.3095,.3098,.3101,.3105,.3109,.3114,.3118,.3122,.3126,.313,.3134,.3138,.3143,.3147,.3151,.3155,.3159,.3163,.3167,.3171,.3175,.318,.3184,.3188,.3192,.3196,.32,.3203,.3207,.321,.3214,.3217,.3221,.3224,.3227,.3231,.3234,.3238,.3241,.3245,.3248,.3252,.3256,.326,.3264,.3268,.3273,.3277,.3281,.3285,.3289,.3293,.3298,.3302,.3305,.3309,.3313,.3317,.3321,.3324,.3328,.3332,.3336,.3339,.3343,.3347,.3351,.3355,.336,.3364,.3369,.3373,.3378,.3382,.3387,.3391,.3396,.34,.3404,.3408,.3412,.3416,.342,.3424,.3428,.3432,.3436,.344,.3444,.3448,.3453,.3457,.3461,.3466,.347,.3475,.3479,.3483,.3488,.3492,.3496,.3501,.3504,.3508,.3512,.3516,.352,.3523,.3527,.3531,.3535,.3538,.3542,.3546,.355,.3555,.3561,.3567,.3572,.3578,.3583,.3589,.3594,.36,.3604,.3608,.3612,.3616,.362,.3624,.3628,.3632,.3635,.3639,.3643,.3647,.3651,.3656,.3661,.3665,.367,.3674,.3679,.3683,.3688,.3692,.3697,.3702,.3706,.371,.3715,.3719,.3724,.3728,.3733,.3737,.3742,.3746,.3751,.3755,.376,.3764,.3769,.3773,.3778,.3783,.3787,.3792,.3796,.3801,.3807,.3813,.3819,.3826,.3832,.3838,.3844,.385,.3855,.386,.3865,.3869,.3874,.3879,.3884,.3889,.3894,.3899,.3904,.3909,.3914,.3919,.3924,.393,.3935,.394,.3945,.395,.3956,.3962,.3968,.3974,.3979,.3985,.3991,.3997,.4003,.4008,.4014,.4019,.4025,.403,.4036,.4042,.4047,.4053,.4058,.4064,.407,.4075,.4081,.4087,.4092,.4098,.4104,.4112,.4119,.4126,.4133,.414,.4147,.4153,.4158,.4163,.4169,.4174,.4179,.4184,.4189,.4194,.4199,.4207,.4216,.4224,.4233,.4241,.425,.4256,.4263,.427,.4276,.4283,.429,.4296,.4303,.4309,.4316,.4322,.4329,.4335,.4342,.4348,.4356,.4364,.4372,.438,.4388,.4396,.4404,.441,.4417,.4424,.4431,.4438,.4445,.4452,.446,.4469,.4477,.4486,.4494,.4503,.4511,.4519,.4528,.4536,.4544,.4553,.4562,.457,.4579,.4587,.4596,.4604,.4612,.4621,.4629,.4637,.4645,.4655,.4666,.4678,.4689,.47,.471,.4719,.4729,.4738,.4748,.4758,.4769,.4779,.4789,.48,.4809,.4819,.4829,.4838,.4848,.4859,.4871,.4883,.4895,.4907,.4919,.4931,.4942,.4954,.4967,.498,.4992,.5005,.5018,.5031,.5044,.5059,.5074,.5089,.5104,.5119,.5134,.515,.5165,.518,.5195,.5211,.5227,.5244,.526,.5276,.5291,.5309,.533,.5351,.537,.5389,.5409,.5433,.5456,.5478,.55,.5528,.5557,.5588,.5618,.5649,.5679,.5713,.5755,.58,.5852,.5915,.6004,.6089,.6193,.6355,.695],n9=[0,.02153,.02515,.02813,.03132,.03486,.0387,.04339,.04606,.04768,.0493,.05091,.05253,.05404,.05554,.05705,.05856,.06011,.0625,.0649,.06729,.06903,.0707,.07237,.07404,.07556,.07688,.0782,.07951,.08083,.08215,.08329,.08438,.08546,.08654,.08763,.08871,.08979,.09114,.09254,.09395,.09535,.09675,.09811,.09942,.1007,.102,.1034,.1047,.1059,.107,.1082,.1093,.1105,.1116,.1127,.1134,.1142,.115,.1158,.1165,.1173,.1181,.1189,.1197,.1205,.1215,.1224,.1234,.1243,.1252,.1262,.1271,.1286,.1304,.1322,.134,.1353,.1361,.1368,.1375,.1383,.139,.1397,.1405,.1412,.1419,.1427,.1434,.1441,.1449,.1456,.1463,.1471,.1478,.1485,.1493,.15,.1509,.1518,.1527,.1536,.1545,.1554,.1563,.1572,.158,.1587,.1594,.1602,.1609,.1617,.1624,.1632,.1639,.1646,.1655,.1665,.1674,.1684,.1694,.1703,.1713,.1723,.173,.1737,.1743,.175,.1757,.1763,.177,.1776,.1783,.179,.1796,.1803,.1809,.1815,.1821,.1827,.1834,.184,.1846,.1852,.1858,.1864,.1871,.1877,.1886,.1895,.1904,.1912,.1921,.193,.1939,.1947,.1955,.1963,.1971,.1979,.1986,.1994,.2002,.2009,.2017,.2025,.2031,.2037,.2042,.2048,.2054,.206,.2066,.2071,.2077,.2083,.2089,.2095,.21,.2106,.2112,.2119,.2125,.2131,.2137,.2143,.2149,.2155,.2161,.2167,.2173,.218,.2188,.2196,.2204,.2211,.2219,.2227,.2234,.2242,.225,.2257,.2263,.227,.2277,.2284,.229,.2297,.2304,.2311,.2318,.2324,.233,.2336,.2342,.2348,.2354,.236,.2366,.2372,.2378,.2384,.239,.2396,.2402,.2408,.2414,.2421,.2427,.2433,.2439,.2445,.2451,.2457,.2463,.2469,.2475,.248,.2485,.249,.2495,.2501,.2506,.2511,.2516,.2521,.2526,.2531,.2537,.2542,.2547,.2553,.2561,.2568,.2576,.2584,.2591,.2599,.2606,.2614,.2622,.2628,.2634,.264,.2646,.2652,.2657,.2663,.2669,.2675,.268,.2686,.2692,.2698,.2703,.2708,.2714,.2719,.2724,.2729,.2734,.2739,.2744,.275,.2755,.276,.2765,.277,.2775,.2781,.2787,.2793,.2799,.2805,.2811,.2817,.2823,.2829,.2835,.2841,.2847,.2853,.286,.2866,.2872,.2878,.2885,.2891,.2897,.2903,.291,.2916,.2922,.2928,.2934,.294,.2946,.2951,.2957,.2963,.2969,.2975,.2981,.2986,.2992,.2998,.3003,.3008,.3013,.3018,.3024,.3029,.3034,.3039,.3044,.3049,.3054,.3059,.3064,.3069,.3074,.3079,.3085,.3091,.3096,.3102,.3108,.3113,.3119,.3125,.313,.3136,.3142,.3147,.3153,.3159,.3165,.317,.3176,.3182,.3188,.3193,.3199,.3205,.3211,.3216,.3222,.3228,.3233,.3239,.3244,.3249,.3255,.326,.3266,.3271,.3276,.3282,.3287,.3293,.3298,.3304,.331,.3315,.3321,.3327,.3333,.3339,.3344,.335,.3356,.3362,.3368,.3374,.3378,.3383,.3388,.3392,.3397,.3402,.3406,.3411,.3415,.342,.3425,.3429,.3434,.3438,.3443,.3448,.3453,.3459,.3465,.3471,.3477,.3483,.3489,.3496,.3502,.3508,.3514,.352,.3526,.3532,.3538,.3545,.3551,.3557,.3564,.357,.3576,.3582,.3589,.3595,.3601,.3606,.3611,.3615,.362,.3625,.363,.3635,.364,.3644,.3649,.3654,.3659,.3664,.3669,.3673,.3678,.3683,.3688,.3693,.3698,.3703,.3708,.3713,.3719,.3724,.3729,.3734,.3739,.3744,.3749,.3754,.376,.3766,.3772,.3778,.3784,.379,.3796,.3802,.3808,.3813,.3819,.3825,.3831,.3836,.3842,.3847,.3852,.3858,.3863,.3869,.3874,.388,.3885,.389,.3896,.3901,.3907,.3913,.3918,.3924,.393,.3935,.3941,.3946,.3952,.3958,.3963,.3969,.3975,.398,.3985,.399,.3995,.4,.4005,.401,.4015,.402,.4025,.403,.4035,.404,.4046,.4051,.4056,.4061,.4067,.4072,.4077,.4083,.4088,.4093,.4099,.4104,.411,.4115,.412,.4126,.4131,.4137,.4143,.4148,.4154,.416,.4166,.4171,.4177,.4183,.4188,.4194,.42,.4206,.4212,.4218,.4225,.4231,.4237,.4243,.4249,.4256,.4262,.4268,.4274,.4279,.4284,.4289,.4293,.4298,.4303,.4307,.4312,.4317,.4322,.4326,.4331,.4336,.4341,.4345,.435,.4355,.4361,.4366,.4371,.4377,.4382,.4387,.4393,.4398,.4403,.4409,.4414,.4419,.4425,.4431,.4438,.4444,.4451,.4458,.4464,.4471,.4477,.4484,.4491,.4497,.4503,.4509,.4515,.452,.4526,.4531,.4537,.4543,.4548,.4554,.456,.4565,.4571,.4576,.4582,.4587,.4593,.4598,.4604,.4609,.4615,.462,.4626,.4631,.4637,.4643,.4648,.4654,.4659,.4665,.4671,.4676,.4682,.4688,.4693,.4699,.4705,.471,.4716,.4722,.4727,.4733,.4739,.4744,.475,.4756,.4761,.4767,.4772,.4778,.4784,.4789,.4795,.4801,.4807,.4814,.4821,.4827,.4834,.484,.4847,.4853,.486,.4866,.4873,.4879,.4885,.4891,.4897,.4903,.4908,.4914,.492,.4926,.4932,.4938,.4944,.495,.4955,.4961,.4966,.4972,.4977,.4982,.4988,.4993,.4999,.5004,.501,.5015,.5021,.5026,.5032,.5038,.5044,.505,.5056,.5062,.5068,.5074,.508,.5086,.5093,.5099,.5106,.5113,.5121,.5128,.5136,.5143,.5151,.5158,.5166,.5174,.518,.5186,.5192,.5198,.5204,.521,.5216,.5222,.5228,.5234,.5239,.5245,.5251,.5258,.5264,.527,.5276,.5282,.5288,.5294,.53,.5306,.5312,.5319,.5325,.5332,.5339,.5346,.5353,.536,.5367,.5374,.5382,.5389,.5396,.5403,.541,.5416,.5423,.543,.5436,.5443,.545,.5456,.5463,.547,.5477,.5484,.549,.5497,.5504,.5511,.5518,.5525,.5532,.5539,.5546,.5553,.556,.5568,.5575,.5582,.559,.5597,.5604,.5612,.5619,.5626,.5633,.5639,.5646,.5652,.5658,.5665,.5671,.5678,.5684,.5691,.5697,.5704,.5712,.5721,.5729,.5737,.5745,.5754,.5762,.577,.5778,.5786,.5795,.5803,.5811,.582,.5828,.5836,.5845,.5853,.586,.5868,.5875,.5883,.589,.5898,.5905,.5913,.592,.5928,.5935,.5943,.5951,.5958,.5966,.5973,.5981,.5989,.5996,.6005,.6015,.6025,.6035,.6045,.6055,.6065,.6075,.6084,.6093,.6102,.6111,.612,.6129,.6138,.6147,.6156,.6165,.6173,.6182,.6191,.6199,.6208,.6217,.6225,.6235,.6245,.6255,.6265,.6275,.6285,.6295,.6305,.6315,.6325,.6335,.6345,.6355,.6365,.6375,.6386,.6396,.6407,.6417,.6428,.6439,.6449,.6461,.6473,.6485,.6497,.6509,.6521,.6532,.6541,.6551,.656,.657,.6579,.6589,.6598,.661,.6621,.6633,.6645,.6656,.6668,.668,.6694,.6707,.672,.6734,.6747,.6759,.6771,.6783,.6795,.6807,.6819,.6831,.6843,.6856,.6869,.6881,.6894,.6907,.6922,.6936,.6951,.6965,.698,.6994,.7007,.7021,.7035,.7049,.7063,.7077,.7091,.7105,.7119,.7134,.7151,.7168,.7185,.7202,.7217,.7232,.7248,.7263,.7278,.7294,.7311,.7327,.7343,.7362,.7383,.7404,.7425,.7442,.7458,.7475,.7491,.7509,.7529,.7549,.7569,.7592,.7615,.7639,.766,.7681,.7701,.7722,.7744,.7766,.7789,.7814,.7842,.787,.7896,.792,.7945,.7971,.7997,.8024,.8058,.8093,.8124,.8154,.8184,.8216,.8248,.8296,.8339,.8375,.8413,.8455,.8511,.8571,.8619,.8679,.8773,.8841,.8928,.9055,.92,.9356,.9624,1.043],i9=[0,.03024,.0341,.03795,.04554,.0514,.05364,.05589,.05813,.06143,.06994,.07177,.07355,.07533,.07711,.07889,.08084,.08309,.08534,.08758,.08983,.09223,.09464,.09705,.09946,.1014,.1032,.105,.1068,.1086,.1104,.1123,.1142,.1161,.118,.1199,.1215,.1231,.1247,.1262,.1278,.1294,.1311,.133,.1348,.1367,.1386,.1402,.1414,.1425,.1436,.1447,.1458,.147,.1481,.1492,.1506,.1529,.1551,.1573,.1595,.1608,.1618,.1629,.1639,.1649,.1659,.167,.168,.169,.17,.1711,.1722,.1734,.1745,.1756,.1767,.1778,.1789,.18,.1815,.183,.1845,.186,.1875,.1889,.1903,.1912,.1921,.1931,.194,.1949,.1959,.1968,.1978,.1987,.1996,.201,.2028,.2045,.2062,.2079,.2096,.2107,.2115,.2123,.2132,.214,.2149,.2157,.2166,.2174,.2182,.2191,.2199,.221,.2222,.2233,.2244,.2256,.2267,.2279,.229,.2301,.2311,.232,.233,.2339,.2349,.2358,.2368,.2378,.2387,.2397,.2408,.2421,.2433,.2446,.2458,.2471,.2484,.2496,.2505,.2512,.252,.2527,.2534,.2541,.2549,.2556,.2563,.257,.2577,.2585,.2592,.2599,.2609,.262,.263,.2641,.2651,.2662,.2672,.2683,.2694,.2703,.2711,.2719,.2727,.2735,.2743,.2751,.2759,.2767,.2776,.2784,.2792,.28,.2808,.2817,.2826,.2835,.2844,.2852,.2861,.287,.2879,.2888,.2896,.2906,.2916,.2925,.2935,.2945,.2955,.2965,.2974,.2984,.2994,.3003,.301,.3017,.3024,.3032,.3039,.3046,.3053,.306,.3068,.3075,.3082,.3089,.3096,.3105,.3116,.3127,.3138,.3148,.3159,.317,.3181,.3191,.3201,.3209,.3216,.3223,.3231,.3238,.3245,.3252,.326,.3267,.3274,.3281,.3289,.3296,.3304,.3314,.3324,.3334,.3344,.3354,.3364,.3374,.3384,.3394,.3403,.3409,.3415,.3422,.3428,.3434,.3441,.3447,.3453,.3459,.3466,.3472,.3478,.3485,.3491,.3497,.3506,.3516,.3527,.3538,.3548,.3559,.3569,.358,.3591,.3601,.3607,.3613,.362,.3626,.3632,.3639,.3645,.3651,.3657,.3664,.367,.3676,.3683,.3689,.3695,.3702,.3711,.372,.3729,.3737,.3746,.3755,.3764,.3773,.3781,.379,.3799,.3806,.3813,.382,.3827,.3834,.3841,.3848,.3856,.3863,.387,.3877,.3884,.3891,.3898,.3906,.3914,.3923,.3931,.3939,.3948,.3956,.3965,.3973,.3981,.399,.3998,.4006,.4013,.402,.4027,.4035,.4042,.4049,.4056,.4063,.4071,.4078,.4085,.4092,.4099,.4107,.4114,.4121,.4128,.4135,.4142,.415,.4157,.4164,.4171,.4178,.4186,.4193,.42,.4209,.4218,.4227,.4236,.4245,.4254,.4263,.4272,.4281,.429,.4299,.4305,.4311,.4316,.4322,.4328,.4333,.4339,.4345,.435,.4356,.4362,.4367,.4373,.4379,.4385,.439,.4396,.4402,.4411,.4419,.4428,.4436,.4445,.4453,.4462,.447,.4479,.4487,.4496,.4504,.451,.4517,.4524,.4531,.4538,.4544,.4551,.4558,.4565,.4572,.4578,.4585,.4592,.4599,.4606,.4614,.4622,.4629,.4637,.4644,.4652,.466,.4667,.4675,.4683,.469,.4698,.4705,.4711,.4717,.4724,.473,.4737,.4743,.4749,.4756,.4762,.4769,.4775,.4782,.4788,.4794,.4801,.481,.482,.4829,.4838,.4847,.4856,.4865,.4875,.4884,.4893,.4901,.4907,.4913,.4919,.4925,.4931,.4937,.4943,.4949,.4955,.4961,.4967,.4973,.4979,.4985,.4991,.4997,.5004,.5012,.502,.5028,.5036,.5044,.5052,.506,.5068,.5076,.5084,.5092,.51,.5107,.5114,.512,.5127,.5134,.5141,.5148,.5155,.5162,.5169,.5176,.5183,.5189,.5196,.5203,.5211,.5218,.5225,.5232,.5239,.5247,.5254,.5261,.5268,.5275,.5282,.529,.5297,.5305,.5313,.5321,.5329,.5338,.5346,.5354,.5363,.5371,.5379,.5387,.5396,.5403,.5409,.5414,.542,.5426,.5432,.5438,.5444,.5449,.5455,.5461,.5467,.5473,.5479,.5484,.549,.5496,.5503,.5512,.5522,.5531,.5541,.555,.5559,.5569,.5578,.5587,.5597,.5604,.561,.5617,.5623,.5629,.5636,.5642,.5648,.5654,.5661,.5667,.5673,.568,.5686,.5692,.5699,.5706,.5714,.5722,.573,.5738,.5747,.5755,.5763,.5771,.5779,.5787,.5795,.5803,.581,.5817,.5824,.5832,.5839,.5846,.5853,.5861,.5868,.5875,.5882,.589,.5897,.5904,.5912,.592,.5928,.5936,.5944,.5952,.596,.5968,.5975,.5983,.5991,.5999,.6006,.6013,.602,.6027,.6034,.6041,.6048,.6055,.6062,.6068,.6075,.6082,.6089,.6096,.6104,.6113,.6121,.613,.6139,.6148,.6157,.6165,.6174,.6183,.6192,.62,.6207,.6214,.6221,.6228,.6234,.6241,.6248,.6255,.6262,.6268,.6275,.6282,.6289,.6296,.6303,.6311,.6319,.6327,.6335,.6343,.6351,.6359,.6367,.6375,.6384,.6392,.64,.6408,.6416,.6424,.6432,.644,.6448,.6456,.6464,.6472,.6481,.6489,.6497,.6504,.6512,.6519,.6526,.6534,.6541,.6548,.6555,.6563,.657,.6577,.6585,.6592,.6599,.6608,.6617,.6626,.6635,.6644,.6653,.6662,.6671,.668,.6689,.6698,.6706,.6714,.6721,.6729,.6737,.6744,.6752,.6759,.6767,.6774,.6782,.6789,.6797,.6806,.6815,.6825,.6834,.6844,.6853,.6863,.6872,.6882,.6891,.6901,.6909,.6917,.6925,.6933,.6941,.6949,.6957,.6965,.6973,.6981,.6989,.6997,.7006,.7015,.7025,.7034,.7044,.7053,.7063,.7072,.7081,.7091,.71,.7108,.7116,.7124,.7132,.714,.7148,.7156,.7164,.7172,.718,.7188,.7196,.7205,.7214,.7224,.7234,.7243,.7253,.7263,.7273,.7282,.7292,.7301,.7309,.7317,.7326,.7334,.7342,.735,.7358,.7366,.7374,.7382,.739,.7398,.7407,.7417,.7427,.7437,.7447,.7456,.7466,.7476,.7486,.7496,.7506,.7515,.7525,.7535,.7545,.7555,.7565,.7575,.7585,.7595,.7604,.7613,.7622,.7632,.7641,.765,.7659,.7668,.7677,.7686,.7695,.7706,.7718,.7729,.7741,.7753,.7765,.7777,.7789,.78,.7811,.7821,.7831,.7841,.7851,.7861,.7871,.7882,.7892,.7902,.7914,.7926,.7937,.7949,.7961,.7972,.7984,.7996,.8007,.8018,.8029,.8041,.8052,.8063,.8074,.8086,.8097,.8108,.8119,.813,.8141,.8152,.8163,.8174,.8185,.8196,.8208,.8221,.8233,.8246,.8258,.8271,.8283,.8296,.831,.8324,.8339,.8353,.8368,.8382,.8397,.8409,.8421,.8432,.8444,.8455,.8467,.8478,.849,.8502,.8519,.8536,.8554,.8571,.8588,.8604,.8618,.8632,.8646,.866,.8674,.8688,.8702,.8717,.8732,.8747,.8762,.8777,.8792,.8806,.8821,.8835,.8849,.8863,.8877,.8891,.8906,.8923,.8939,.8956,.8973,.8989,.9006,.9022,.9037,.9053,.9069,.9085,.9101,.9119,.9137,.9155,.9173,.9191,.9209,.9227,.9245,.9263,.9281,.9299,.9318,.9337,.9356,.9375,.9394,.9415,.9437,.9459,.9482,.9503,.9521,.9539,.9557,.9576,.9594,.9616,.964,.9664,.9688,.971,.973,.975,.977,.979,.9811,.9834,.9856,.9879,.9902,.9928,.9954,.998,1.001,1.003,1.006,1.008,1.011,1.014,1.017,1.019,1.022,1.026,1.029,1.032,1.035,1.039,1.042,1.045,1.048,1.051,1.055,1.059,1.062,1.066,1.069,1.073,1.077,1.082,1.086,1.09,1.094,1.099,1.105,1.11,1.116,1.122,1.128,1.134,1.141,1.148,1.156,1.166,1.176,1.189,1.206,1.225,1.246,1.28,1.42],s9=[0,.03738,.0457,.05269,.05829,.06374,.06871,.07368,.0779,.08184,.08578,.08899,.09163,.09427,.09691,.09955,.1031,.1069,.1106,.1136,.1159,.1182,.1205,.1228,.1251,.1275,.1299,.1324,.1348,.1373,.1396,.1419,.1442,.1465,.1488,.1509,.1529,.1548,.1568,.1587,.1607,.1627,.1648,.167,.1691,.1713,.1734,.1754,.1771,.1788,.1804,.1821,.1838,.1854,.1871,.1888,.1905,.1923,.194,.1958,.1975,.1992,.201,.2027,.2044,.2061,.2079,.2096,.2113,.2129,.2143,.2157,.2171,.2185,.2199,.2213,.2226,.224,.2255,.2272,.2289,.2306,.2323,.234,.2357,.2374,.2389,.2403,.2418,.2432,.2447,.2461,.2476,.249,.2504,.2517,.2529,.2541,.2554,.2566,.2579,.2591,.2604,.2616,.2629,.2644,.2658,.2673,.2687,.2702,.2716,.2731,.2745,.2758,.277,.2783,.2795,.2807,.2819,.2831,.2843,.2855,.2867,.288,.2893,.2907,.292,.2933,.2947,.296,.2973,.2987,.3,.3012,.3024,.3036,.3048,.306,.3071,.3083,.3095,.3107,.3119,.3131,.3142,.3154,.3166,.3177,.3189,.32,.3212,.3224,.3235,.3247,.3259,.3271,.3284,.3296,.3309,.3321,.3333,.3346,.3358,.3371,.3381,.3391,.3401,.341,.342,.343,.3439,.3449,.3459,.3469,.3478,.3488,.3498,.351,.3523,.3536,.3549,.3562,.3575,.3588,.36,.3613,.3626,.3636,.3647,.3657,.3667,.3678,.3688,.3698,.3709,.3719,.3729,.374,.375,.376,.377,.3781,.3791,.3801,.3811,.3822,.3832,.3842,.3852,.3863,.3873,.3884,.3895,.3906,.3917,.3928,.3939,.395,.3962,.3973,.3984,.3995,.4005,.4014,.4024,.4033,.4042,.4052,.4061,.407,.408,.4089,.4099,.4108,.4117,.4127,.4137,.4148,.4159,.4169,.418,.4191,.4201,.4212,.4223,.4233,.4244,.4254,.4264,.4274,.4284,.4295,.4305,.4315,.4325,.4335,.4345,.4355,.4365,.4375,.4385,.4394,.4404,.4413,.4423,.4432,.4442,.4451,.4461,.447,.448,.449,.4499,.4509,.4519,.4529,.4538,.4548,.4558,.4568,.4578,.4588,.4598,.4608,.4617,.4627,.4637,.4646,.4655,.4665,.4674,.4684,.4693,.4702,.4712,.4721,.4731,.474,.4749,.4759,.4769,.4778,.4788,.4797,.4807,.4817,.4826,.4836,.4845,.4855,.4865,.4874,.4884,.4893,.4903,.4912,.4922,.4931,.494,.495,.4959,.4969,.4978,.4988,.4997,.5007,.5016,.5025,.5034,.5043,.5052,.5061,.507,.5079,.5088,.5097,.5106,.5115,.5124,.5134,.5144,.5153,.5163,.5173,.5183,.5192,.5202,.5212,.5221,.5231,.5241,.525,.5259,.5268,.5277,.5285,.5294,.5303,.5311,.532,.5329,.5337,.5346,.5355,.5363,.5372,.5381,.5391,.54,.5409,.5419,.5428,.5437,.5447,.5456,.5466,.5475,.5484,.5494,.5503,.5513,.5523,.5532,.5542,.5552,.5562,.5572,.5581,.5591,.5601,.5611,.5621,.5629,.5637,.5645,.5653,.5661,.5669,.5677,.5685,.5693,.5701,.5709,.5717,.5725,.5733,.5741,.5749,.5759,.5769,.578,.579,.5801,.5811,.5821,.5832,.5842,.5853,.5863,.5874,.5883,.5891,.5899,.5908,.5916,.5925,.5933,.5942,.595,.5959,.5967,.5976,.5984,.5993,.6001,.601,.6019,.6027,.6036,.6045,.6053,.6062,.6071,.6079,.6088,.6097,.6105,.6114,.6123,.6132,.6142,.6151,.6161,.617,.618,.6189,.6199,.6208,.6218,.6227,.6237,.6246,.6255,.6264,.6272,.6281,.629,.6298,.6307,.6316,.6324,.6333,.6342,.635,.6359,.6368,.6376,.6386,.6395,.6404,.6414,.6423,.6433,.6442,.6451,.6461,.647,.6479,.6489,.6498,.6507,.6515,.6524,.6533,.6541,.655,.6558,.6567,.6576,.6584,.6593,.6601,.661,.6619,.6627,.6636,.6646,.6655,.6664,.6673,.6682,.6691,.6701,.671,.6719,.6728,.6737,.6747,.6756,.6765,.6774,.6784,.6793,.6802,.6811,.6821,.683,.6839,.6849,.6858,.6867,.6876,.6885,.6893,.6902,.691,.6919,.6927,.6936,.6944,.6953,.6961,.697,.6978,.6987,.6995,.7004,.7014,.7024,.7033,.7043,.7052,.7062,.7072,.7081,.7091,.7101,.711,.712,.7129,.7139,.7148,.7157,.7166,.7176,.7185,.7194,.7204,.7213,.7222,.7231,.7241,.725,.7259,.7267,.7276,.7284,.7293,.7302,.731,.7319,.7327,.7336,.7345,.7353,.7362,.737,.738,.739,.74,.7409,.7419,.7429,.7439,.7449,.7459,.7469,.7479,.7489,.7499,.7508,.7517,.7526,.7536,.7545,.7554,.7563,.7572,.7581,.7591,.76,.7609,.7618,.7627,.7637,.7646,.7656,.7665,.7674,.7684,.7693,.7702,.7712,.7721,.7731,.774,.7749,.7759,.777,.778,.779,.78,.781,.782,.783,.784,.785,.786,.787,.7879,.7888,.7898,.7907,.7916,.7925,.7934,.7943,.7952,.7961,.797,.7979,.7988,.7997,.8007,.8018,.8029,.8039,.805,.8061,.8071,.8082,.8093,.8104,.8114,.8125,.8134,.8143,.8153,.8162,.8171,.818,.8189,.8199,.8208,.8217,.8226,.8235,.8245,.8254,.8265,.8276,.8286,.8297,.8307,.8318,.8329,.8339,.835,.8361,.8371,.8381,.8391,.8402,.8412,.8422,.8432,.8442,.8452,.8462,.8472,.8482,.8492,.8502,.8512,.8522,.8533,.8543,.8553,.8563,.8574,.8584,.8594,.8604,.8614,.8625,.8635,.8646,.8657,.8668,.8679,.869,.8701,.8712,.8723,.8734,.8745,.8755,.8766,.8776,.8786,.8797,.8807,.8817,.8828,.8838,.8848,.8859,.8869,.888,.8891,.8903,.8914,.8925,.8937,.8948,.896,.8971,.8983,.8994,.9006,.9017,.9028,.9039,.9051,.9062,.9073,.9084,.9096,.9107,.9118,.913,.9141,.9152,.9163,.9174,.9185,.9196,.9207,.9218,.9229,.924,.9251,.9264,.9276,.9288,.93,.9313,.9325,.9337,.9349,.9361,.9374,.9386,.9398,.9411,.9423,.9435,.9447,.946,.9472,.9484,.9496,.9508,.952,.9531,.9543,.9554,.9566,.9577,.9589,.96,.9612,.9623,.9637,.9652,.9666,.968,.9694,.9708,.9723,.9737,.9751,.9764,.9776,.9789,.9801,.9814,.9826,.9839,.9851,.9864,.9876,.989,.9904,.9918,.9932,.9946,.9959,.9973,.9987,1,1.002,1.003,1.005,1.006,1.008,1.009,1.011,1.012,1.014,1.015,1.016,1.018,1.019,1.021,1.022,1.024,1.025,1.027,1.028,1.03,1.032,1.033,1.035,1.036,1.038,1.039,1.041,1.042,1.044,1.045,1.047,1.048,1.05,1.052,1.053,1.055,1.057,1.059,1.061,1.063,1.064,1.066,1.068,1.069,1.071,1.072,1.074,1.076,1.078,1.079,1.081,1.083,1.085,1.087,1.089,1.09,1.092,1.094,1.096,1.098,1.1,1.102,1.104,1.106,1.108,1.109,1.111,1.113,1.115,1.117,1.119,1.121,1.123,1.125,1.127,1.129,1.131,1.133,1.135,1.138,1.14,1.142,1.144,1.146,1.149,1.151,1.153,1.155,1.157,1.16,1.162,1.164,1.167,1.169,1.172,1.174,1.176,1.179,1.181,1.183,1.186,1.188,1.191,1.193,1.196,1.199,1.201,1.204,1.207,1.209,1.212,1.215,1.218,1.22,1.223,1.226,1.229,1.232,1.235,1.238,1.241,1.244,1.247,1.25,1.254,1.257,1.261,1.264,1.267,1.271,1.274,1.278,1.282,1.286,1.289,1.293,1.297,1.3,1.305,1.309,1.314,1.318,1.322,1.326,1.331,1.336,1.341,1.346,1.351,1.356,1.362,1.368,1.374,1.38,1.386,1.393,1.401,1.407,1.415,1.425,1.434,1.444,1.456,1.47,1.487,1.504,1.526,1.556,1.599,1.75],r9=[0,.04586,.05521,.0641,.07252,.07852,.08351,.08849,.09316,.09768,.1022,.1065,.1105,.1145,.1185,.1222,.1257,.1292,.1328,.1362,.1394,.1426,.1458,.149,.152,.1548,.1577,.1605,.1634,.1662,.1689,.1715,.1742,.1769,.1795,.1821,.1846,.1872,.1897,.1923,.1948,.1971,.1994,.2016,.2039,.2061,.2084,.2107,.213,.2153,.2176,.2199,.2222,.2245,.2265,.2284,.2303,.2323,.2342,.2361,.238,.2399,.2418,.2438,.2457,.2476,.2495,.2514,.2533,.2552,.2573,.2593,.2613,.2634,.2654,.2674,.2695,.2713,.273,.2748,.2765,.2783,.28,.2818,.2835,.2852,.2869,.2886,.2903,.292,.2937,.2953,.297,.2987,.3004,.3021,.3039,.3056,.3073,.3091,.3108,.3125,.3142,.3159,.3175,.319,.3206,.3222,.3237,.3253,.3269,.3284,.33,.3315,.3331,.3346,.3361,.3376,.3392,.3407,.3422,.3437,.3452,.3468,.3483,.3498,.3513,.3528,.3543,.3558,.3573,.3589,.3603,.3618,.3632,.3646,.366,.3674,.3689,.3703,.3717,.3731,.3745,.376,.3775,.379,.3805,.382,.3835,.3849,.3864,.3879,.3894,.3908,.3922,.3935,.3948,.3962,.3975,.3989,.4002,.4015,.4029,.4042,.4056,.4069,.4082,.4096,.4109,.4122,.4136,.4149,.4162,.4176,.4189,.4202,.4216,.423,.4244,.4257,.4271,.4285,.4299,.4312,.4326,.434,.4353,.4366,.4379,.4392,.4405,.4418,.443,.4443,.4456,.4469,.4482,.4495,.4507,.452,.4534,.4547,.456,.4573,.4586,.4599,.4612,.4625,.4638,.4651,.4663,.4675,.4687,.47,.4712,.4724,.4737,.4749,.4761,.4773,.4786,.4798,.481,.4822,.4834,.4845,.4857,.4869,.4881,.4893,.4905,.4917,.4929,.494,.4952,.4965,.4977,.4989,.5002,.5014,.5026,.5039,.5051,.5063,.5076,.5088,.51,.5112,.5124,.5136,.5148,.516,.5172,.5184,.5196,.5207,.5219,.5231,.5243,.5255,.5267,.5278,.529,.5302,.5313,.5325,.5337,.5348,.536,.5371,.5383,.5395,.5407,.5419,.5431,.5443,.5455,.5468,.548,.5492,.5504,.5516,.5528,.554,.5552,.5564,.5575,.5586,.5598,.5609,.562,.5631,.5643,.5654,.5665,.5676,.5688,.5699,.571,.5721,.5733,.5744,.5755,.5766,.5777,.5789,.58,.5811,.5822,.5833,.5844,.5856,.5867,.5879,.589,.5901,.5913,.5924,.5936,.5947,.5959,.597,.5982,.5993,.6004,.6015,.6026,.6036,.6047,.6058,.6069,.6079,.609,.6101,.6112,.6122,.6133,.6144,.6155,.6166,.6177,.6188,.6199,.621,.6222,.6233,.6244,.6255,.6266,.6277,.6289,.63,.6311,.6322,.6333,.6344,.6356,.6367,.6378,.6389,.6401,.6412,.6423,.6434,.6445,.6456,.6467,.6478,.6489,.65,.6511,.6522,.6532,.6543,.6554,.6565,.6576,.6587,.6598,.6609,.662,.663,.6641,.6652,.6663,.6674,.6685,.6696,.6707,.6718,.6729,.674,.6751,.6762,.6773,.6784,.6794,.6805,.6816,.6827,.6838,.6848,.6859,.687,.6881,.6891,.6902,.6913,.6924,.6935,.6946,.6957,.6968,.6979,.699,.7001,.7012,.7023,.7034,.7045,.7056,.7067,.7078,.7088,.7099,.711,.7121,.7132,.7142,.7153,.7164,.7175,.7185,.7196,.7207,.7217,.7228,.7238,.7249,.726,.727,.7281,.7291,.7302,.7312,.7323,.7334,.7344,.7355,.7366,.7376,.7387,.7398,.7409,.7419,.743,.7441,.7452,.7463,.7473,.7484,.7495,.7506,.7517,.7527,.7538,.7549,.756,.7571,.7582,.7593,.7604,.7615,.7625,.7636,.7647,.7658,.7668,.7679,.7689,.77,.771,.7721,.7731,.7741,.7752,.7762,.7773,.7783,.7794,.7804,.7816,.7827,.7838,.7849,.786,.7871,.7882,.7893,.7905,.7916,.7927,.7938,.7949,.796,.797,.7981,.7992,.8003,.8013,.8024,.8035,.8045,.8056,.8067,.8077,.8088,.8099,.811,.8121,.8131,.8142,.8153,.8164,.8175,.8186,.8197,.8208,.8219,.8229,.824,.8251,.8262,.8273,.8285,.8296,.8307,.8318,.8329,.834,.8351,.8363,.8374,.8385,.8396,.8407,.8417,.8428,.8439,.8449,.846,.847,.8481,.8491,.8502,.8513,.8523,.8534,.8544,.8555,.8566,.8577,.8589,.86,.8611,.8622,.8633,.8644,.8655,.8666,.8677,.8688,.8699,.871,.8721,.8733,.8744,.8755,.8766,.8777,.8788,.8799,.881,.8821,.8832,.8843,.8854,.8865,.8876,.8887,.8898,.8909,.8919,.893,.8941,.8952,.8963,.8974,.8985,.8996,.9007,.9019,.9031,.9042,.9054,.9066,.9078,.9089,.9101,.9113,.9125,.9137,.9148,.916,.9171,.9182,.9193,.9204,.9216,.9227,.9238,.9249,.9261,.9272,.9283,.9294,.9305,.9317,.9328,.9339,.9351,.9362,.9373,.9385,.9396,.9407,.9419,.943,.9442,.9453,.9465,.9476,.9488,.95,.9512,.9523,.9535,.9547,.9559,.957,.9582,.9594,.9606,.9617,.9629,.964,.9652,.9664,.9675,.9687,.9698,.971,.9721,.9733,.9745,.9756,.9768,.978,.9792,.9804,.9816,.9828,.984,.9852,.9864,.9876,.9888,.99,.9912,.9924,.9936,.9948,.996,.9972,.9983,.9995,1.001,1.002,1.003,1.004,1.006,1.007,1.008,1.009,1.01,1.012,1.013,1.014,1.015,1.017,1.018,1.019,1.02,1.022,1.023,1.024,1.025,1.027,1.028,1.029,1.031,1.032,1.033,1.034,1.036,1.037,1.038,1.039,1.041,1.042,1.043,1.044,1.045,1.047,1.048,1.049,1.05,1.052,1.053,1.054,1.056,1.057,1.058,1.059,1.061,1.062,1.063,1.065,1.066,1.067,1.069,1.07,1.071,1.073,1.074,1.075,1.077,1.078,1.079,1.081,1.082,1.083,1.085,1.086,1.087,1.089,1.09,1.091,1.093,1.094,1.095,1.097,1.098,1.099,1.101,1.102,1.104,1.105,1.106,1.108,1.109,1.111,1.112,1.113,1.115,1.116,1.118,1.119,1.12,1.122,1.123,1.125,1.126,1.128,1.129,1.13,1.132,1.133,1.135,1.136,1.137,1.139,1.14,1.142,1.143,1.145,1.146,1.148,1.15,1.151,1.153,1.154,1.156,1.157,1.159,1.16,1.162,1.163,1.165,1.166,1.168,1.169,1.171,1.172,1.174,1.176,1.177,1.179,1.18,1.182,1.184,1.185,1.187,1.189,1.19,1.192,1.194,1.195,1.197,1.199,1.201,1.202,1.204,1.206,1.207,1.209,1.211,1.213,1.214,1.216,1.218,1.219,1.221,1.223,1.225,1.227,1.228,1.23,1.232,1.234,1.236,1.238,1.24,1.241,1.243,1.245,1.247,1.249,1.251,1.253,1.255,1.256,1.258,1.26,1.262,1.264,1.266,1.268,1.27,1.272,1.274,1.277,1.279,1.281,1.283,1.285,1.287,1.289,1.291,1.293,1.295,1.298,1.3,1.302,1.304,1.306,1.308,1.311,1.313,1.315,1.317,1.32,1.322,1.324,1.326,1.329,1.331,1.333,1.336,1.338,1.34,1.343,1.345,1.347,1.35,1.352,1.355,1.357,1.36,1.362,1.365,1.368,1.37,1.373,1.376,1.378,1.381,1.383,1.386,1.389,1.391,1.394,1.397,1.4,1.403,1.405,1.408,1.411,1.414,1.417,1.42,1.423,1.426,1.429,1.432,1.435,1.438,1.441,1.444,1.447,1.45,1.454,1.457,1.46,1.464,1.467,1.471,1.474,1.478,1.481,1.485,1.489,1.492,1.496,1.5,1.504,1.508,1.512,1.516,1.52,1.524,1.528,1.533,1.537,1.542,1.546,1.551,1.556,1.561,1.565,1.57,1.575,1.58,1.586,1.591,1.597,1.603,1.608,1.614,1.62,1.627,1.634,1.641,1.647,1.655,1.662,1.671,1.679,1.688,1.698,1.708,1.72,1.732,1.747,1.763,1.782,1.805,1.831,1.866,1.916,2.115],o9=[0,.04557,.05889,.07003,.07811,.08619,.09256,.09859,.1046,.1095,.1143,.1191,.1239,.1287,.1334,.1381,.1424,.1463,.1502,.1541,.158,.1617,.1653,.169,.1726,.1761,.1794,.1828,.1861,.1894,.1927,.1957,.1988,.2019,.205,.208,.211,.2139,.2168,.2197,.2226,.2255,.2283,.2309,.2336,.2362,.2388,.2414,.2441,.2466,.2492,.2518,.2543,.2569,.2594,.262,.2643,.2666,.2689,.2711,.2734,.2757,.2779,.2802,.2826,.2849,.2873,.2897,.292,.2944,.2967,.2989,.301,.303,.3051,.3072,.3093,.3113,.3134,.3155,.3177,.3198,.322,.3241,.3263,.3284,.3306,.3327,.3347,.3367,.3387,.3407,.3427,.3447,.3468,.3488,.3507,.3527,.3546,.3565,.3585,.3604,.3623,.3642,.3662,.3681,.37,.3719,.3737,.3756,.3775,.3794,.3812,.3831,.385,.3868,.3886,.3904,.3922,.3939,.3957,.3975,.3993,.4011,.4029,.4046,.4063,.4081,.4098,.4116,.4133,.415,.4168,.4185,.4202,.4219,.4236,.4253,.4269,.4286,.4303,.4319,.4336,.4353,.437,.4387,.4405,.4422,.444,.4458,.4476,.4493,.4511,.4529,.4547,.4563,.4578,.4593,.4609,.4624,.4639,.4655,.467,.4685,.4701,.4716,.4732,.4748,.4763,.4779,.4795,.4811,.4827,.4843,.4859,.4875,.4891,.4906,.4922,.4937,.4952,.4968,.4983,.4998,.5013,.5029,.5044,.5059,.5075,.509,.5105,.512,.5135,.515,.5166,.5181,.5196,.5211,.5226,.5242,.5257,.5272,.5287,.5302,.5317,.5332,.5347,.5362,.5377,.5392,.5407,.5422,.5437,.5451,.5466,.5481,.5495,.551,.5525,.5539,.5554,.5569,.5583,.5598,.5612,.5626,.564,.5654,.5669,.5683,.5697,.5711,.5725,.5739,.5753,.5767,.5781,.5795,.5809,.5823,.5837,.5851,.5865,.5879,.5893,.5907,.5921,.5935,.5949,.5963,.5978,.5992,.6006,.6021,.6035,.6049,.6064,.6078,.6092,.6107,.6121,.6134,.6148,.6161,.6174,.6187,.6201,.6214,.6227,.624,.6254,.6267,.628,.6293,.6307,.6321,.6335,.6349,.6363,.6377,.6391,.6405,.6419,.6433,.6447,.6461,.6475,.6488,.6502,.6515,.6528,.6541,.6554,.6567,.6581,.6594,.6607,.662,.6633,.6646,.6659,.6673,.6686,.6699,.6712,.6725,.6739,.6752,.6765,.6778,.6791,.6804,.6818,.6831,.6844,.6858,.6871,.6884,.6898,.6911,.6924,.6938,.6951,.6964,.6978,.6991,.7004,.7017,.703,.7043,.7056,.7069,.7082,.7095,.7108,.7121,.7134,.7147,.716,.7173,.7186,.7199,.7212,.7225,.7238,.7251,.7264,.7277,.729,.7303,.7316,.7329,.7342,.7355,.7368,.7381,.7394,.7407,.742,.7433,.7446,.7459,.7472,.7485,.7498,.7511,.7524,.7537,.755,.7563,.7576,.7589,.7602,.7614,.7627,.764,.7653,.7666,.7679,.7692,.7705,.7717,.7729,.7742,.7754,.7767,.7779,.7791,.7804,.7816,.7828,.7841,.7853,.7866,.7878,.7891,.7904,.7917,.793,.7943,.7956,.7969,.7982,.7995,.8008,.8021,.8034,.8048,.806,.8072,.8085,.8097,.811,.8122,.8135,.8147,.8159,.8172,.8184,.8197,.8209,.8221,.8234,.8247,.826,.8273,.8286,.8299,.8312,.8325,.8338,.8351,.8364,.8377,.839,.8403,.8415,.8427,.844,.8452,.8464,.8477,.8489,.8501,.8514,.8526,.8538,.8551,.8563,.8575,.8588,.8601,.8614,.8626,.8639,.8652,.8665,.8677,.869,.8703,.8715,.8728,.8741,.8754,.8766,.8779,.8792,.8805,.8817,.883,.8843,.8856,.8868,.8881,.8894,.8907,.8919,.8932,.8944,.8957,.8969,.8982,.8994,.9007,.9019,.9032,.9044,.9057,.9069,.9081,.9094,.9107,.9119,.9132,.9145,.9158,.917,.9183,.9196,.9209,.9222,.9234,.9247,.926,.9273,.9285,.9298,.931,.9323,.9335,.9348,.9361,.9373,.9386,.9398,.9411,.9423,.9436,.9448,.9461,.9474,.9487,.9499,.9512,.9525,.9538,.955,.9563,.9576,.9589,.9601,.9614,.9627,.9639,.9651,.9664,.9676,.9689,.9701,.9713,.9726,.9738,.9751,.9763,.9775,.9788,.98,.9813,.9827,.984,.9853,.9866,.9879,.9892,.9906,.9919,.9932,.9945,.9958,.9971,.9984,.9997,1.001,1.002,1.003,1.005,1.006,1.007,1.008,1.01,1.011,1.012,1.013,1.015,1.016,1.017,1.019,1.02,1.021,1.023,1.024,1.025,1.027,1.028,1.029,1.031,1.032,1.033,1.035,1.036,1.037,1.038,1.04,1.041,1.042,1.044,1.045,1.046,1.047,1.049,1.05,1.051,1.053,1.054,1.055,1.057,1.058,1.059,1.061,1.062,1.063,1.065,1.066,1.067,1.069,1.07,1.071,1.073,1.074,1.075,1.077,1.078,1.079,1.081,1.082,1.083,1.085,1.086,1.087,1.089,1.09,1.091,1.093,1.094,1.095,1.097,1.098,1.099,1.101,1.102,1.103,1.105,1.106,1.107,1.109,1.11,1.111,1.113,1.114,1.115,1.117,1.118,1.119,1.121,1.122,1.124,1.125,1.126,1.128,1.129,1.13,1.132,1.133,1.135,1.136,1.137,1.139,1.14,1.142,1.143,1.145,1.146,1.147,1.149,1.15,1.152,1.153,1.155,1.156,1.157,1.159,1.16,1.162,1.163,1.164,1.166,1.167,1.169,1.17,1.171,1.173,1.174,1.176,1.177,1.179,1.18,1.181,1.183,1.184,1.186,1.187,1.189,1.19,1.192,1.193,1.195,1.196,1.197,1.199,1.2,1.202,1.203,1.205,1.206,1.207,1.209,1.21,1.212,1.213,1.215,1.216,1.218,1.219,1.221,1.222,1.224,1.225,1.227,1.228,1.23,1.232,1.233,1.235,1.236,1.238,1.239,1.241,1.242,1.244,1.245,1.247,1.248,1.25,1.251,1.253,1.254,1.256,1.257,1.259,1.26,1.262,1.264,1.265,1.267,1.268,1.27,1.271,1.273,1.275,1.276,1.278,1.279,1.281,1.283,1.284,1.286,1.287,1.289,1.291,1.292,1.294,1.296,1.297,1.299,1.301,1.302,1.304,1.306,1.307,1.309,1.311,1.312,1.314,1.316,1.317,1.319,1.321,1.322,1.324,1.326,1.327,1.329,1.331,1.332,1.334,1.336,1.338,1.339,1.341,1.343,1.345,1.346,1.348,1.35,1.352,1.354,1.355,1.357,1.359,1.361,1.363,1.364,1.366,1.368,1.37,1.372,1.374,1.376,1.378,1.379,1.381,1.383,1.385,1.387,1.389,1.391,1.393,1.395,1.397,1.399,1.401,1.403,1.405,1.407,1.409,1.411,1.413,1.415,1.417,1.419,1.421,1.423,1.425,1.427,1.429,1.432,1.434,1.436,1.438,1.44,1.442,1.444,1.446,1.449,1.451,1.453,1.455,1.457,1.46,1.462,1.464,1.467,1.469,1.471,1.474,1.476,1.478,1.481,1.483,1.485,1.488,1.49,1.492,1.495,1.497,1.5,1.502,1.505,1.507,1.51,1.512,1.515,1.517,1.52,1.522,1.525,1.528,1.53,1.533,1.536,1.538,1.541,1.543,1.546,1.549,1.551,1.554,1.557,1.559,1.562,1.565,1.568,1.571,1.573,1.576,1.579,1.582,1.585,1.588,1.591,1.594,1.597,1.6,1.603,1.606,1.609,1.612,1.615,1.618,1.622,1.625,1.628,1.631,1.635,1.638,1.641,1.645,1.648,1.651,1.655,1.658,1.661,1.665,1.668,1.672,1.676,1.679,1.683,1.687,1.69,1.694,1.698,1.702,1.706,1.71,1.714,1.718,1.722,1.726,1.73,1.735,1.739,1.743,1.748,1.752,1.757,1.761,1.766,1.771,1.776,1.781,1.786,1.791,1.796,1.801,1.807,1.812,1.817,1.823,1.829,1.835,1.841,1.847,1.853,1.86,1.866,1.873,1.879,1.886,1.893,1.901,1.909,1.917,1.925,1.934,1.943,1.953,1.963,1.973,1.984,1.996,2.011,2.026,2.042,2.062,2.085,2.111,2.143,2.184,2.243,2.467],a9=[0,.05235,.06767,.08059,.08872,.09685,.1057,.1151,.1225,.1278,.1331,.1384,.1433,.1482,.153,.1579,.163,.1683,.1737,.179,.1831,.1869,.1908,.1946,.1985,.202,.2052,.2085,.2118,.2151,.2183,.2221,.2263,.2306,.2349,.2391,.2424,.2455,.2485,.2515,.2546,.2576,.2607,.2639,.2671,.2703,.2735,.2767,.2799,.2828,.2856,.2884,.2913,.2941,.2969,.2998,.3023,.3047,.3072,.3097,.3121,.3146,.3171,.3196,.3227,.3259,.3292,.3325,.3357,.339,.3415,.3438,.346,.3483,.3505,.3528,.355,.3573,.3595,.3621,.3647,.3673,.3699,.3725,.3751,.3777,.3803,.3825,.3848,.3871,.3894,.3917,.3939,.3962,.3985,.4007,.4028,.4049,.407,.4091,.4113,.4134,.4155,.4176,.4197,.4218,.4239,.426,.4281,.4302,.4323,.4344,.4365,.4386,.4407,.4428,.4449,.447,.4492,.4513,.4534,.4555,.4576,.4597,.4617,.4637,.4656,.4676,.4696,.4716,.4736,.4755,.4775,.4795,.4815,.4835,.4855,.4874,.4894,.4914,.4934,.4954,.4974,.4994,.5013,.5032,.5051,.507,.5089,.5108,.5127,.5146,.5165,.5184,.5203,.5221,.5239,.5256,.5274,.5292,.531,.5327,.5345,.5363,.5381,.5398,.5418,.5437,.5457,.5476,.5496,.5515,.5534,.5554,.5573,.5593,.561,.5626,.5642,.5658,.5674,.569,.5707,.5723,.5739,.5755,.5771,.5787,.5803,.5821,.5839,.5857,.5875,.5893,.5911,.5929,.5947,.5965,.5983,.6001,.6019,.6036,.6054,.6071,.6089,.6106,.6123,.6141,.6158,.6176,.6193,.621,.6227,.6243,.6259,.6276,.6292,.6309,.6325,.6342,.6358,.6375,.6391,.6408,.6424,.644,.6456,.6472,.6489,.6505,.6521,.6537,.6553,.657,.6586,.6602,.6619,.6636,.6653,.6669,.6686,.6703,.672,.6737,.6753,.677,.6787,.6803,.6817,.6832,.6846,.686,.6874,.6889,.6903,.6917,.6932,.6946,.696,.6974,.6989,.7004,.7022,.704,.7058,.7076,.7095,.7113,.7131,.7149,.7168,.7186,.7203,.7217,.7231,.7245,.7259,.7273,.7287,.7301,.7315,.7328,.7342,.7356,.737,.7384,.7398,.7413,.7428,.7443,.7458,.7473,.7488,.7503,.7518,.7533,.7548,.7563,.7578,.7593,.7609,.7625,.7641,.7656,.7672,.7688,.7704,.772,.7735,.7751,.7767,.7783,.7799,.7814,.7828,.7843,.7858,.7873,.7888,.7903,.7917,.7932,.7947,.7962,.7977,.7992,.8007,.8023,.8039,.8055,.8071,.8087,.8103,.8119,.8135,.8151,.8167,.8183,.8199,.8214,.8229,.8244,.8259,.8274,.8288,.8303,.8318,.8333,.8348,.8363,.8378,.8393,.8408,.8423,.8438,.8453,.8468,.8483,.8498,.8513,.8528,.8543,.8558,.8573,.8589,.8604,.8618,.8632,.8647,.8661,.8676,.869,.8705,.8719,.8734,.8748,.8762,.8777,.8791,.8806,.882,.8834,.8848,.8862,.8876,.889,.8904,.8918,.8932,.8946,.896,.8974,.8988,.9002,.9015,.9029,.9042,.9056,.9069,.9083,.9096,.911,.9124,.9137,.9151,.9164,.9178,.9191,.9205,.922,.9235,.925,.9265,.928,.9295,.931,.9325,.934,.9355,.937,.9384,.9399,.9413,.9427,.9441,.9455,.9468,.9482,.9496,.951,.9524,.9537,.9551,.9565,.9579,.9593,.9607,.9622,.9638,.9653,.9668,.9684,.9699,.9714,.9729,.9745,.976,.9775,.9791,.9806,.982,.9834,.9849,.9863,.9877,.9892,.9906,.992,.9935,.9949,.9963,.9978,.9992,1.001,1.002,1.004,1.005,1.007,1.008,1.01,1.011,1.013,1.014,1.016,1.017,1.018,1.02,1.022,1.023,1.025,1.026,1.028,1.029,1.031,1.032,1.034,1.035,1.037,1.038,1.04,1.041,1.043,1.044,1.045,1.047,1.048,1.049,1.051,1.052,1.054,1.055,1.056,1.058,1.059,1.06,1.062,1.063,1.065,1.066,1.067,1.069,1.07,1.071,1.073,1.074,1.076,1.077,1.078,1.08,1.081,1.083,1.084,1.086,1.087,1.089,1.09,1.092,1.093,1.095,1.096,1.098,1.099,1.101,1.102,1.104,1.105,1.106,1.108,1.109,1.111,1.112,1.113,1.115,1.116,1.118,1.119,1.12,1.122,1.123,1.125,1.126,1.128,1.129,1.131,1.132,1.134,1.135,1.136,1.138,1.139,1.141,1.142,1.144,1.145,1.147,1.148,1.149,1.151,1.152,1.154,1.155,1.157,1.158,1.16,1.161,1.163,1.164,1.165,1.167,1.168,1.17,1.171,1.173,1.174,1.176,1.177,1.178,1.18,1.182,1.183,1.185,1.187,1.189,1.19,1.192,1.194,1.196,1.197,1.199,1.201,1.202,1.204,1.205,1.206,1.208,1.209,1.21,1.212,1.213,1.215,1.216,1.217,1.219,1.22,1.222,1.223,1.225,1.226,1.228,1.229,1.231,1.232,1.234,1.236,1.237,1.239,1.24,1.242,1.243,1.245,1.246,1.248,1.249,1.251,1.253,1.254,1.256,1.257,1.259,1.26,1.262,1.263,1.265,1.266,1.268,1.269,1.271,1.272,1.274,1.275,1.277,1.278,1.28,1.281,1.283,1.284,1.286,1.287,1.289,1.29,1.292,1.293,1.295,1.297,1.298,1.3,1.301,1.303,1.305,1.306,1.308,1.309,1.311,1.313,1.314,1.316,1.318,1.319,1.321,1.323,1.324,1.326,1.328,1.329,1.331,1.333,1.334,1.336,1.338,1.339,1.341,1.343,1.344,1.346,1.348,1.349,1.351,1.353,1.354,1.356,1.358,1.359,1.361,1.362,1.364,1.366,1.367,1.369,1.37,1.372,1.373,1.375,1.377,1.378,1.38,1.381,1.383,1.385,1.386,1.388,1.39,1.391,1.393,1.395,1.396,1.398,1.4,1.401,1.403,1.405,1.407,1.409,1.41,1.412,1.414,1.416,1.417,1.419,1.421,1.423,1.424,1.426,1.428,1.43,1.431,1.433,1.435,1.437,1.438,1.44,1.442,1.444,1.445,1.447,1.449,1.451,1.452,1.454,1.456,1.458,1.46,1.461,1.463,1.465,1.467,1.469,1.471,1.473,1.475,1.477,1.478,1.48,1.482,1.484,1.486,1.488,1.49,1.492,1.494,1.496,1.497,1.499,1.501,1.503,1.505,1.507,1.509,1.511,1.513,1.515,1.517,1.519,1.521,1.523,1.525,1.528,1.53,1.532,1.534,1.536,1.538,1.54,1.542,1.544,1.546,1.548,1.55,1.552,1.554,1.556,1.558,1.56,1.562,1.564,1.567,1.569,1.571,1.573,1.576,1.578,1.58,1.582,1.584,1.586,1.588,1.59,1.592,1.594,1.596,1.598,1.6,1.602,1.605,1.607,1.609,1.612,1.614,1.617,1.619,1.621,1.624,1.626,1.628,1.631,1.633,1.635,1.637,1.64,1.642,1.645,1.647,1.649,1.652,1.654,1.657,1.659,1.662,1.665,1.667,1.67,1.673,1.676,1.679,1.681,1.684,1.687,1.689,1.692,1.695,1.697,1.7,1.703,1.706,1.708,1.711,1.714,1.717,1.72,1.723,1.726,1.729,1.732,1.735,1.738,1.74,1.743,1.746,1.749,1.752,1.755,1.757,1.76,1.763,1.766,1.769,1.773,1.776,1.779,1.782,1.785,1.788,1.791,1.795,1.798,1.801,1.804,1.807,1.811,1.814,1.817,1.82,1.824,1.828,1.831,1.835,1.838,1.842,1.845,1.849,1.852,1.856,1.859,1.863,1.867,1.871,1.875,1.879,1.883,1.887,1.891,1.894,1.898,1.902,1.906,1.911,1.915,1.919,1.923,1.927,1.931,1.935,1.939,1.944,1.949,1.953,1.958,1.963,1.967,1.972,1.977,1.981,1.986,1.991,1.996,2.001,2.007,2.012,2.018,2.023,2.028,2.034,2.039,2.046,2.052,2.059,2.065,2.071,2.077,2.084,2.09,2.096,2.103,2.11,2.116,2.124,2.131,2.139,2.147,2.155,2.163,2.171,2.18,2.189,2.198,2.208,2.219,2.231,2.243,2.255,2.268,2.281,2.296,2.313,2.332,2.353,2.378,2.413,2.449,2.493,2.557,2.8],l9={1:t9,2:e9,3:n9,4:i9,5:s9,6:r9,7:o9,8:a9},mu=.001;function c9(r,t){const e=Math.trunc(t).toString();let n=[];return r=="diamond"?n=N8[e]:r=="gyroid"?n=Q8[e]:r=="fluorite"?n=W8[e]:r=="octet"&&(n=l9[e]),n==null?[]:n}let _s=[];var A1,pn,D0,gu,Ae;let Jr;var _u,xu=1;const h9=new v8,u9=60,fe={diameter:60,z:30,cellSize:2,type:"diamond",minThickness:.175,dielectric:2.35};let $r=2/64;const Ui=new x8(65,65,65),yu=201,Qn=new Float32Array(yu);function d9(r){return r<=0?0:r>1?fe.cellSize:(_s.length==0&&(_s=Su(fe)),bu(_s,r,mu))}function f9(){A1=document.getElementById("myCanvas"),Ae=new _8,gu=new fl,D0=new fu({antialias:!0}),D0.setPixelRatio(window.devicePixelRatio),Mu(),A1.appendChild(D0.domElement),pn=new Z7(Ae.camera,D0.domElement),pn.minDistance=2,pn.maxDistance=1e3,pn.maxPolarAngle=3.13,pn.minPolarAngle=.01,pn.target.set(0,0,-.2),pn.update(),Jr=new a8(Ae.camera,D0.domElement),Jr.addEventListener("dragging-changed",function(r){pn.enabled=!r.value}),Ae.scene.add(Jr.getHelper()),xu=window.devicePixelRatio?1/window.devicePixelRatio:1,_u=new y8(Y7,D0,Ae.scene,Ae.camera),v9(),C1(Ui,fe),Eu(Ae.quadTexture.image,fe)}function vu(r,t){const e=new Blob([t],{type:"text/plain"}),n=URL.createObjectURL(e),i=document.createElement("a");i.href=n,i.download=r,document.body.appendChild(i),i.click(),document.body.removeChild(i),URL.revokeObjectURL(n)}const p9=async()=>{const r="sp_d"+fe.diameter.toFixed(0)+".obj",t=h9.parse(Ae.unitSphere);vu(r,t)},m9=async()=>{const r=Math.floor(fe.diameter).toString(),t=Math.floor(fe.cellSize).toString(),n=fe.type+"D"+r+"c"+t+".txt",i=fe.diameter/2/(yu-1);let s=`origin 0 0 0
`;s+="voxelSize "+i.toString()+" "+i.toString()+" "+i.toString()+`
`,s+=`grid
`;const o=Qn.length;s+=o.toString()+` 1 1
`;for(let a=0;a<o;a++)s+=Qn[a].toFixed(4)+" ";s+=`
`,vu(n,s)};function Ci(){Eu(Ae.quadTexture.image,fe),Ae.quadTexture.needsUpdate=!0}function l1(r,t){const e=d9(r.value);t.textContent="thickness="+e.toFixed(3)+" mm"}const g9=document.getElementById("diameterInput"),_9=document.getElementById("cellSizeInput"),x9=document.getElementById("minThickInput"),y9=document.getElementById("dielectricInput"),v9=()=>{window.addEventListener("resize",Mu,!1),A1.addEventListener("click",M9),document.getElementById("saveMesh").addEventListener("click",p9),document.getElementById("saveGridTxt").addEventListener("click",()=>{wu(),m9()}),g9.addEventListener("change",function(){const c=Number(this.value),h=c/2;Ae.unitSphere.scale.set(h,h,h),Ae.unitSphere.updateMatrix(),fe.diameter=c,Ci()}),y9.addEventListener("change",function(){const c=Number(this.value);fe.dielectric=c,Ci()}),_9.addEventListener("change",function(){fe.cellSize=Number(this.value),C1(Ui,fe),Ci()}),x9.addEventListener("change",function(){fe.minThickness=Number(this.value),Ci()});const e=document.getElementById("zlayer"),n=document.getElementById("zlayerLabel");e.addEventListener("change",function(){fe.z=Number(e.value)*fe.diameter/1e3,n.textContent="z="+fe.z+"mm",Ci()}),document.getElementById("setZLayerButton").addEventListener("click",()=>{if(e){e.value="500";const c=new Event("change");e.dispatchEvent(c)}});const s=document.getElementById("densityInput"),o=document.getElementById("thicknessLabel");s.addEventListener("change",c=>{l1(s,o)}),document.getElementById("lookupThickness").addEventListener("click",()=>{l1(s,o)});const l=document.getElementById("latticeType");l.addEventListener("change",c=>{fe.type=l.value,C1(Ui,fe),Ci(),l1(s,o)})},M9=r=>{var t=1/xu,e=_u.pick(r.clientX*t,r.clientY*t);if(e<0)return null;console.log("pick",e);const n=Ae.GetInstanceById(e);n&&Jr.attach(n)};function Mu(){const r=window.innerWidth/window.innerHeight;Ae.camera.aspect=r,Ae.camera.updateProjectionMatrix();const t=Ae.quadCamera;t.left=-r,t.right=r,t.updateProjectionMatrix(),D0.setSize(window.innerWidth,window.innerHeight)}function S9(r,t,e,n){const i=e.width,s=4*(r+t*i);e.data[s]=n[0],e.data[s+1]=n[1],e.data[s+2]=n[2],e.data[s+3]=n[3]}function C1(r,t){const e=r.size,n=t.cellSize/(e[0]-1);$r=n;const i=new h0(n,n,n),s=new h0(t.cellSize,t.cellSize,t.cellSize);t.type=="diamond"?b8(i,s,r):t.type=="gyroid"?w8(i,s,r):t.type=="fluorite"?E8(i,s,r):t.type=="octet"&&T8(i,s,r)}function b9(r,t,e){const n=t*t;let i=(r*r-n)*((e+4)*r*r-2*n);return i/=3*r*r*(e-1)*(2*r*r-n),i<0&&(i=0),i>1&&(i=1),i}function Su(r){const t=r.cellSize,e=r.type;return c9(e,t)}function bu(r,t,e){if(r.length==0||t<=0)return 0;if(t<e)return t/e*r[1];const n=Math.floor(t/e);if(n>=r.length-1)return r[r.length-1];const i=n+1,s=t/e-n;return(1-s)*r[n]+s*r[i]}function wu(){const r=Qn.length,t=1;_s=Su(fe);const e=fe.dielectric;for(let n=0;n<r;n++){const i=n/r,s=b9(t,i,e);let o=bu(_s,s,mu);o<fe.minThickness&&(o=fe.minThickness),Qn[n]=o}}const Gr=[100,100,100,255],Wr=new h0;function Eu(r,t){wu();const e=r.width,n=r.height,i=t.diameter/e,s=t.diameter/n,o=t.cellSize,a=t.diameter/2,l=t.z,c=Ui.size,h=o/(c[0]-1),u=l-o*Math.floor(l/o),d=Math.floor(u/h),f=Ui.size;for(let m=0;m<n;m++){const _=(m+.5-n/2)*s;for(let g=0;g<e;g++){const p=(g+.5-e/2)*i,v=Math.floor(p/o),x=Math.floor(_/o),y=p-v*o,P=_-x*o,T=Math.floor(y/h),R=Math.floor(P/h);let I=1e3;T<f[0]&&R<f[1]&&d<f[2]&&(Wr.x=y/$r,Wr.y=P/$r,Wr.z=u/$r,I=Ui.TrilinearInterp(Wr,I));let b=0;const M=l-t.diameter/2,L=Math.sqrt(p*p+_*_+M*M),z=L/a;let O=0;const V=Math.floor(z*Qn.length);V<Qn.length?O=Qn[V]:L<a&&(O=fe.minThickness),I<O&&(b=1),Gr[0]=b*250,Gr[1]=b*150,Gr[2]=b*50,S9(g,m,r,Gr)}}}let c1=0;function Tu(r){var t=gu.getDelta();c1+=t,c1>.9/u9&&(D0.render(Ae.scene,Ae.camera),D0.autoClear=!1,D0.render(Ae.quadScene,Ae.quadCamera),c1=0),requestAnimationFrame(Tu)}f9();Tu();
