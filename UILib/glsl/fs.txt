#version 330
in vec3 pos;
in vec3 normal;
in vec2 UV;
out vec4 outcolor;
uniform vec3 lightpos;

// Values that stay constant for the whole mesh.
uniform sampler2D texSampler;

void main()
{
	float ambient = 0.02;
    vec3 L = vec3(10.0, 100, 300.0) - pos;
	float lightDist = length(L);
	L = (1.0/lightDist) * L;
	lightDist = lightDist+0.5;
	lightDist = min(3000, lightDist);
	lightDist = min(1, 5000000/lightDist/lightDist);
	vec3 N = normalize(normal);
	float diffuse = max(0, dot(L, N));
	vec3 V = -normalize(pos);
	vec3 H = L + V;
	H = normalize(H);
	float alpha=4;
	float specular = max(0,dot(N,H));
	specular = 0.5* pow(specular, alpha);
    float c = (diffuse*lightDist + ambient);
	vec4 texColor = texture( texSampler, UV );
    outcolor = c * texColor;
};
